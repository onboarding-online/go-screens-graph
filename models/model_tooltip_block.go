/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// TooltipBlock Styles for tooltip
type TooltipBlock struct {
	ImagePosition *TooltipImagePosition `json:"imagePosition,omitempty"`
	// Padding left for container
	PaddingLeft *float32 `json:"paddingLeft,omitempty"`
	// Padding right for container
	PaddingRight *float32 `json:"paddingRight,omitempty"`
	// Padding top for container
	PaddingTop *float32 `json:"paddingTop,omitempty"`
	// Padding bottom for container
	PaddingBottom *float32 `json:"paddingBottom,omitempty"`
}

// NewTooltipBlock instantiates a new TooltipBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTooltipBlock() *TooltipBlock {
	this := TooltipBlock{}
	return &this
}

// NewTooltipBlockWithDefaults instantiates a new TooltipBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTooltipBlockWithDefaults() *TooltipBlock {
	this := TooltipBlock{}
	return &this
}

// GetImagePosition returns the ImagePosition field value if set, zero value otherwise.
func (o *TooltipBlock) GetImagePosition() TooltipImagePosition {
	if o == nil || isNil(o.ImagePosition) {
		var ret TooltipImagePosition
		return ret
	}
	return *o.ImagePosition
}

// GetImagePositionOk returns a tuple with the ImagePosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooltipBlock) GetImagePositionOk() (*TooltipImagePosition, bool) {
	if o == nil || isNil(o.ImagePosition) {
    return nil, false
	}
	return o.ImagePosition, true
}

// HasImagePosition returns a boolean if a field has been set.
func (o *TooltipBlock) HasImagePosition() bool {
	if o != nil && !isNil(o.ImagePosition) {
		return true
	}

	return false
}

// SetImagePosition gets a reference to the given TooltipImagePosition and assigns it to the ImagePosition field.
func (o *TooltipBlock) SetImagePosition(v TooltipImagePosition) {
	o.ImagePosition = &v
}

// GetPaddingLeft returns the PaddingLeft field value if set, zero value otherwise.
func (o *TooltipBlock) GetPaddingLeft() float32 {
	if o == nil || isNil(o.PaddingLeft) {
		var ret float32
		return ret
	}
	return *o.PaddingLeft
}

// GetPaddingLeftOk returns a tuple with the PaddingLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooltipBlock) GetPaddingLeftOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingLeft) {
    return nil, false
	}
	return o.PaddingLeft, true
}

// HasPaddingLeft returns a boolean if a field has been set.
func (o *TooltipBlock) HasPaddingLeft() bool {
	if o != nil && !isNil(o.PaddingLeft) {
		return true
	}

	return false
}

// SetPaddingLeft gets a reference to the given float32 and assigns it to the PaddingLeft field.
func (o *TooltipBlock) SetPaddingLeft(v float32) {
	o.PaddingLeft = &v
}

// GetPaddingRight returns the PaddingRight field value if set, zero value otherwise.
func (o *TooltipBlock) GetPaddingRight() float32 {
	if o == nil || isNil(o.PaddingRight) {
		var ret float32
		return ret
	}
	return *o.PaddingRight
}

// GetPaddingRightOk returns a tuple with the PaddingRight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooltipBlock) GetPaddingRightOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingRight) {
    return nil, false
	}
	return o.PaddingRight, true
}

// HasPaddingRight returns a boolean if a field has been set.
func (o *TooltipBlock) HasPaddingRight() bool {
	if o != nil && !isNil(o.PaddingRight) {
		return true
	}

	return false
}

// SetPaddingRight gets a reference to the given float32 and assigns it to the PaddingRight field.
func (o *TooltipBlock) SetPaddingRight(v float32) {
	o.PaddingRight = &v
}

// GetPaddingTop returns the PaddingTop field value if set, zero value otherwise.
func (o *TooltipBlock) GetPaddingTop() float32 {
	if o == nil || isNil(o.PaddingTop) {
		var ret float32
		return ret
	}
	return *o.PaddingTop
}

// GetPaddingTopOk returns a tuple with the PaddingTop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooltipBlock) GetPaddingTopOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingTop) {
    return nil, false
	}
	return o.PaddingTop, true
}

// HasPaddingTop returns a boolean if a field has been set.
func (o *TooltipBlock) HasPaddingTop() bool {
	if o != nil && !isNil(o.PaddingTop) {
		return true
	}

	return false
}

// SetPaddingTop gets a reference to the given float32 and assigns it to the PaddingTop field.
func (o *TooltipBlock) SetPaddingTop(v float32) {
	o.PaddingTop = &v
}

// GetPaddingBottom returns the PaddingBottom field value if set, zero value otherwise.
func (o *TooltipBlock) GetPaddingBottom() float32 {
	if o == nil || isNil(o.PaddingBottom) {
		var ret float32
		return ret
	}
	return *o.PaddingBottom
}

// GetPaddingBottomOk returns a tuple with the PaddingBottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooltipBlock) GetPaddingBottomOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingBottom) {
    return nil, false
	}
	return o.PaddingBottom, true
}

// HasPaddingBottom returns a boolean if a field has been set.
func (o *TooltipBlock) HasPaddingBottom() bool {
	if o != nil && !isNil(o.PaddingBottom) {
		return true
	}

	return false
}

// SetPaddingBottom gets a reference to the given float32 and assigns it to the PaddingBottom field.
func (o *TooltipBlock) SetPaddingBottom(v float32) {
	o.PaddingBottom = &v
}

func (o TooltipBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ImagePosition) {
		toSerialize["imagePosition"] = o.ImagePosition
	}
	if !isNil(o.PaddingLeft) {
		toSerialize["paddingLeft"] = o.PaddingLeft
	}
	if !isNil(o.PaddingRight) {
		toSerialize["paddingRight"] = o.PaddingRight
	}
	if !isNil(o.PaddingTop) {
		toSerialize["paddingTop"] = o.PaddingTop
	}
	if !isNil(o.PaddingBottom) {
		toSerialize["paddingBottom"] = o.PaddingBottom
	}
	return json.Marshal(toSerialize)
}

type NullableTooltipBlock struct {
	value *TooltipBlock
	isSet bool
}

func (v NullableTooltipBlock) Get() *TooltipBlock {
	return v.value
}

func (v *NullableTooltipBlock) Set(val *TooltipBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableTooltipBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableTooltipBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTooltipBlock(val *TooltipBlock) *NullableTooltipBlock {
	return &NullableTooltipBlock{value: val, isSet: true}
}

func (v NullableTooltipBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTooltipBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


