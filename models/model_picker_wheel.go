/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PickerWheel Picker wheel
type PickerWheel struct {
	Kind PickerWheelKind `json:"kind"`
	Options PickerOptions `json:"options"`
	// Localized string
	DefaultValue map[string]string `json:"defaultValue"`
}

// NewPickerWheel instantiates a new PickerWheel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPickerWheel(kind PickerWheelKind, options PickerOptions, defaultValue map[string]string) *PickerWheel {
	this := PickerWheel{}
	this.Kind = kind
	this.Options = options
	this.DefaultValue = defaultValue
	return &this
}

// NewPickerWheelWithDefaults instantiates a new PickerWheel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPickerWheelWithDefaults() *PickerWheel {
	this := PickerWheel{}
	return &this
}

// GetKind returns the Kind field value
func (o *PickerWheel) GetKind() PickerWheelKind {
	if o == nil {
		var ret PickerWheelKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *PickerWheel) GetKindOk() (*PickerWheelKind, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *PickerWheel) SetKind(v PickerWheelKind) {
	o.Kind = v
}

// GetOptions returns the Options field value
func (o *PickerWheel) GetOptions() PickerOptions {
	if o == nil {
		var ret PickerOptions
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *PickerWheel) GetOptionsOk() (*PickerOptions, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *PickerWheel) SetOptions(v PickerOptions) {
	o.Options = v
}

// GetDefaultValue returns the DefaultValue field value
func (o *PickerWheel) GetDefaultValue() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value
// and a boolean to check if the value has been set.
func (o *PickerWheel) GetDefaultValueOk() (*map[string]string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DefaultValue, true
}

// SetDefaultValue sets field value
func (o *PickerWheel) SetDefaultValue(v map[string]string) {
	o.DefaultValue = v
}

func (o PickerWheel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["options"] = o.Options
	}
	if true {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	return json.Marshal(toSerialize)
}

type NullablePickerWheel struct {
	value *PickerWheel
	isSet bool
}

func (v NullablePickerWheel) Get() *PickerWheel {
	return v.value
}

func (v *NullablePickerWheel) Set(val *PickerWheel) {
	v.value = val
	v.isSet = true
}

func (v NullablePickerWheel) IsSet() bool {
	return v.isSet
}

func (v *NullablePickerWheel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePickerWheel(val *PickerWheel) *NullablePickerWheel {
	return &NullablePickerWheel{value: val, isSet: true}
}

func (v NullablePickerWheel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePickerWheel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


