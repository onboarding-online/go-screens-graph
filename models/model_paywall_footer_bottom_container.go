/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PaywallFooterBottomContainer Paywall footer bottom container
type PaywallFooterBottomContainer struct {
	PrivacyPolicy *NavLink `json:"privacyPolicy,omitempty"`
	Restore *Text `json:"restore,omitempty"`
	TermsOfUse *NavLink `json:"termsOfUse,omitempty"`
	Styles PaywallFooterBottomContainerBlock `json:"styles"`
}

// NewPaywallFooterBottomContainer instantiates a new PaywallFooterBottomContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaywallFooterBottomContainer(styles PaywallFooterBottomContainerBlock) *PaywallFooterBottomContainer {
	this := PaywallFooterBottomContainer{}
	this.Styles = styles
	return &this
}

// NewPaywallFooterBottomContainerWithDefaults instantiates a new PaywallFooterBottomContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaywallFooterBottomContainerWithDefaults() *PaywallFooterBottomContainer {
	this := PaywallFooterBottomContainer{}
	return &this
}

// GetPrivacyPolicy returns the PrivacyPolicy field value if set, zero value otherwise.
func (o *PaywallFooterBottomContainer) GetPrivacyPolicy() NavLink {
	if o == nil || isNil(o.PrivacyPolicy) {
		var ret NavLink
		return ret
	}
	return *o.PrivacyPolicy
}

// GetPrivacyPolicyOk returns a tuple with the PrivacyPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallFooterBottomContainer) GetPrivacyPolicyOk() (*NavLink, bool) {
	if o == nil || isNil(o.PrivacyPolicy) {
    return nil, false
	}
	return o.PrivacyPolicy, true
}

// HasPrivacyPolicy returns a boolean if a field has been set.
func (o *PaywallFooterBottomContainer) HasPrivacyPolicy() bool {
	if o != nil && !isNil(o.PrivacyPolicy) {
		return true
	}

	return false
}

// SetPrivacyPolicy gets a reference to the given NavLink and assigns it to the PrivacyPolicy field.
func (o *PaywallFooterBottomContainer) SetPrivacyPolicy(v NavLink) {
	o.PrivacyPolicy = &v
}

// GetRestore returns the Restore field value if set, zero value otherwise.
func (o *PaywallFooterBottomContainer) GetRestore() Text {
	if o == nil || isNil(o.Restore) {
		var ret Text
		return ret
	}
	return *o.Restore
}

// GetRestoreOk returns a tuple with the Restore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallFooterBottomContainer) GetRestoreOk() (*Text, bool) {
	if o == nil || isNil(o.Restore) {
    return nil, false
	}
	return o.Restore, true
}

// HasRestore returns a boolean if a field has been set.
func (o *PaywallFooterBottomContainer) HasRestore() bool {
	if o != nil && !isNil(o.Restore) {
		return true
	}

	return false
}

// SetRestore gets a reference to the given Text and assigns it to the Restore field.
func (o *PaywallFooterBottomContainer) SetRestore(v Text) {
	o.Restore = &v
}

// GetTermsOfUse returns the TermsOfUse field value if set, zero value otherwise.
func (o *PaywallFooterBottomContainer) GetTermsOfUse() NavLink {
	if o == nil || isNil(o.TermsOfUse) {
		var ret NavLink
		return ret
	}
	return *o.TermsOfUse
}

// GetTermsOfUseOk returns a tuple with the TermsOfUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallFooterBottomContainer) GetTermsOfUseOk() (*NavLink, bool) {
	if o == nil || isNil(o.TermsOfUse) {
    return nil, false
	}
	return o.TermsOfUse, true
}

// HasTermsOfUse returns a boolean if a field has been set.
func (o *PaywallFooterBottomContainer) HasTermsOfUse() bool {
	if o != nil && !isNil(o.TermsOfUse) {
		return true
	}

	return false
}

// SetTermsOfUse gets a reference to the given NavLink and assigns it to the TermsOfUse field.
func (o *PaywallFooterBottomContainer) SetTermsOfUse(v NavLink) {
	o.TermsOfUse = &v
}

// GetStyles returns the Styles field value
func (o *PaywallFooterBottomContainer) GetStyles() PaywallFooterBottomContainerBlock {
	if o == nil {
		var ret PaywallFooterBottomContainerBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *PaywallFooterBottomContainer) GetStylesOk() (*PaywallFooterBottomContainerBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *PaywallFooterBottomContainer) SetStyles(v PaywallFooterBottomContainerBlock) {
	o.Styles = v
}

func (o PaywallFooterBottomContainer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PrivacyPolicy) {
		toSerialize["privacyPolicy"] = o.PrivacyPolicy
	}
	if !isNil(o.Restore) {
		toSerialize["restore"] = o.Restore
	}
	if !isNil(o.TermsOfUse) {
		toSerialize["termsOfUse"] = o.TermsOfUse
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	return json.Marshal(toSerialize)
}

type NullablePaywallFooterBottomContainer struct {
	value *PaywallFooterBottomContainer
	isSet bool
}

func (v NullablePaywallFooterBottomContainer) Get() *PaywallFooterBottomContainer {
	return v.value
}

func (v *NullablePaywallFooterBottomContainer) Set(val *PaywallFooterBottomContainer) {
	v.value = val
	v.isSet = true
}

func (v NullablePaywallFooterBottomContainer) IsSet() bool {
	return v.isSet
}

func (v *NullablePaywallFooterBottomContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaywallFooterBottomContainer(val *PaywallFooterBottomContainer) *NullablePaywallFooterBottomContainer {
	return &NullablePaywallFooterBottomContainer{value: val, isSet: true}
}

func (v NullablePaywallFooterBottomContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaywallFooterBottomContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


