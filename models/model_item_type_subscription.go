/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ItemTypeSubscription Structure of full collection item type for subscription list
type ItemTypeSubscription struct {
	SubscriptionId string `json:"subscriptionId"`
	CheckBox CheckBox `json:"checkBox"`
	LeftLabelTop Text `json:"leftLabelTop"`
	LeftLabelBottom Text `json:"leftLabelBottom"`
	RightLabelTop Text `json:"rightLabelTop"`
	RightLabelBottom Text `json:"rightLabelBottom"`
	DescriptionLabel *Text `json:"descriptionLabel,omitempty"`
	PurchaseButtonLabel *Text `json:"purchaseButtonLabel,omitempty"`
	IsSelected bool `json:"isSelected"`
	Badge *Badge `json:"badge,omitempty"`
	Image *Image `json:"image,omitempty"`
	Box Box `json:"box"`
	Weight float32 `json:"weight"`
	Styles ItemTypeSubscriptionBlock `json:"styles"`
}

// NewItemTypeSubscription instantiates a new ItemTypeSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemTypeSubscription(subscriptionId string, checkBox CheckBox, leftLabelTop Text, leftLabelBottom Text, rightLabelTop Text, rightLabelBottom Text, isSelected bool, box Box, weight float32, styles ItemTypeSubscriptionBlock) *ItemTypeSubscription {
	this := ItemTypeSubscription{}
	this.SubscriptionId = subscriptionId
	this.CheckBox = checkBox
	this.LeftLabelTop = leftLabelTop
	this.LeftLabelBottom = leftLabelBottom
	this.RightLabelTop = rightLabelTop
	this.RightLabelBottom = rightLabelBottom
	this.IsSelected = isSelected
	this.Box = box
	this.Weight = weight
	this.Styles = styles
	return &this
}

// NewItemTypeSubscriptionWithDefaults instantiates a new ItemTypeSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemTypeSubscriptionWithDefaults() *ItemTypeSubscription {
	this := ItemTypeSubscription{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *ItemTypeSubscription) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *ItemTypeSubscription) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetCheckBox returns the CheckBox field value
func (o *ItemTypeSubscription) GetCheckBox() CheckBox {
	if o == nil {
		var ret CheckBox
		return ret
	}

	return o.CheckBox
}

// GetCheckBoxOk returns a tuple with the CheckBox field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetCheckBoxOk() (*CheckBox, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CheckBox, true
}

// SetCheckBox sets field value
func (o *ItemTypeSubscription) SetCheckBox(v CheckBox) {
	o.CheckBox = v
}

// GetLeftLabelTop returns the LeftLabelTop field value
func (o *ItemTypeSubscription) GetLeftLabelTop() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.LeftLabelTop
}

// GetLeftLabelTopOk returns a tuple with the LeftLabelTop field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetLeftLabelTopOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LeftLabelTop, true
}

// SetLeftLabelTop sets field value
func (o *ItemTypeSubscription) SetLeftLabelTop(v Text) {
	o.LeftLabelTop = v
}

// GetLeftLabelBottom returns the LeftLabelBottom field value
func (o *ItemTypeSubscription) GetLeftLabelBottom() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.LeftLabelBottom
}

// GetLeftLabelBottomOk returns a tuple with the LeftLabelBottom field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetLeftLabelBottomOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LeftLabelBottom, true
}

// SetLeftLabelBottom sets field value
func (o *ItemTypeSubscription) SetLeftLabelBottom(v Text) {
	o.LeftLabelBottom = v
}

// GetRightLabelTop returns the RightLabelTop field value
func (o *ItemTypeSubscription) GetRightLabelTop() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.RightLabelTop
}

// GetRightLabelTopOk returns a tuple with the RightLabelTop field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetRightLabelTopOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RightLabelTop, true
}

// SetRightLabelTop sets field value
func (o *ItemTypeSubscription) SetRightLabelTop(v Text) {
	o.RightLabelTop = v
}

// GetRightLabelBottom returns the RightLabelBottom field value
func (o *ItemTypeSubscription) GetRightLabelBottom() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.RightLabelBottom
}

// GetRightLabelBottomOk returns a tuple with the RightLabelBottom field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetRightLabelBottomOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RightLabelBottom, true
}

// SetRightLabelBottom sets field value
func (o *ItemTypeSubscription) SetRightLabelBottom(v Text) {
	o.RightLabelBottom = v
}

// GetDescriptionLabel returns the DescriptionLabel field value if set, zero value otherwise.
func (o *ItemTypeSubscription) GetDescriptionLabel() Text {
	if o == nil || isNil(o.DescriptionLabel) {
		var ret Text
		return ret
	}
	return *o.DescriptionLabel
}

// GetDescriptionLabelOk returns a tuple with the DescriptionLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetDescriptionLabelOk() (*Text, bool) {
	if o == nil || isNil(o.DescriptionLabel) {
    return nil, false
	}
	return o.DescriptionLabel, true
}

// HasDescriptionLabel returns a boolean if a field has been set.
func (o *ItemTypeSubscription) HasDescriptionLabel() bool {
	if o != nil && !isNil(o.DescriptionLabel) {
		return true
	}

	return false
}

// SetDescriptionLabel gets a reference to the given Text and assigns it to the DescriptionLabel field.
func (o *ItemTypeSubscription) SetDescriptionLabel(v Text) {
	o.DescriptionLabel = &v
}

// GetPurchaseButtonLabel returns the PurchaseButtonLabel field value if set, zero value otherwise.
func (o *ItemTypeSubscription) GetPurchaseButtonLabel() Text {
	if o == nil || isNil(o.PurchaseButtonLabel) {
		var ret Text
		return ret
	}
	return *o.PurchaseButtonLabel
}

// GetPurchaseButtonLabelOk returns a tuple with the PurchaseButtonLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetPurchaseButtonLabelOk() (*Text, bool) {
	if o == nil || isNil(o.PurchaseButtonLabel) {
    return nil, false
	}
	return o.PurchaseButtonLabel, true
}

// HasPurchaseButtonLabel returns a boolean if a field has been set.
func (o *ItemTypeSubscription) HasPurchaseButtonLabel() bool {
	if o != nil && !isNil(o.PurchaseButtonLabel) {
		return true
	}

	return false
}

// SetPurchaseButtonLabel gets a reference to the given Text and assigns it to the PurchaseButtonLabel field.
func (o *ItemTypeSubscription) SetPurchaseButtonLabel(v Text) {
	o.PurchaseButtonLabel = &v
}

// GetIsSelected returns the IsSelected field value
func (o *ItemTypeSubscription) GetIsSelected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSelected
}

// GetIsSelectedOk returns a tuple with the IsSelected field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetIsSelectedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsSelected, true
}

// SetIsSelected sets field value
func (o *ItemTypeSubscription) SetIsSelected(v bool) {
	o.IsSelected = v
}

// GetBadge returns the Badge field value if set, zero value otherwise.
func (o *ItemTypeSubscription) GetBadge() Badge {
	if o == nil || isNil(o.Badge) {
		var ret Badge
		return ret
	}
	return *o.Badge
}

// GetBadgeOk returns a tuple with the Badge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetBadgeOk() (*Badge, bool) {
	if o == nil || isNil(o.Badge) {
    return nil, false
	}
	return o.Badge, true
}

// HasBadge returns a boolean if a field has been set.
func (o *ItemTypeSubscription) HasBadge() bool {
	if o != nil && !isNil(o.Badge) {
		return true
	}

	return false
}

// SetBadge gets a reference to the given Badge and assigns it to the Badge field.
func (o *ItemTypeSubscription) SetBadge(v Badge) {
	o.Badge = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ItemTypeSubscription) GetImage() Image {
	if o == nil || isNil(o.Image) {
		var ret Image
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetImageOk() (*Image, bool) {
	if o == nil || isNil(o.Image) {
    return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ItemTypeSubscription) HasImage() bool {
	if o != nil && !isNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given Image and assigns it to the Image field.
func (o *ItemTypeSubscription) SetImage(v Image) {
	o.Image = &v
}

// GetBox returns the Box field value
func (o *ItemTypeSubscription) GetBox() Box {
	if o == nil {
		var ret Box
		return ret
	}

	return o.Box
}

// GetBoxOk returns a tuple with the Box field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetBoxOk() (*Box, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Box, true
}

// SetBox sets field value
func (o *ItemTypeSubscription) SetBox(v Box) {
	o.Box = v
}

// GetWeight returns the Weight field value
func (o *ItemTypeSubscription) GetWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetWeightOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *ItemTypeSubscription) SetWeight(v float32) {
	o.Weight = v
}

// GetStyles returns the Styles field value
func (o *ItemTypeSubscription) GetStyles() ItemTypeSubscriptionBlock {
	if o == nil {
		var ret ItemTypeSubscriptionBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *ItemTypeSubscription) GetStylesOk() (*ItemTypeSubscriptionBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *ItemTypeSubscription) SetStyles(v ItemTypeSubscriptionBlock) {
	o.Styles = v
}

func (o ItemTypeSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if true {
		toSerialize["checkBox"] = o.CheckBox
	}
	if true {
		toSerialize["leftLabelTop"] = o.LeftLabelTop
	}
	if true {
		toSerialize["leftLabelBottom"] = o.LeftLabelBottom
	}
	if true {
		toSerialize["rightLabelTop"] = o.RightLabelTop
	}
	if true {
		toSerialize["rightLabelBottom"] = o.RightLabelBottom
	}
	if !isNil(o.DescriptionLabel) {
		toSerialize["descriptionLabel"] = o.DescriptionLabel
	}
	if !isNil(o.PurchaseButtonLabel) {
		toSerialize["purchaseButtonLabel"] = o.PurchaseButtonLabel
	}
	if true {
		toSerialize["isSelected"] = o.IsSelected
	}
	if !isNil(o.Badge) {
		toSerialize["badge"] = o.Badge
	}
	if !isNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if true {
		toSerialize["box"] = o.Box
	}
	if true {
		toSerialize["weight"] = o.Weight
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	return json.Marshal(toSerialize)
}

type NullableItemTypeSubscription struct {
	value *ItemTypeSubscription
	isSet bool
}

func (v NullableItemTypeSubscription) Get() *ItemTypeSubscription {
	return v.value
}

func (v *NullableItemTypeSubscription) Set(val *ItemTypeSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableItemTypeSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableItemTypeSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemTypeSubscription(val *ItemTypeSubscription) *NullableItemTypeSubscription {
	return &NullableItemTypeSubscription{value: val, isSet: true}
}

func (v NullableItemTypeSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemTypeSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


