/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ImageScaleMode Image scale mode
type ImageScaleMode string

// List of ImageScaleMode
const (
	IMAGESCALEMODE_SCALE_TO_FILL ImageScaleMode = "scaleToFill"
	IMAGESCALEMODE_SCALE_ASPECT_FIT ImageScaleMode = "scaleAspectFit"
	IMAGESCALEMODE_SCALE_ASPECT_FILL ImageScaleMode = "scaleAspectFill"
	IMAGESCALEMODE_CENTER ImageScaleMode = "center"
	IMAGESCALEMODE_TOP ImageScaleMode = "top"
	IMAGESCALEMODE_BOTTOM ImageScaleMode = "bottom"
	IMAGESCALEMODE_LEFT ImageScaleMode = "left"
	IMAGESCALEMODE_RIGHT ImageScaleMode = "right"
)

// All allowed values of ImageScaleMode enum
var AllowedImageScaleModeEnumValues = []ImageScaleMode{
	"scaleToFill",
	"scaleAspectFit",
	"scaleAspectFill",
	"center",
	"top",
	"bottom",
	"left",
	"right",
}

func (v *ImageScaleMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ImageScaleMode(value)
	for _, existing := range AllowedImageScaleModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ImageScaleMode", value)
}

// NewImageScaleModeFromValue returns a pointer to a valid ImageScaleMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewImageScaleModeFromValue(v string) (*ImageScaleMode, error) {
	ev := ImageScaleMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ImageScaleMode: valid values are %v", v, AllowedImageScaleModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImageScaleMode) IsValid() bool {
	for _, existing := range AllowedImageScaleModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ImageScaleMode value
func (v ImageScaleMode) Ptr() *ImageScaleMode {
	return &v
}

type NullableImageScaleMode struct {
	value *ImageScaleMode
	isSet bool
}

func (v NullableImageScaleMode) Get() *ImageScaleMode {
	return v.value
}

func (v *NullableImageScaleMode) Set(val *ImageScaleMode) {
	v.value = val
	v.isSet = true
}

func (v NullableImageScaleMode) IsSet() bool {
	return v.isSet
}

func (v *NullableImageScaleMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageScaleMode(val *ImageScaleMode) *NullableImageScaleMode {
	return &NullableImageScaleMode{value: val, isSet: true}
}

func (v NullableImageScaleMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageScaleMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

