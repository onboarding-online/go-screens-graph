/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenTitleSubtitleFieldAllOf Screen - Title/Subtitle/Field
type ScreenTitleSubtitleFieldAllOf struct {
	TitleSubtitleFieldDescription string `json:"titleSubtitleFieldDescription"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	Field Field `json:"field"`
}

// NewScreenTitleSubtitleFieldAllOf instantiates a new ScreenTitleSubtitleFieldAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenTitleSubtitleFieldAllOf(titleSubtitleFieldDescription string, title Text, subtitle Text, field Field) *ScreenTitleSubtitleFieldAllOf {
	this := ScreenTitleSubtitleFieldAllOf{}
	this.TitleSubtitleFieldDescription = titleSubtitleFieldDescription
	this.Title = title
	this.Subtitle = subtitle
	this.Field = field
	return &this
}

// NewScreenTitleSubtitleFieldAllOfWithDefaults instantiates a new ScreenTitleSubtitleFieldAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenTitleSubtitleFieldAllOfWithDefaults() *ScreenTitleSubtitleFieldAllOf {
	this := ScreenTitleSubtitleFieldAllOf{}
	return &this
}

// GetTitleSubtitleFieldDescription returns the TitleSubtitleFieldDescription field value
func (o *ScreenTitleSubtitleFieldAllOf) GetTitleSubtitleFieldDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TitleSubtitleFieldDescription
}

// GetTitleSubtitleFieldDescriptionOk returns a tuple with the TitleSubtitleFieldDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleFieldAllOf) GetTitleSubtitleFieldDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TitleSubtitleFieldDescription, true
}

// SetTitleSubtitleFieldDescription sets field value
func (o *ScreenTitleSubtitleFieldAllOf) SetTitleSubtitleFieldDescription(v string) {
	o.TitleSubtitleFieldDescription = v
}

// GetTitle returns the Title field value
func (o *ScreenTitleSubtitleFieldAllOf) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleFieldAllOf) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenTitleSubtitleFieldAllOf) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenTitleSubtitleFieldAllOf) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleFieldAllOf) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenTitleSubtitleFieldAllOf) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetField returns the Field field value
func (o *ScreenTitleSubtitleFieldAllOf) GetField() Field {
	if o == nil {
		var ret Field
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleFieldAllOf) GetFieldOk() (*Field, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *ScreenTitleSubtitleFieldAllOf) SetField(v Field) {
	o.Field = v
}

func (o ScreenTitleSubtitleFieldAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["titleSubtitleFieldDescription"] = o.TitleSubtitleFieldDescription
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["field"] = o.Field
	}
	return json.Marshal(toSerialize)
}

type NullableScreenTitleSubtitleFieldAllOf struct {
	value *ScreenTitleSubtitleFieldAllOf
	isSet bool
}

func (v NullableScreenTitleSubtitleFieldAllOf) Get() *ScreenTitleSubtitleFieldAllOf {
	return v.value
}

func (v *NullableScreenTitleSubtitleFieldAllOf) Set(val *ScreenTitleSubtitleFieldAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenTitleSubtitleFieldAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenTitleSubtitleFieldAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenTitleSubtitleFieldAllOf(val *ScreenTitleSubtitleFieldAllOf) *NullableScreenTitleSubtitleFieldAllOf {
	return &NullableScreenTitleSubtitleFieldAllOf{value: val, isSet: true}
}

func (v NullableScreenTitleSubtitleFieldAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenTitleSubtitleFieldAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


