/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// CheckBoxKind Kind of checkbox
type CheckBoxKind string

// List of CheckBoxKind
const (
	CHECKBOXKIND_SQUARE CheckBoxKind = "square"
	CHECKBOXKIND_CIRCLE CheckBoxKind = "circle"
)

// All allowed values of CheckBoxKind enum
var AllowedCheckBoxKindEnumValues = []CheckBoxKind{
	"square",
	"circle",
}

func (v *CheckBoxKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CheckBoxKind(value)
	for _, existing := range AllowedCheckBoxKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CheckBoxKind", value)
}

// NewCheckBoxKindFromValue returns a pointer to a valid CheckBoxKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCheckBoxKindFromValue(v string) (*CheckBoxKind, error) {
	ev := CheckBoxKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CheckBoxKind: valid values are %v", v, AllowedCheckBoxKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CheckBoxKind) IsValid() bool {
	for _, existing := range AllowedCheckBoxKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CheckBoxKind value
func (v CheckBoxKind) Ptr() *CheckBoxKind {
	return &v
}

type NullableCheckBoxKind struct {
	value *CheckBoxKind
	isSet bool
}

func (v NullableCheckBoxKind) Get() *CheckBoxKind {
	return v.value
}

func (v *NullableCheckBoxKind) Set(val *CheckBoxKind) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckBoxKind) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckBoxKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckBoxKind(val *CheckBoxKind) *NullableCheckBoxKind {
	return &NullableCheckBoxKind{value: val, isSet: true}
}

func (v NullableCheckBoxKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckBoxKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

