/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// VerticalAlignment Vertical alignment
type VerticalAlignment string

// List of VerticalAlignment
const (
	VERTICALALIGNMENT_TOP VerticalAlignment = "top"
	VERTICALALIGNMENT_CENTER VerticalAlignment = "center"
	VERTICALALIGNMENT_BOTTOM VerticalAlignment = "bottom"
)

// All allowed values of VerticalAlignment enum
var AllowedVerticalAlignmentEnumValues = []VerticalAlignment{
	"top",
	"center",
	"bottom",
}

func (v *VerticalAlignment) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VerticalAlignment(value)
	for _, existing := range AllowedVerticalAlignmentEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VerticalAlignment", value)
}

// NewVerticalAlignmentFromValue returns a pointer to a valid VerticalAlignment
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVerticalAlignmentFromValue(v string) (*VerticalAlignment, error) {
	ev := VerticalAlignment(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VerticalAlignment: valid values are %v", v, AllowedVerticalAlignmentEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VerticalAlignment) IsValid() bool {
	for _, existing := range AllowedVerticalAlignmentEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VerticalAlignment value
func (v VerticalAlignment) Ptr() *VerticalAlignment {
	return &v
}

type NullableVerticalAlignment struct {
	value *VerticalAlignment
	isSet bool
}

func (v NullableVerticalAlignment) Get() *VerticalAlignment {
	return v.value
}

func (v *NullableVerticalAlignment) Set(val *VerticalAlignment) {
	v.value = val
	v.isSet = true
}

func (v NullableVerticalAlignment) IsSet() bool {
	return v.isSet
}

func (v *NullableVerticalAlignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerticalAlignment(val *VerticalAlignment) *NullableVerticalAlignment {
	return &NullableVerticalAlignment{value: val, isSet: true}
}

func (v NullableVerticalAlignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerticalAlignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

