/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GradientKind Gradient kind
type GradientKind string

// List of GradientKind
const (
	GRADIENTKIND_GRADIENT_KIND1 GradientKind = "GradientKind1"
	GRADIENTKIND_GRADIENT_KIND2 GradientKind = "GradientKind2"
	GRADIENTKIND_GRADIENT_KIND3 GradientKind = "GradientKind3"
	GRADIENTKIND_GRADIENT_KIND4 GradientKind = "GradientKind4"
	GRADIENTKIND_GRADIENT_KIND5 GradientKind = "GradientKind5"
	GRADIENTKIND_GRADIENT_KIND6 GradientKind = "GradientKind6"
	GRADIENTKIND_GRADIENT_KIND7 GradientKind = "GradientKind7"
	GRADIENTKIND_GRADIENT_KIND8 GradientKind = "GradientKind8"
	GRADIENTKIND_GRADIENT_KIND9 GradientKind = "GradientKind9"
	GRADIENTKIND_GRADIENT_KIND10 GradientKind = "GradientKind10"
)

// All allowed values of GradientKind enum
var AllowedGradientKindEnumValues = []GradientKind{
	"GradientKind1",
	"GradientKind2",
	"GradientKind3",
	"GradientKind4",
	"GradientKind5",
	"GradientKind6",
	"GradientKind7",
	"GradientKind8",
	"GradientKind9",
	"GradientKind10",
}

func (v *GradientKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GradientKind(value)
	for _, existing := range AllowedGradientKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GradientKind", value)
}

// NewGradientKindFromValue returns a pointer to a valid GradientKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGradientKindFromValue(v string) (*GradientKind, error) {
	ev := GradientKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GradientKind: valid values are %v", v, AllowedGradientKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GradientKind) IsValid() bool {
	for _, existing := range AllowedGradientKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GradientKind value
func (v GradientKind) Ptr() *GradientKind {
	return &v
}

type NullableGradientKind struct {
	value *GradientKind
	isSet bool
}

func (v NullableGradientKind) Get() *GradientKind {
	return v.value
}

func (v *NullableGradientKind) Set(val *GradientKind) {
	v.value = val
	v.isSet = true
}

func (v NullableGradientKind) IsSet() bool {
	return v.isSet
}

func (v *NullableGradientKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGradientKind(val *GradientKind) *NullableGradientKind {
	return &NullableGradientKind{value: val, isSet: true}
}

func (v NullableGradientKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGradientKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

