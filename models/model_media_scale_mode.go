/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// MediaScaleMode Media scale mode
type MediaScaleMode string

// List of MediaScaleMode
const (
	MEDIASCALEMODE_SCALE_TO_FILL MediaScaleMode = "scaleToFill"
	MEDIASCALEMODE_SCALE_ASPECT_FIT MediaScaleMode = "scaleAspectFit"
	MEDIASCALEMODE_SCALE_ASPECT_FILL MediaScaleMode = "scaleAspectFill"
	MEDIASCALEMODE_CENTER MediaScaleMode = "center"
	MEDIASCALEMODE_TOP MediaScaleMode = "top"
	MEDIASCALEMODE_BOTTOM MediaScaleMode = "bottom"
	MEDIASCALEMODE_LEFT MediaScaleMode = "left"
	MEDIASCALEMODE_RIGHT MediaScaleMode = "right"
)

// All allowed values of MediaScaleMode enum
var AllowedMediaScaleModeEnumValues = []MediaScaleMode{
	"scaleToFill",
	"scaleAspectFit",
	"scaleAspectFill",
	"center",
	"top",
	"bottom",
	"left",
	"right",
}

func (v *MediaScaleMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MediaScaleMode(value)
	for _, existing := range AllowedMediaScaleModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MediaScaleMode", value)
}

// NewMediaScaleModeFromValue returns a pointer to a valid MediaScaleMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMediaScaleModeFromValue(v string) (*MediaScaleMode, error) {
	ev := MediaScaleMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MediaScaleMode: valid values are %v", v, AllowedMediaScaleModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MediaScaleMode) IsValid() bool {
	for _, existing := range AllowedMediaScaleModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MediaScaleMode value
func (v MediaScaleMode) Ptr() *MediaScaleMode {
	return &v
}

type NullableMediaScaleMode struct {
	value *MediaScaleMode
	isSet bool
}

func (v NullableMediaScaleMode) Get() *MediaScaleMode {
	return v.value
}

func (v *NullableMediaScaleMode) Set(val *MediaScaleMode) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaScaleMode) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaScaleMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaScaleMode(val *MediaScaleMode) *NullableMediaScaleMode {
	return &NullableMediaScaleMode{value: val, isSet: true}
}

func (v NullableMediaScaleMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaScaleMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

