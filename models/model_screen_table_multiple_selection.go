/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenTableMultipleSelection struct for ScreenTableMultipleSelection
type ScreenTableMultipleSelection struct {
	NavigationBar NavigationBar `json:"navigationBar"`
	Footer Footer `json:"footer"`
	Styles BasicScreenBlock `json:"styles"`
	Permission NullableRequestPermission `json:"permission"`
	Timer NullableScreenTimer `json:"timer"`
	AnimationEnabled bool `json:"animationEnabled"`
	UseLocalAssetsIfAvailable bool `json:"useLocalAssetsIfAvailable"`
	MultipleSelectionDescription string `json:"multipleSelectionDescription"`
	Media *Media `json:"media,omitempty"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	List MultipleSelectionList `json:"list"`
}

// NewScreenTableMultipleSelection instantiates a new ScreenTableMultipleSelection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenTableMultipleSelection(navigationBar NavigationBar, footer Footer, styles BasicScreenBlock, permission NullableRequestPermission, timer NullableScreenTimer, animationEnabled bool, useLocalAssetsIfAvailable bool, multipleSelectionDescription string, title Text, subtitle Text, list MultipleSelectionList) *ScreenTableMultipleSelection {
	this := ScreenTableMultipleSelection{}
	this.NavigationBar = navigationBar
	this.Footer = footer
	this.Styles = styles
	this.Permission = permission
	this.Timer = timer
	this.AnimationEnabled = animationEnabled
	this.UseLocalAssetsIfAvailable = useLocalAssetsIfAvailable
	this.MultipleSelectionDescription = multipleSelectionDescription
	this.Title = title
	this.Subtitle = subtitle
	this.List = list
	return &this
}

// NewScreenTableMultipleSelectionWithDefaults instantiates a new ScreenTableMultipleSelection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenTableMultipleSelectionWithDefaults() *ScreenTableMultipleSelection {
	this := ScreenTableMultipleSelection{}
	return &this
}

// GetNavigationBar returns the NavigationBar field value
func (o *ScreenTableMultipleSelection) GetNavigationBar() NavigationBar {
	if o == nil {
		var ret NavigationBar
		return ret
	}

	return o.NavigationBar
}

// GetNavigationBarOk returns a tuple with the NavigationBar field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetNavigationBarOk() (*NavigationBar, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NavigationBar, true
}

// SetNavigationBar sets field value
func (o *ScreenTableMultipleSelection) SetNavigationBar(v NavigationBar) {
	o.NavigationBar = v
}

// GetFooter returns the Footer field value
func (o *ScreenTableMultipleSelection) GetFooter() Footer {
	if o == nil {
		var ret Footer
		return ret
	}

	return o.Footer
}

// GetFooterOk returns a tuple with the Footer field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetFooterOk() (*Footer, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Footer, true
}

// SetFooter sets field value
func (o *ScreenTableMultipleSelection) SetFooter(v Footer) {
	o.Footer = v
}

// GetStyles returns the Styles field value
func (o *ScreenTableMultipleSelection) GetStyles() BasicScreenBlock {
	if o == nil {
		var ret BasicScreenBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetStylesOk() (*BasicScreenBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *ScreenTableMultipleSelection) SetStyles(v BasicScreenBlock) {
	o.Styles = v
}

// GetPermission returns the Permission field value
// If the value is explicit nil, the zero value for RequestPermission will be returned
func (o *ScreenTableMultipleSelection) GetPermission() RequestPermission {
	if o == nil || o.Permission.Get() == nil {
		var ret RequestPermission
		return ret
	}

	return *o.Permission.Get()
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenTableMultipleSelection) GetPermissionOk() (*RequestPermission, bool) {
	if o == nil {
    return nil, false
	}
	return o.Permission.Get(), o.Permission.IsSet()
}

// SetPermission sets field value
func (o *ScreenTableMultipleSelection) SetPermission(v RequestPermission) {
	o.Permission.Set(&v)
}

// GetTimer returns the Timer field value
// If the value is explicit nil, the zero value for ScreenTimer will be returned
func (o *ScreenTableMultipleSelection) GetTimer() ScreenTimer {
	if o == nil || o.Timer.Get() == nil {
		var ret ScreenTimer
		return ret
	}

	return *o.Timer.Get()
}

// GetTimerOk returns a tuple with the Timer field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenTableMultipleSelection) GetTimerOk() (*ScreenTimer, bool) {
	if o == nil {
    return nil, false
	}
	return o.Timer.Get(), o.Timer.IsSet()
}

// SetTimer sets field value
func (o *ScreenTableMultipleSelection) SetTimer(v ScreenTimer) {
	o.Timer.Set(&v)
}

// GetAnimationEnabled returns the AnimationEnabled field value
func (o *ScreenTableMultipleSelection) GetAnimationEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AnimationEnabled
}

// GetAnimationEnabledOk returns a tuple with the AnimationEnabled field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetAnimationEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AnimationEnabled, true
}

// SetAnimationEnabled sets field value
func (o *ScreenTableMultipleSelection) SetAnimationEnabled(v bool) {
	o.AnimationEnabled = v
}

// GetUseLocalAssetsIfAvailable returns the UseLocalAssetsIfAvailable field value
func (o *ScreenTableMultipleSelection) GetUseLocalAssetsIfAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseLocalAssetsIfAvailable
}

// GetUseLocalAssetsIfAvailableOk returns a tuple with the UseLocalAssetsIfAvailable field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetUseLocalAssetsIfAvailableOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UseLocalAssetsIfAvailable, true
}

// SetUseLocalAssetsIfAvailable sets field value
func (o *ScreenTableMultipleSelection) SetUseLocalAssetsIfAvailable(v bool) {
	o.UseLocalAssetsIfAvailable = v
}

// GetMultipleSelectionDescription returns the MultipleSelectionDescription field value
func (o *ScreenTableMultipleSelection) GetMultipleSelectionDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MultipleSelectionDescription
}

// GetMultipleSelectionDescriptionOk returns a tuple with the MultipleSelectionDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetMultipleSelectionDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MultipleSelectionDescription, true
}

// SetMultipleSelectionDescription sets field value
func (o *ScreenTableMultipleSelection) SetMultipleSelectionDescription(v string) {
	o.MultipleSelectionDescription = v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *ScreenTableMultipleSelection) GetMedia() Media {
	if o == nil || isNil(o.Media) {
		var ret Media
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetMediaOk() (*Media, bool) {
	if o == nil || isNil(o.Media) {
    return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *ScreenTableMultipleSelection) HasMedia() bool {
	if o != nil && !isNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given Media and assigns it to the Media field.
func (o *ScreenTableMultipleSelection) SetMedia(v Media) {
	o.Media = &v
}

// GetTitle returns the Title field value
func (o *ScreenTableMultipleSelection) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenTableMultipleSelection) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenTableMultipleSelection) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenTableMultipleSelection) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetList returns the List field value
func (o *ScreenTableMultipleSelection) GetList() MultipleSelectionList {
	if o == nil {
		var ret MultipleSelectionList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *ScreenTableMultipleSelection) GetListOk() (*MultipleSelectionList, bool) {
	if o == nil {
    return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *ScreenTableMultipleSelection) SetList(v MultipleSelectionList) {
	o.List = v
}

func (o ScreenTableMultipleSelection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["navigationBar"] = o.NavigationBar
	}
	if true {
		toSerialize["footer"] = o.Footer
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	if true {
		toSerialize["permission"] = o.Permission.Get()
	}
	if true {
		toSerialize["timer"] = o.Timer.Get()
	}
	if true {
		toSerialize["animationEnabled"] = o.AnimationEnabled
	}
	if true {
		toSerialize["useLocalAssetsIfAvailable"] = o.UseLocalAssetsIfAvailable
	}
	if true {
		toSerialize["multipleSelectionDescription"] = o.MultipleSelectionDescription
	}
	if !isNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["list"] = o.List
	}
	return json.Marshal(toSerialize)
}

type NullableScreenTableMultipleSelection struct {
	value *ScreenTableMultipleSelection
	isSet bool
}

func (v NullableScreenTableMultipleSelection) Get() *ScreenTableMultipleSelection {
	return v.value
}

func (v *NullableScreenTableMultipleSelection) Set(val *ScreenTableMultipleSelection) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenTableMultipleSelection) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenTableMultipleSelection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenTableMultipleSelection(val *ScreenTableMultipleSelection) *NullableScreenTableMultipleSelection {
	return &NullableScreenTableMultipleSelection{value: val, isSet: true}
}

func (v NullableScreenTableMultipleSelection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenTableMultipleSelection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


