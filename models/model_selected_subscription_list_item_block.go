/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// SelectedSubscriptionListItemBlock Selected subscription list item
type SelectedSubscriptionListItemBlock struct {
	Styles SubscriptionListBlock `json:"styles"`
}

// NewSelectedSubscriptionListItemBlock instantiates a new SelectedSubscriptionListItemBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectedSubscriptionListItemBlock(styles SubscriptionListBlock) *SelectedSubscriptionListItemBlock {
	this := SelectedSubscriptionListItemBlock{}
	this.Styles = styles
	return &this
}

// NewSelectedSubscriptionListItemBlockWithDefaults instantiates a new SelectedSubscriptionListItemBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectedSubscriptionListItemBlockWithDefaults() *SelectedSubscriptionListItemBlock {
	this := SelectedSubscriptionListItemBlock{}
	return &this
}

// GetStyles returns the Styles field value
func (o *SelectedSubscriptionListItemBlock) GetStyles() SubscriptionListBlock {
	if o == nil {
		var ret SubscriptionListBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *SelectedSubscriptionListItemBlock) GetStylesOk() (*SubscriptionListBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *SelectedSubscriptionListItemBlock) SetStyles(v SubscriptionListBlock) {
	o.Styles = v
}

func (o SelectedSubscriptionListItemBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["styles"] = o.Styles
	}
	return json.Marshal(toSerialize)
}

type NullableSelectedSubscriptionListItemBlock struct {
	value *SelectedSubscriptionListItemBlock
	isSet bool
}

func (v NullableSelectedSubscriptionListItemBlock) Get() *SelectedSubscriptionListItemBlock {
	return v.value
}

func (v *NullableSelectedSubscriptionListItemBlock) Set(val *SelectedSubscriptionListItemBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectedSubscriptionListItemBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectedSubscriptionListItemBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectedSubscriptionListItemBlock(val *SelectedSubscriptionListItemBlock) *NullableSelectedSubscriptionListItemBlock {
	return &NullableSelectedSubscriptionListItemBlock{value: val, isSet: true}
}

func (v NullableSelectedSubscriptionListItemBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectedSubscriptionListItemBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


