/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// SubscriptionListItemType Combination of fields for subscription list item
type SubscriptionListItemType string

// List of SubscriptionListItemType
const (
	SUBSCRIPTIONLISTITEMTYPE_CHECKBOX_LABELS SubscriptionListItemType = "CheckboxLabels"
	SUBSCRIPTIONLISTITEMTYPE_LABELS_CHECKBOX SubscriptionListItemType = "LabelsCheckbox"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE1 SubscriptionListItemType = "SubscriptionListItemType1"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE2 SubscriptionListItemType = "SubscriptionListItemType2"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE3 SubscriptionListItemType = "SubscriptionListItemType3"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE4 SubscriptionListItemType = "SubscriptionListItemType4"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE5 SubscriptionListItemType = "SubscriptionListItemType5"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE6 SubscriptionListItemType = "SubscriptionListItemType6"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE7 SubscriptionListItemType = "SubscriptionListItemType7"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE8 SubscriptionListItemType = "SubscriptionListItemType8"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE9 SubscriptionListItemType = "SubscriptionListItemType9"
	SUBSCRIPTIONLISTITEMTYPE_SUBSCRIPTION_LIST_ITEM_TYPE10 SubscriptionListItemType = "SubscriptionListItemType10"
)

// All allowed values of SubscriptionListItemType enum
var AllowedSubscriptionListItemTypeEnumValues = []SubscriptionListItemType{
	"CheckboxLabels",
	"LabelsCheckbox",
	"SubscriptionListItemType1",
	"SubscriptionListItemType2",
	"SubscriptionListItemType3",
	"SubscriptionListItemType4",
	"SubscriptionListItemType5",
	"SubscriptionListItemType6",
	"SubscriptionListItemType7",
	"SubscriptionListItemType8",
	"SubscriptionListItemType9",
	"SubscriptionListItemType10",
}

func (v *SubscriptionListItemType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SubscriptionListItemType(value)
	for _, existing := range AllowedSubscriptionListItemTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SubscriptionListItemType", value)
}

// NewSubscriptionListItemTypeFromValue returns a pointer to a valid SubscriptionListItemType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSubscriptionListItemTypeFromValue(v string) (*SubscriptionListItemType, error) {
	ev := SubscriptionListItemType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SubscriptionListItemType: valid values are %v", v, AllowedSubscriptionListItemTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SubscriptionListItemType) IsValid() bool {
	for _, existing := range AllowedSubscriptionListItemTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SubscriptionListItemType value
func (v SubscriptionListItemType) Ptr() *SubscriptionListItemType {
	return &v
}

type NullableSubscriptionListItemType struct {
	value *SubscriptionListItemType
	isSet bool
}

func (v NullableSubscriptionListItemType) Get() *SubscriptionListItemType {
	return v.value
}

func (v *NullableSubscriptionListItemType) Set(val *SubscriptionListItemType) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionListItemType) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionListItemType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionListItemType(val *SubscriptionListItemType) *NullableSubscriptionListItemType {
	return &NullableSubscriptionListItemType{value: val, isSet: true}
}

func (v NullableSubscriptionListItemType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionListItemType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

