/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenImageTitleSubtitleListAllOf Screen - Image/Title/Subtitle/Regular list
type ScreenImageTitleSubtitleListAllOf struct {
	ImageTitleSubtitleListDescription string `json:"imageTitleSubtitleListDescription"`
	Image Image `json:"image"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	List RegularList `json:"list"`
}

// NewScreenImageTitleSubtitleListAllOf instantiates a new ScreenImageTitleSubtitleListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenImageTitleSubtitleListAllOf(imageTitleSubtitleListDescription string, image Image, title Text, subtitle Text, list RegularList) *ScreenImageTitleSubtitleListAllOf {
	this := ScreenImageTitleSubtitleListAllOf{}
	this.ImageTitleSubtitleListDescription = imageTitleSubtitleListDescription
	this.Image = image
	this.Title = title
	this.Subtitle = subtitle
	this.List = list
	return &this
}

// NewScreenImageTitleSubtitleListAllOfWithDefaults instantiates a new ScreenImageTitleSubtitleListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenImageTitleSubtitleListAllOfWithDefaults() *ScreenImageTitleSubtitleListAllOf {
	this := ScreenImageTitleSubtitleListAllOf{}
	return &this
}

// GetImageTitleSubtitleListDescription returns the ImageTitleSubtitleListDescription field value
func (o *ScreenImageTitleSubtitleListAllOf) GetImageTitleSubtitleListDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageTitleSubtitleListDescription
}

// GetImageTitleSubtitleListDescriptionOk returns a tuple with the ImageTitleSubtitleListDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleListAllOf) GetImageTitleSubtitleListDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ImageTitleSubtitleListDescription, true
}

// SetImageTitleSubtitleListDescription sets field value
func (o *ScreenImageTitleSubtitleListAllOf) SetImageTitleSubtitleListDescription(v string) {
	o.ImageTitleSubtitleListDescription = v
}

// GetImage returns the Image field value
func (o *ScreenImageTitleSubtitleListAllOf) GetImage() Image {
	if o == nil {
		var ret Image
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleListAllOf) GetImageOk() (*Image, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *ScreenImageTitleSubtitleListAllOf) SetImage(v Image) {
	o.Image = v
}

// GetTitle returns the Title field value
func (o *ScreenImageTitleSubtitleListAllOf) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleListAllOf) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenImageTitleSubtitleListAllOf) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenImageTitleSubtitleListAllOf) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleListAllOf) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenImageTitleSubtitleListAllOf) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetList returns the List field value
func (o *ScreenImageTitleSubtitleListAllOf) GetList() RegularList {
	if o == nil {
		var ret RegularList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleListAllOf) GetListOk() (*RegularList, bool) {
	if o == nil {
    return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *ScreenImageTitleSubtitleListAllOf) SetList(v RegularList) {
	o.List = v
}

func (o ScreenImageTitleSubtitleListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageTitleSubtitleListDescription"] = o.ImageTitleSubtitleListDescription
	}
	if true {
		toSerialize["image"] = o.Image
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["list"] = o.List
	}
	return json.Marshal(toSerialize)
}

type NullableScreenImageTitleSubtitleListAllOf struct {
	value *ScreenImageTitleSubtitleListAllOf
	isSet bool
}

func (v NullableScreenImageTitleSubtitleListAllOf) Get() *ScreenImageTitleSubtitleListAllOf {
	return v.value
}

func (v *NullableScreenImageTitleSubtitleListAllOf) Set(val *ScreenImageTitleSubtitleListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenImageTitleSubtitleListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenImageTitleSubtitleListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenImageTitleSubtitleListAllOf(val *ScreenImageTitleSubtitleListAllOf) *NullableScreenImageTitleSubtitleListAllOf {
	return &NullableScreenImageTitleSubtitleListAllOf{value: val, isSet: true}
}

func (v NullableScreenImageTitleSubtitleListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenImageTitleSubtitleListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


