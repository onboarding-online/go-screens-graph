/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenImageTitleSubtitleMultipleSelectionListAllOf Screen - Image/Title/Subtitle/Multiple selection list
type ScreenImageTitleSubtitleMultipleSelectionListAllOf struct {
	ImageTitleSubtitleMultipleSelectionListDescription string `json:"imageTitleSubtitleMultipleSelectionListDescription"`
	Image Image `json:"image"`
	// Defines the scale of the image in percentage
	ImageScale *float32 `json:"imageScale,omitempty"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	List MultipleSelectionList `json:"list"`
}

// NewScreenImageTitleSubtitleMultipleSelectionListAllOf instantiates a new ScreenImageTitleSubtitleMultipleSelectionListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenImageTitleSubtitleMultipleSelectionListAllOf(imageTitleSubtitleMultipleSelectionListDescription string, image Image, title Text, subtitle Text, list MultipleSelectionList) *ScreenImageTitleSubtitleMultipleSelectionListAllOf {
	this := ScreenImageTitleSubtitleMultipleSelectionListAllOf{}
	this.ImageTitleSubtitleMultipleSelectionListDescription = imageTitleSubtitleMultipleSelectionListDescription
	this.Image = image
	this.Title = title
	this.Subtitle = subtitle
	this.List = list
	return &this
}

// NewScreenImageTitleSubtitleMultipleSelectionListAllOfWithDefaults instantiates a new ScreenImageTitleSubtitleMultipleSelectionListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenImageTitleSubtitleMultipleSelectionListAllOfWithDefaults() *ScreenImageTitleSubtitleMultipleSelectionListAllOf {
	this := ScreenImageTitleSubtitleMultipleSelectionListAllOf{}
	return &this
}

// GetImageTitleSubtitleMultipleSelectionListDescription returns the ImageTitleSubtitleMultipleSelectionListDescription field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetImageTitleSubtitleMultipleSelectionListDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageTitleSubtitleMultipleSelectionListDescription
}

// GetImageTitleSubtitleMultipleSelectionListDescriptionOk returns a tuple with the ImageTitleSubtitleMultipleSelectionListDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetImageTitleSubtitleMultipleSelectionListDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ImageTitleSubtitleMultipleSelectionListDescription, true
}

// SetImageTitleSubtitleMultipleSelectionListDescription sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) SetImageTitleSubtitleMultipleSelectionListDescription(v string) {
	o.ImageTitleSubtitleMultipleSelectionListDescription = v
}

// GetImage returns the Image field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetImage() Image {
	if o == nil {
		var ret Image
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetImageOk() (*Image, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) SetImage(v Image) {
	o.Image = v
}

// GetImageScale returns the ImageScale field value if set, zero value otherwise.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetImageScale() float32 {
	if o == nil || isNil(o.ImageScale) {
		var ret float32
		return ret
	}
	return *o.ImageScale
}

// GetImageScaleOk returns a tuple with the ImageScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetImageScaleOk() (*float32, bool) {
	if o == nil || isNil(o.ImageScale) {
    return nil, false
	}
	return o.ImageScale, true
}

// HasImageScale returns a boolean if a field has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) HasImageScale() bool {
	if o != nil && !isNil(o.ImageScale) {
		return true
	}

	return false
}

// SetImageScale gets a reference to the given float32 and assigns it to the ImageScale field.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) SetImageScale(v float32) {
	o.ImageScale = &v
}

// GetTitle returns the Title field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetList returns the List field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetList() MultipleSelectionList {
	if o == nil {
		var ret MultipleSelectionList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) GetListOk() (*MultipleSelectionList, bool) {
	if o == nil {
    return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionListAllOf) SetList(v MultipleSelectionList) {
	o.List = v
}

func (o ScreenImageTitleSubtitleMultipleSelectionListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageTitleSubtitleMultipleSelectionListDescription"] = o.ImageTitleSubtitleMultipleSelectionListDescription
	}
	if true {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.ImageScale) {
		toSerialize["imageScale"] = o.ImageScale
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["list"] = o.List
	}
	return json.Marshal(toSerialize)
}

type NullableScreenImageTitleSubtitleMultipleSelectionListAllOf struct {
	value *ScreenImageTitleSubtitleMultipleSelectionListAllOf
	isSet bool
}

func (v NullableScreenImageTitleSubtitleMultipleSelectionListAllOf) Get() *ScreenImageTitleSubtitleMultipleSelectionListAllOf {
	return v.value
}

func (v *NullableScreenImageTitleSubtitleMultipleSelectionListAllOf) Set(val *ScreenImageTitleSubtitleMultipleSelectionListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenImageTitleSubtitleMultipleSelectionListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenImageTitleSubtitleMultipleSelectionListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenImageTitleSubtitleMultipleSelectionListAllOf(val *ScreenImageTitleSubtitleMultipleSelectionListAllOf) *NullableScreenImageTitleSubtitleMultipleSelectionListAllOf {
	return &NullableScreenImageTitleSubtitleMultipleSelectionListAllOf{value: val, isSet: true}
}

func (v NullableScreenImageTitleSubtitleMultipleSelectionListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenImageTitleSubtitleMultipleSelectionListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


