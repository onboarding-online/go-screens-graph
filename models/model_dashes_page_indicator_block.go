/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// DashesPageIndicatorBlock Styles for dashes page indicator block
type DashesPageIndicatorBlock struct {
	NotFilledColor *string `json:"notFilledColor,omitempty"`
	FilledColor *string `json:"filledColor,omitempty"`
	DashHeight *float32 `json:"dashHeight,omitempty"`
	DashesSpacing *float32 `json:"dashesSpacing,omitempty"`
}

// NewDashesPageIndicatorBlock instantiates a new DashesPageIndicatorBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashesPageIndicatorBlock() *DashesPageIndicatorBlock {
	this := DashesPageIndicatorBlock{}
	return &this
}

// NewDashesPageIndicatorBlockWithDefaults instantiates a new DashesPageIndicatorBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashesPageIndicatorBlockWithDefaults() *DashesPageIndicatorBlock {
	this := DashesPageIndicatorBlock{}
	return &this
}

// GetNotFilledColor returns the NotFilledColor field value if set, zero value otherwise.
func (o *DashesPageIndicatorBlock) GetNotFilledColor() string {
	if o == nil || isNil(o.NotFilledColor) {
		var ret string
		return ret
	}
	return *o.NotFilledColor
}

// GetNotFilledColorOk returns a tuple with the NotFilledColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicatorBlock) GetNotFilledColorOk() (*string, bool) {
	if o == nil || isNil(o.NotFilledColor) {
    return nil, false
	}
	return o.NotFilledColor, true
}

// HasNotFilledColor returns a boolean if a field has been set.
func (o *DashesPageIndicatorBlock) HasNotFilledColor() bool {
	if o != nil && !isNil(o.NotFilledColor) {
		return true
	}

	return false
}

// SetNotFilledColor gets a reference to the given string and assigns it to the NotFilledColor field.
func (o *DashesPageIndicatorBlock) SetNotFilledColor(v string) {
	o.NotFilledColor = &v
}

// GetFilledColor returns the FilledColor field value if set, zero value otherwise.
func (o *DashesPageIndicatorBlock) GetFilledColor() string {
	if o == nil || isNil(o.FilledColor) {
		var ret string
		return ret
	}
	return *o.FilledColor
}

// GetFilledColorOk returns a tuple with the FilledColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicatorBlock) GetFilledColorOk() (*string, bool) {
	if o == nil || isNil(o.FilledColor) {
    return nil, false
	}
	return o.FilledColor, true
}

// HasFilledColor returns a boolean if a field has been set.
func (o *DashesPageIndicatorBlock) HasFilledColor() bool {
	if o != nil && !isNil(o.FilledColor) {
		return true
	}

	return false
}

// SetFilledColor gets a reference to the given string and assigns it to the FilledColor field.
func (o *DashesPageIndicatorBlock) SetFilledColor(v string) {
	o.FilledColor = &v
}

// GetDashHeight returns the DashHeight field value if set, zero value otherwise.
func (o *DashesPageIndicatorBlock) GetDashHeight() float32 {
	if o == nil || isNil(o.DashHeight) {
		var ret float32
		return ret
	}
	return *o.DashHeight
}

// GetDashHeightOk returns a tuple with the DashHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicatorBlock) GetDashHeightOk() (*float32, bool) {
	if o == nil || isNil(o.DashHeight) {
    return nil, false
	}
	return o.DashHeight, true
}

// HasDashHeight returns a boolean if a field has been set.
func (o *DashesPageIndicatorBlock) HasDashHeight() bool {
	if o != nil && !isNil(o.DashHeight) {
		return true
	}

	return false
}

// SetDashHeight gets a reference to the given float32 and assigns it to the DashHeight field.
func (o *DashesPageIndicatorBlock) SetDashHeight(v float32) {
	o.DashHeight = &v
}

// GetDashesSpacing returns the DashesSpacing field value if set, zero value otherwise.
func (o *DashesPageIndicatorBlock) GetDashesSpacing() float32 {
	if o == nil || isNil(o.DashesSpacing) {
		var ret float32
		return ret
	}
	return *o.DashesSpacing
}

// GetDashesSpacingOk returns a tuple with the DashesSpacing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicatorBlock) GetDashesSpacingOk() (*float32, bool) {
	if o == nil || isNil(o.DashesSpacing) {
    return nil, false
	}
	return o.DashesSpacing, true
}

// HasDashesSpacing returns a boolean if a field has been set.
func (o *DashesPageIndicatorBlock) HasDashesSpacing() bool {
	if o != nil && !isNil(o.DashesSpacing) {
		return true
	}

	return false
}

// SetDashesSpacing gets a reference to the given float32 and assigns it to the DashesSpacing field.
func (o *DashesPageIndicatorBlock) SetDashesSpacing(v float32) {
	o.DashesSpacing = &v
}

func (o DashesPageIndicatorBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NotFilledColor) {
		toSerialize["notFilledColor"] = o.NotFilledColor
	}
	if !isNil(o.FilledColor) {
		toSerialize["filledColor"] = o.FilledColor
	}
	if !isNil(o.DashHeight) {
		toSerialize["dashHeight"] = o.DashHeight
	}
	if !isNil(o.DashesSpacing) {
		toSerialize["dashesSpacing"] = o.DashesSpacing
	}
	return json.Marshal(toSerialize)
}

type NullableDashesPageIndicatorBlock struct {
	value *DashesPageIndicatorBlock
	isSet bool
}

func (v NullableDashesPageIndicatorBlock) Get() *DashesPageIndicatorBlock {
	return v.value
}

func (v *NullableDashesPageIndicatorBlock) Set(val *DashesPageIndicatorBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableDashesPageIndicatorBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableDashesPageIndicatorBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashesPageIndicatorBlock(val *DashesPageIndicatorBlock) *NullableDashesPageIndicatorBlock {
	return &NullableDashesPageIndicatorBlock{value: val, isSet: true}
}

func (v NullableDashesPageIndicatorBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashesPageIndicatorBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


