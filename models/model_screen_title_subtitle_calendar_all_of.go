/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenTitleSubtitleCalendarAllOf Screen - Title/Subtitle/Calendar
type ScreenTitleSubtitleCalendarAllOf struct {
	TitleSubtitleCalendarDescription string `json:"titleSubtitleCalendarDescription"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	Calendar Calendar `json:"calendar"`
}

// NewScreenTitleSubtitleCalendarAllOf instantiates a new ScreenTitleSubtitleCalendarAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenTitleSubtitleCalendarAllOf(titleSubtitleCalendarDescription string, title Text, subtitle Text, calendar Calendar) *ScreenTitleSubtitleCalendarAllOf {
	this := ScreenTitleSubtitleCalendarAllOf{}
	this.TitleSubtitleCalendarDescription = titleSubtitleCalendarDescription
	this.Title = title
	this.Subtitle = subtitle
	this.Calendar = calendar
	return &this
}

// NewScreenTitleSubtitleCalendarAllOfWithDefaults instantiates a new ScreenTitleSubtitleCalendarAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenTitleSubtitleCalendarAllOfWithDefaults() *ScreenTitleSubtitleCalendarAllOf {
	this := ScreenTitleSubtitleCalendarAllOf{}
	return &this
}

// GetTitleSubtitleCalendarDescription returns the TitleSubtitleCalendarDescription field value
func (o *ScreenTitleSubtitleCalendarAllOf) GetTitleSubtitleCalendarDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TitleSubtitleCalendarDescription
}

// GetTitleSubtitleCalendarDescriptionOk returns a tuple with the TitleSubtitleCalendarDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleCalendarAllOf) GetTitleSubtitleCalendarDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TitleSubtitleCalendarDescription, true
}

// SetTitleSubtitleCalendarDescription sets field value
func (o *ScreenTitleSubtitleCalendarAllOf) SetTitleSubtitleCalendarDescription(v string) {
	o.TitleSubtitleCalendarDescription = v
}

// GetTitle returns the Title field value
func (o *ScreenTitleSubtitleCalendarAllOf) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleCalendarAllOf) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenTitleSubtitleCalendarAllOf) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenTitleSubtitleCalendarAllOf) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleCalendarAllOf) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenTitleSubtitleCalendarAllOf) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetCalendar returns the Calendar field value
func (o *ScreenTitleSubtitleCalendarAllOf) GetCalendar() Calendar {
	if o == nil {
		var ret Calendar
		return ret
	}

	return o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleCalendarAllOf) GetCalendarOk() (*Calendar, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Calendar, true
}

// SetCalendar sets field value
func (o *ScreenTitleSubtitleCalendarAllOf) SetCalendar(v Calendar) {
	o.Calendar = v
}

func (o ScreenTitleSubtitleCalendarAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["titleSubtitleCalendarDescription"] = o.TitleSubtitleCalendarDescription
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["calendar"] = o.Calendar
	}
	return json.Marshal(toSerialize)
}

type NullableScreenTitleSubtitleCalendarAllOf struct {
	value *ScreenTitleSubtitleCalendarAllOf
	isSet bool
}

func (v NullableScreenTitleSubtitleCalendarAllOf) Get() *ScreenTitleSubtitleCalendarAllOf {
	return v.value
}

func (v *NullableScreenTitleSubtitleCalendarAllOf) Set(val *ScreenTitleSubtitleCalendarAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenTitleSubtitleCalendarAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenTitleSubtitleCalendarAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenTitleSubtitleCalendarAllOf(val *ScreenTitleSubtitleCalendarAllOf) *NullableScreenTitleSubtitleCalendarAllOf {
	return &NullableScreenTitleSubtitleCalendarAllOf{value: val, isSet: true}
}

func (v NullableScreenTitleSubtitleCalendarAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenTitleSubtitleCalendarAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


