/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenTwoColumnMultipleSelectionAllOf Screen two column table multiple selection - Title/Subtitle/Selection list
type ScreenTwoColumnMultipleSelectionAllOf struct {
	TwoColumnMultipleSelectionDescription string `json:"twoColumnMultipleSelectionDescription"`
	Media *Media `json:"media,omitempty"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	List TwoColumnMultipleSelectionList `json:"list"`
}

// NewScreenTwoColumnMultipleSelectionAllOf instantiates a new ScreenTwoColumnMultipleSelectionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenTwoColumnMultipleSelectionAllOf(twoColumnMultipleSelectionDescription string, title Text, subtitle Text, list TwoColumnMultipleSelectionList) *ScreenTwoColumnMultipleSelectionAllOf {
	this := ScreenTwoColumnMultipleSelectionAllOf{}
	this.TwoColumnMultipleSelectionDescription = twoColumnMultipleSelectionDescription
	this.Title = title
	this.Subtitle = subtitle
	this.List = list
	return &this
}

// NewScreenTwoColumnMultipleSelectionAllOfWithDefaults instantiates a new ScreenTwoColumnMultipleSelectionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenTwoColumnMultipleSelectionAllOfWithDefaults() *ScreenTwoColumnMultipleSelectionAllOf {
	this := ScreenTwoColumnMultipleSelectionAllOf{}
	return &this
}

// GetTwoColumnMultipleSelectionDescription returns the TwoColumnMultipleSelectionDescription field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetTwoColumnMultipleSelectionDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TwoColumnMultipleSelectionDescription
}

// GetTwoColumnMultipleSelectionDescriptionOk returns a tuple with the TwoColumnMultipleSelectionDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetTwoColumnMultipleSelectionDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TwoColumnMultipleSelectionDescription, true
}

// SetTwoColumnMultipleSelectionDescription sets field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) SetTwoColumnMultipleSelectionDescription(v string) {
	o.TwoColumnMultipleSelectionDescription = v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetMedia() Media {
	if o == nil || isNil(o.Media) {
		var ret Media
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetMediaOk() (*Media, bool) {
	if o == nil || isNil(o.Media) {
    return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *ScreenTwoColumnMultipleSelectionAllOf) HasMedia() bool {
	if o != nil && !isNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given Media and assigns it to the Media field.
func (o *ScreenTwoColumnMultipleSelectionAllOf) SetMedia(v Media) {
	o.Media = &v
}

// GetTitle returns the Title field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetList returns the List field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetList() TwoColumnMultipleSelectionList {
	if o == nil {
		var ret TwoColumnMultipleSelectionList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *ScreenTwoColumnMultipleSelectionAllOf) GetListOk() (*TwoColumnMultipleSelectionList, bool) {
	if o == nil {
    return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *ScreenTwoColumnMultipleSelectionAllOf) SetList(v TwoColumnMultipleSelectionList) {
	o.List = v
}

func (o ScreenTwoColumnMultipleSelectionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["twoColumnMultipleSelectionDescription"] = o.TwoColumnMultipleSelectionDescription
	}
	if !isNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["list"] = o.List
	}
	return json.Marshal(toSerialize)
}

type NullableScreenTwoColumnMultipleSelectionAllOf struct {
	value *ScreenTwoColumnMultipleSelectionAllOf
	isSet bool
}

func (v NullableScreenTwoColumnMultipleSelectionAllOf) Get() *ScreenTwoColumnMultipleSelectionAllOf {
	return v.value
}

func (v *NullableScreenTwoColumnMultipleSelectionAllOf) Set(val *ScreenTwoColumnMultipleSelectionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenTwoColumnMultipleSelectionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenTwoColumnMultipleSelectionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenTwoColumnMultipleSelectionAllOf(val *ScreenTwoColumnMultipleSelectionAllOf) *NullableScreenTwoColumnMultipleSelectionAllOf {
	return &NullableScreenTwoColumnMultipleSelectionAllOf{value: val, isSet: true}
}

func (v NullableScreenTwoColumnMultipleSelectionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenTwoColumnMultipleSelectionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


