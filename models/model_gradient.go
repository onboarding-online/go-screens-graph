/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// Gradient Describe gradient
type Gradient struct {
	// List of colors
	Colors []string `json:"colors"`
	// List of locations
	Locations []float32 `json:"locations,omitempty"`
	StartPoint XYPoint `json:"startPoint"`
	EndPoint XYPoint `json:"endPoint"`
	GradientKind *GradientKind `json:"gradientKind,omitempty"`
	// Height in percentage
	HeightPercentage *float32 `json:"heightPercentage,omitempty"`
}

// NewGradient instantiates a new Gradient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGradient(colors []string, startPoint XYPoint, endPoint XYPoint) *Gradient {
	this := Gradient{}
	this.Colors = colors
	this.StartPoint = startPoint
	this.EndPoint = endPoint
	return &this
}

// NewGradientWithDefaults instantiates a new Gradient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGradientWithDefaults() *Gradient {
	this := Gradient{}
	return &this
}

// GetColors returns the Colors field value
func (o *Gradient) GetColors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Colors
}

// GetColorsOk returns a tuple with the Colors field value
// and a boolean to check if the value has been set.
func (o *Gradient) GetColorsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Colors, true
}

// SetColors sets field value
func (o *Gradient) SetColors(v []string) {
	o.Colors = v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *Gradient) GetLocations() []float32 {
	if o == nil || isNil(o.Locations) {
		var ret []float32
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gradient) GetLocationsOk() ([]float32, bool) {
	if o == nil || isNil(o.Locations) {
    return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *Gradient) HasLocations() bool {
	if o != nil && !isNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []float32 and assigns it to the Locations field.
func (o *Gradient) SetLocations(v []float32) {
	o.Locations = v
}

// GetStartPoint returns the StartPoint field value
func (o *Gradient) GetStartPoint() XYPoint {
	if o == nil {
		var ret XYPoint
		return ret
	}

	return o.StartPoint
}

// GetStartPointOk returns a tuple with the StartPoint field value
// and a boolean to check if the value has been set.
func (o *Gradient) GetStartPointOk() (*XYPoint, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StartPoint, true
}

// SetStartPoint sets field value
func (o *Gradient) SetStartPoint(v XYPoint) {
	o.StartPoint = v
}

// GetEndPoint returns the EndPoint field value
func (o *Gradient) GetEndPoint() XYPoint {
	if o == nil {
		var ret XYPoint
		return ret
	}

	return o.EndPoint
}

// GetEndPointOk returns a tuple with the EndPoint field value
// and a boolean to check if the value has been set.
func (o *Gradient) GetEndPointOk() (*XYPoint, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EndPoint, true
}

// SetEndPoint sets field value
func (o *Gradient) SetEndPoint(v XYPoint) {
	o.EndPoint = v
}

// GetGradientKind returns the GradientKind field value if set, zero value otherwise.
func (o *Gradient) GetGradientKind() GradientKind {
	if o == nil || isNil(o.GradientKind) {
		var ret GradientKind
		return ret
	}
	return *o.GradientKind
}

// GetGradientKindOk returns a tuple with the GradientKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gradient) GetGradientKindOk() (*GradientKind, bool) {
	if o == nil || isNil(o.GradientKind) {
    return nil, false
	}
	return o.GradientKind, true
}

// HasGradientKind returns a boolean if a field has been set.
func (o *Gradient) HasGradientKind() bool {
	if o != nil && !isNil(o.GradientKind) {
		return true
	}

	return false
}

// SetGradientKind gets a reference to the given GradientKind and assigns it to the GradientKind field.
func (o *Gradient) SetGradientKind(v GradientKind) {
	o.GradientKind = &v
}

// GetHeightPercentage returns the HeightPercentage field value if set, zero value otherwise.
func (o *Gradient) GetHeightPercentage() float32 {
	if o == nil || isNil(o.HeightPercentage) {
		var ret float32
		return ret
	}
	return *o.HeightPercentage
}

// GetHeightPercentageOk returns a tuple with the HeightPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gradient) GetHeightPercentageOk() (*float32, bool) {
	if o == nil || isNil(o.HeightPercentage) {
    return nil, false
	}
	return o.HeightPercentage, true
}

// HasHeightPercentage returns a boolean if a field has been set.
func (o *Gradient) HasHeightPercentage() bool {
	if o != nil && !isNil(o.HeightPercentage) {
		return true
	}

	return false
}

// SetHeightPercentage gets a reference to the given float32 and assigns it to the HeightPercentage field.
func (o *Gradient) SetHeightPercentage(v float32) {
	o.HeightPercentage = &v
}

func (o Gradient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["colors"] = o.Colors
	}
	if !isNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if true {
		toSerialize["startPoint"] = o.StartPoint
	}
	if true {
		toSerialize["endPoint"] = o.EndPoint
	}
	if !isNil(o.GradientKind) {
		toSerialize["gradientKind"] = o.GradientKind
	}
	if !isNil(o.HeightPercentage) {
		toSerialize["heightPercentage"] = o.HeightPercentage
	}
	return json.Marshal(toSerialize)
}

type NullableGradient struct {
	value *Gradient
	isSet bool
}

func (v NullableGradient) Get() *Gradient {
	return v.value
}

func (v *NullableGradient) Set(val *Gradient) {
	v.value = val
	v.isSet = true
}

func (v NullableGradient) IsSet() bool {
	return v.isSet
}

func (v *NullableGradient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGradient(val *Gradient) *NullableGradient {
	return &NullableGradient{value: val, isSet: true}
}

func (v NullableGradient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGradient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


