/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PositionOnDevice Information about position on device in percentage
type PositionOnDevice struct {
	// x offset in percentage 0-100
	X float32 `json:"x"`
	// y offset in percentage 0-100
	Y float32 `json:"y"`
}

// NewPositionOnDevice instantiates a new PositionOnDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPositionOnDevice(x float32, y float32) *PositionOnDevice {
	this := PositionOnDevice{}
	this.X = x
	this.Y = y
	return &this
}

// NewPositionOnDeviceWithDefaults instantiates a new PositionOnDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPositionOnDeviceWithDefaults() *PositionOnDevice {
	this := PositionOnDevice{}
	return &this
}

// GetX returns the X field value
func (o *PositionOnDevice) GetX() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *PositionOnDevice) GetXOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *PositionOnDevice) SetX(v float32) {
	o.X = v
}

// GetY returns the Y field value
func (o *PositionOnDevice) GetY() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *PositionOnDevice) GetYOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *PositionOnDevice) SetY(v float32) {
	o.Y = v
}

func (o PositionOnDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["x"] = o.X
	}
	if true {
		toSerialize["y"] = o.Y
	}
	return json.Marshal(toSerialize)
}

type NullablePositionOnDevice struct {
	value *PositionOnDevice
	isSet bool
}

func (v NullablePositionOnDevice) Get() *PositionOnDevice {
	return v.value
}

func (v *NullablePositionOnDevice) Set(val *PositionOnDevice) {
	v.value = val
	v.isSet = true
}

func (v NullablePositionOnDevice) IsSet() bool {
	return v.isSet
}

func (v *NullablePositionOnDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePositionOnDevice(val *PositionOnDevice) *NullablePositionOnDevice {
	return &NullablePositionOnDevice{value: val, isSet: true}
}

func (v NullablePositionOnDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePositionOnDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


