/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// SliderItem Information about one slide of slider
type SliderItem struct {
	// Section display start
	ValueFrom int32 `json:"valueFrom"`
	// Section display end
	ValueTo int32 `json:"valueTo"`
	Content SlideContent `json:"content"`
}

// NewSliderItem instantiates a new SliderItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSliderItem(valueFrom int32, valueTo int32, content SlideContent) *SliderItem {
	this := SliderItem{}
	this.ValueFrom = valueFrom
	this.ValueTo = valueTo
	this.Content = content
	return &this
}

// NewSliderItemWithDefaults instantiates a new SliderItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSliderItemWithDefaults() *SliderItem {
	this := SliderItem{}
	return &this
}

// GetValueFrom returns the ValueFrom field value
func (o *SliderItem) GetValueFrom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValueFrom
}

// GetValueFromOk returns a tuple with the ValueFrom field value
// and a boolean to check if the value has been set.
func (o *SliderItem) GetValueFromOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ValueFrom, true
}

// SetValueFrom sets field value
func (o *SliderItem) SetValueFrom(v int32) {
	o.ValueFrom = v
}

// GetValueTo returns the ValueTo field value
func (o *SliderItem) GetValueTo() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValueTo
}

// GetValueToOk returns a tuple with the ValueTo field value
// and a boolean to check if the value has been set.
func (o *SliderItem) GetValueToOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ValueTo, true
}

// SetValueTo sets field value
func (o *SliderItem) SetValueTo(v int32) {
	o.ValueTo = v
}

// GetContent returns the Content field value
func (o *SliderItem) GetContent() SlideContent {
	if o == nil {
		var ret SlideContent
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *SliderItem) GetContentOk() (*SlideContent, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *SliderItem) SetContent(v SlideContent) {
	o.Content = v
}

func (o SliderItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["valueFrom"] = o.ValueFrom
	}
	if true {
		toSerialize["valueTo"] = o.ValueTo
	}
	if true {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableSliderItem struct {
	value *SliderItem
	isSet bool
}

func (v NullableSliderItem) Get() *SliderItem {
	return v.value
}

func (v *NullableSliderItem) Set(val *SliderItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSliderItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSliderItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSliderItem(val *SliderItem) *NullableSliderItem {
	return &NullableSliderItem{value: val, isSet: true}
}

func (v NullableSliderItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSliderItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


