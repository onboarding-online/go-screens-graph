/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// AssetUrl Asset from storage
type AssetUrl struct {
	Origin string `json:"origin"`
	Thumb string `json:"thumb"`
	Small string `json:"small"`
	Medium string `json:"medium"`
	Normal string `json:"normal"`
}

// NewAssetUrl instantiates a new AssetUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetUrl(origin string, thumb string, small string, medium string, normal string) *AssetUrl {
	this := AssetUrl{}
	this.Origin = origin
	this.Thumb = thumb
	this.Small = small
	this.Medium = medium
	this.Normal = normal
	return &this
}

// NewAssetUrlWithDefaults instantiates a new AssetUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetUrlWithDefaults() *AssetUrl {
	this := AssetUrl{}
	return &this
}

// GetOrigin returns the Origin field value
func (o *AssetUrl) GetOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value
// and a boolean to check if the value has been set.
func (o *AssetUrl) GetOriginOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Origin, true
}

// SetOrigin sets field value
func (o *AssetUrl) SetOrigin(v string) {
	o.Origin = v
}

// GetThumb returns the Thumb field value
func (o *AssetUrl) GetThumb() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Thumb
}

// GetThumbOk returns a tuple with the Thumb field value
// and a boolean to check if the value has been set.
func (o *AssetUrl) GetThumbOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Thumb, true
}

// SetThumb sets field value
func (o *AssetUrl) SetThumb(v string) {
	o.Thumb = v
}

// GetSmall returns the Small field value
func (o *AssetUrl) GetSmall() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Small
}

// GetSmallOk returns a tuple with the Small field value
// and a boolean to check if the value has been set.
func (o *AssetUrl) GetSmallOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Small, true
}

// SetSmall sets field value
func (o *AssetUrl) SetSmall(v string) {
	o.Small = v
}

// GetMedium returns the Medium field value
func (o *AssetUrl) GetMedium() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Medium
}

// GetMediumOk returns a tuple with the Medium field value
// and a boolean to check if the value has been set.
func (o *AssetUrl) GetMediumOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Medium, true
}

// SetMedium sets field value
func (o *AssetUrl) SetMedium(v string) {
	o.Medium = v
}

// GetNormal returns the Normal field value
func (o *AssetUrl) GetNormal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Normal
}

// GetNormalOk returns a tuple with the Normal field value
// and a boolean to check if the value has been set.
func (o *AssetUrl) GetNormalOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Normal, true
}

// SetNormal sets field value
func (o *AssetUrl) SetNormal(v string) {
	o.Normal = v
}

func (o AssetUrl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["origin"] = o.Origin
	}
	if true {
		toSerialize["thumb"] = o.Thumb
	}
	if true {
		toSerialize["small"] = o.Small
	}
	if true {
		toSerialize["medium"] = o.Medium
	}
	if true {
		toSerialize["normal"] = o.Normal
	}
	return json.Marshal(toSerialize)
}

type NullableAssetUrl struct {
	value *AssetUrl
	isSet bool
}

func (v NullableAssetUrl) Get() *AssetUrl {
	return v.value
}

func (v *NullableAssetUrl) Set(val *AssetUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetUrl(val *AssetUrl) *NullableAssetUrl {
	return &NullableAssetUrl{value: val, isSet: true}
}

func (v NullableAssetUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


