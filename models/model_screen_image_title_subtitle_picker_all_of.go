/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenImageTitleSubtitlePickerAllOf Screen - Image/Title/Subtitle/Picker
type ScreenImageTitleSubtitlePickerAllOf struct {
	ImageTitleSubtitlePickerDescription string `json:"imageTitleSubtitlePickerDescription"`
	Image Image `json:"image"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	Picker Picker `json:"picker"`
}

// NewScreenImageTitleSubtitlePickerAllOf instantiates a new ScreenImageTitleSubtitlePickerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenImageTitleSubtitlePickerAllOf(imageTitleSubtitlePickerDescription string, image Image, title Text, subtitle Text, picker Picker) *ScreenImageTitleSubtitlePickerAllOf {
	this := ScreenImageTitleSubtitlePickerAllOf{}
	this.ImageTitleSubtitlePickerDescription = imageTitleSubtitlePickerDescription
	this.Image = image
	this.Title = title
	this.Subtitle = subtitle
	this.Picker = picker
	return &this
}

// NewScreenImageTitleSubtitlePickerAllOfWithDefaults instantiates a new ScreenImageTitleSubtitlePickerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenImageTitleSubtitlePickerAllOfWithDefaults() *ScreenImageTitleSubtitlePickerAllOf {
	this := ScreenImageTitleSubtitlePickerAllOf{}
	return &this
}

// GetImageTitleSubtitlePickerDescription returns the ImageTitleSubtitlePickerDescription field value
func (o *ScreenImageTitleSubtitlePickerAllOf) GetImageTitleSubtitlePickerDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageTitleSubtitlePickerDescription
}

// GetImageTitleSubtitlePickerDescriptionOk returns a tuple with the ImageTitleSubtitlePickerDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitlePickerAllOf) GetImageTitleSubtitlePickerDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ImageTitleSubtitlePickerDescription, true
}

// SetImageTitleSubtitlePickerDescription sets field value
func (o *ScreenImageTitleSubtitlePickerAllOf) SetImageTitleSubtitlePickerDescription(v string) {
	o.ImageTitleSubtitlePickerDescription = v
}

// GetImage returns the Image field value
func (o *ScreenImageTitleSubtitlePickerAllOf) GetImage() Image {
	if o == nil {
		var ret Image
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitlePickerAllOf) GetImageOk() (*Image, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *ScreenImageTitleSubtitlePickerAllOf) SetImage(v Image) {
	o.Image = v
}

// GetTitle returns the Title field value
func (o *ScreenImageTitleSubtitlePickerAllOf) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitlePickerAllOf) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenImageTitleSubtitlePickerAllOf) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenImageTitleSubtitlePickerAllOf) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitlePickerAllOf) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenImageTitleSubtitlePickerAllOf) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetPicker returns the Picker field value
func (o *ScreenImageTitleSubtitlePickerAllOf) GetPicker() Picker {
	if o == nil {
		var ret Picker
		return ret
	}

	return o.Picker
}

// GetPickerOk returns a tuple with the Picker field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitlePickerAllOf) GetPickerOk() (*Picker, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Picker, true
}

// SetPicker sets field value
func (o *ScreenImageTitleSubtitlePickerAllOf) SetPicker(v Picker) {
	o.Picker = v
}

func (o ScreenImageTitleSubtitlePickerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageTitleSubtitlePickerDescription"] = o.ImageTitleSubtitlePickerDescription
	}
	if true {
		toSerialize["image"] = o.Image
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["picker"] = o.Picker
	}
	return json.Marshal(toSerialize)
}

type NullableScreenImageTitleSubtitlePickerAllOf struct {
	value *ScreenImageTitleSubtitlePickerAllOf
	isSet bool
}

func (v NullableScreenImageTitleSubtitlePickerAllOf) Get() *ScreenImageTitleSubtitlePickerAllOf {
	return v.value
}

func (v *NullableScreenImageTitleSubtitlePickerAllOf) Set(val *ScreenImageTitleSubtitlePickerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenImageTitleSubtitlePickerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenImageTitleSubtitlePickerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenImageTitleSubtitlePickerAllOf(val *ScreenImageTitleSubtitlePickerAllOf) *NullableScreenImageTitleSubtitlePickerAllOf {
	return &NullableScreenImageTitleSubtitlePickerAllOf{value: val, isSet: true}
}

func (v NullableScreenImageTitleSubtitlePickerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenImageTitleSubtitlePickerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


