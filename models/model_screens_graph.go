/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreensGraph The graph of screens for onboarding
type ScreensGraph struct {
	DefaultLanguage Language `json:"defaultLanguage"`
	// The list of languages
	Languages []Language `json:"languages"`
	// Schema version in semver format
	SchemaVersion *string `json:"schemaVersion,omitempty"`
	// First screen id
	LaunchScreenId string `json:"launchScreenId"`
	// All screens nodes dictionary
	Screens map[string]Screen `json:"screens"`
	// Metadata dictionary
	Metadata map[string]string `json:"metadata"`
}

// NewScreensGraph instantiates a new ScreensGraph object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreensGraph(defaultLanguage Language, languages []Language, launchScreenId string, screens map[string]Screen, metadata map[string]string) *ScreensGraph {
	this := ScreensGraph{}
	this.DefaultLanguage = defaultLanguage
	this.Languages = languages
	this.LaunchScreenId = launchScreenId
	this.Screens = screens
	this.Metadata = metadata
	return &this
}

// NewScreensGraphWithDefaults instantiates a new ScreensGraph object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreensGraphWithDefaults() *ScreensGraph {
	this := ScreensGraph{}
	return &this
}

// GetDefaultLanguage returns the DefaultLanguage field value
func (o *ScreensGraph) GetDefaultLanguage() Language {
	if o == nil {
		var ret Language
		return ret
	}

	return o.DefaultLanguage
}

// GetDefaultLanguageOk returns a tuple with the DefaultLanguage field value
// and a boolean to check if the value has been set.
func (o *ScreensGraph) GetDefaultLanguageOk() (*Language, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DefaultLanguage, true
}

// SetDefaultLanguage sets field value
func (o *ScreensGraph) SetDefaultLanguage(v Language) {
	o.DefaultLanguage = v
}

// GetLanguages returns the Languages field value
func (o *ScreensGraph) GetLanguages() []Language {
	if o == nil {
		var ret []Language
		return ret
	}

	return o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value
// and a boolean to check if the value has been set.
func (o *ScreensGraph) GetLanguagesOk() ([]Language, bool) {
	if o == nil {
    return nil, false
	}
	return o.Languages, true
}

// SetLanguages sets field value
func (o *ScreensGraph) SetLanguages(v []Language) {
	o.Languages = v
}

// GetSchemaVersion returns the SchemaVersion field value if set, zero value otherwise.
func (o *ScreensGraph) GetSchemaVersion() string {
	if o == nil || isNil(o.SchemaVersion) {
		var ret string
		return ret
	}
	return *o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreensGraph) GetSchemaVersionOk() (*string, bool) {
	if o == nil || isNil(o.SchemaVersion) {
    return nil, false
	}
	return o.SchemaVersion, true
}

// HasSchemaVersion returns a boolean if a field has been set.
func (o *ScreensGraph) HasSchemaVersion() bool {
	if o != nil && !isNil(o.SchemaVersion) {
		return true
	}

	return false
}

// SetSchemaVersion gets a reference to the given string and assigns it to the SchemaVersion field.
func (o *ScreensGraph) SetSchemaVersion(v string) {
	o.SchemaVersion = &v
}

// GetLaunchScreenId returns the LaunchScreenId field value
func (o *ScreensGraph) GetLaunchScreenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LaunchScreenId
}

// GetLaunchScreenIdOk returns a tuple with the LaunchScreenId field value
// and a boolean to check if the value has been set.
func (o *ScreensGraph) GetLaunchScreenIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LaunchScreenId, true
}

// SetLaunchScreenId sets field value
func (o *ScreensGraph) SetLaunchScreenId(v string) {
	o.LaunchScreenId = v
}

// GetScreens returns the Screens field value
func (o *ScreensGraph) GetScreens() map[string]Screen {
	if o == nil {
		var ret map[string]Screen
		return ret
	}

	return o.Screens
}

// GetScreensOk returns a tuple with the Screens field value
// and a boolean to check if the value has been set.
func (o *ScreensGraph) GetScreensOk() (*map[string]Screen, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Screens, true
}

// SetScreens sets field value
func (o *ScreensGraph) SetScreens(v map[string]Screen) {
	o.Screens = v
}

// GetMetadata returns the Metadata field value
func (o *ScreensGraph) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ScreensGraph) GetMetadataOk() (*map[string]string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *ScreensGraph) SetMetadata(v map[string]string) {
	o.Metadata = v
}

func (o ScreensGraph) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["defaultLanguage"] = o.DefaultLanguage
	}
	if true {
		toSerialize["languages"] = o.Languages
	}
	if !isNil(o.SchemaVersion) {
		toSerialize["schemaVersion"] = o.SchemaVersion
	}
	if true {
		toSerialize["launchScreenId"] = o.LaunchScreenId
	}
	if true {
		toSerialize["screens"] = o.Screens
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableScreensGraph struct {
	value *ScreensGraph
	isSet bool
}

func (v NullableScreensGraph) Get() *ScreensGraph {
	return v.value
}

func (v *NullableScreensGraph) Set(val *ScreensGraph) {
	v.value = val
	v.isSet = true
}

func (v NullableScreensGraph) IsSet() bool {
	return v.isSet
}

func (v *NullableScreensGraph) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreensGraph(val *ScreensGraph) *NullableScreensGraph {
	return &NullableScreensGraph{value: val, isSet: true}
}

func (v NullableScreensGraph) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreensGraph) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


