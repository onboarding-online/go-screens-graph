/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenBasicPaywallBlock struct for ScreenBasicPaywallBlock
type ScreenBasicPaywallBlock struct {
	Background BackgroundStyle `json:"background"`
	// Padding left for body
	PaddingLeft *float32 `json:"paddingLeft,omitempty"`
	// Padding right for body
	PaddingRight *float32 `json:"paddingRight,omitempty"`
	// Padding top for body
	PaddingTop *float32 `json:"paddingTop,omitempty"`
	// Padding bottom for body
	PaddingBottom *float32 `json:"paddingBottom,omitempty"`
	BodyColor *string `json:"bodyColor,omitempty"`
	BodyOpacity *string `json:"bodyOpacity,omitempty"`
	ImageVerticalPosition *PaywallImageVerticalPositionKind `json:"imageVerticalPosition,omitempty"`
	BodyBackgroundColor *string `json:"bodyBackgroundColor,omitempty"`
	BodyBackgroundOpacity *float32 `json:"bodyBackgroundOpacity,omitempty"`
	BodyKind *BasicPaywallBodyKind `json:"bodyKind,omitempty"`
	BodyStyle *BasicPaywallBodyStyle `json:"bodyStyle,omitempty"`
	Blur *BlurKind `json:"blur,omitempty"`
}

// NewScreenBasicPaywallBlock instantiates a new ScreenBasicPaywallBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenBasicPaywallBlock(background BackgroundStyle) *ScreenBasicPaywallBlock {
	this := ScreenBasicPaywallBlock{}
	this.Background = background
	return &this
}

// NewScreenBasicPaywallBlockWithDefaults instantiates a new ScreenBasicPaywallBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenBasicPaywallBlockWithDefaults() *ScreenBasicPaywallBlock {
	this := ScreenBasicPaywallBlock{}
	return &this
}

// GetBackground returns the Background field value
func (o *ScreenBasicPaywallBlock) GetBackground() BackgroundStyle {
	if o == nil {
		var ret BackgroundStyle
		return ret
	}

	return o.Background
}

// GetBackgroundOk returns a tuple with the Background field value
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBackgroundOk() (*BackgroundStyle, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Background, true
}

// SetBackground sets field value
func (o *ScreenBasicPaywallBlock) SetBackground(v BackgroundStyle) {
	o.Background = v
}

// GetPaddingLeft returns the PaddingLeft field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetPaddingLeft() float32 {
	if o == nil || isNil(o.PaddingLeft) {
		var ret float32
		return ret
	}
	return *o.PaddingLeft
}

// GetPaddingLeftOk returns a tuple with the PaddingLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetPaddingLeftOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingLeft) {
    return nil, false
	}
	return o.PaddingLeft, true
}

// HasPaddingLeft returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasPaddingLeft() bool {
	if o != nil && !isNil(o.PaddingLeft) {
		return true
	}

	return false
}

// SetPaddingLeft gets a reference to the given float32 and assigns it to the PaddingLeft field.
func (o *ScreenBasicPaywallBlock) SetPaddingLeft(v float32) {
	o.PaddingLeft = &v
}

// GetPaddingRight returns the PaddingRight field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetPaddingRight() float32 {
	if o == nil || isNil(o.PaddingRight) {
		var ret float32
		return ret
	}
	return *o.PaddingRight
}

// GetPaddingRightOk returns a tuple with the PaddingRight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetPaddingRightOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingRight) {
    return nil, false
	}
	return o.PaddingRight, true
}

// HasPaddingRight returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasPaddingRight() bool {
	if o != nil && !isNil(o.PaddingRight) {
		return true
	}

	return false
}

// SetPaddingRight gets a reference to the given float32 and assigns it to the PaddingRight field.
func (o *ScreenBasicPaywallBlock) SetPaddingRight(v float32) {
	o.PaddingRight = &v
}

// GetPaddingTop returns the PaddingTop field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetPaddingTop() float32 {
	if o == nil || isNil(o.PaddingTop) {
		var ret float32
		return ret
	}
	return *o.PaddingTop
}

// GetPaddingTopOk returns a tuple with the PaddingTop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetPaddingTopOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingTop) {
    return nil, false
	}
	return o.PaddingTop, true
}

// HasPaddingTop returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasPaddingTop() bool {
	if o != nil && !isNil(o.PaddingTop) {
		return true
	}

	return false
}

// SetPaddingTop gets a reference to the given float32 and assigns it to the PaddingTop field.
func (o *ScreenBasicPaywallBlock) SetPaddingTop(v float32) {
	o.PaddingTop = &v
}

// GetPaddingBottom returns the PaddingBottom field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetPaddingBottom() float32 {
	if o == nil || isNil(o.PaddingBottom) {
		var ret float32
		return ret
	}
	return *o.PaddingBottom
}

// GetPaddingBottomOk returns a tuple with the PaddingBottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetPaddingBottomOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingBottom) {
    return nil, false
	}
	return o.PaddingBottom, true
}

// HasPaddingBottom returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasPaddingBottom() bool {
	if o != nil && !isNil(o.PaddingBottom) {
		return true
	}

	return false
}

// SetPaddingBottom gets a reference to the given float32 and assigns it to the PaddingBottom field.
func (o *ScreenBasicPaywallBlock) SetPaddingBottom(v float32) {
	o.PaddingBottom = &v
}

// GetBodyColor returns the BodyColor field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetBodyColor() string {
	if o == nil || isNil(o.BodyColor) {
		var ret string
		return ret
	}
	return *o.BodyColor
}

// GetBodyColorOk returns a tuple with the BodyColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBodyColorOk() (*string, bool) {
	if o == nil || isNil(o.BodyColor) {
    return nil, false
	}
	return o.BodyColor, true
}

// HasBodyColor returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasBodyColor() bool {
	if o != nil && !isNil(o.BodyColor) {
		return true
	}

	return false
}

// SetBodyColor gets a reference to the given string and assigns it to the BodyColor field.
func (o *ScreenBasicPaywallBlock) SetBodyColor(v string) {
	o.BodyColor = &v
}

// GetBodyOpacity returns the BodyOpacity field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetBodyOpacity() string {
	if o == nil || isNil(o.BodyOpacity) {
		var ret string
		return ret
	}
	return *o.BodyOpacity
}

// GetBodyOpacityOk returns a tuple with the BodyOpacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBodyOpacityOk() (*string, bool) {
	if o == nil || isNil(o.BodyOpacity) {
    return nil, false
	}
	return o.BodyOpacity, true
}

// HasBodyOpacity returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasBodyOpacity() bool {
	if o != nil && !isNil(o.BodyOpacity) {
		return true
	}

	return false
}

// SetBodyOpacity gets a reference to the given string and assigns it to the BodyOpacity field.
func (o *ScreenBasicPaywallBlock) SetBodyOpacity(v string) {
	o.BodyOpacity = &v
}

// GetImageVerticalPosition returns the ImageVerticalPosition field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetImageVerticalPosition() PaywallImageVerticalPositionKind {
	if o == nil || isNil(o.ImageVerticalPosition) {
		var ret PaywallImageVerticalPositionKind
		return ret
	}
	return *o.ImageVerticalPosition
}

// GetImageVerticalPositionOk returns a tuple with the ImageVerticalPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetImageVerticalPositionOk() (*PaywallImageVerticalPositionKind, bool) {
	if o == nil || isNil(o.ImageVerticalPosition) {
    return nil, false
	}
	return o.ImageVerticalPosition, true
}

// HasImageVerticalPosition returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasImageVerticalPosition() bool {
	if o != nil && !isNil(o.ImageVerticalPosition) {
		return true
	}

	return false
}

// SetImageVerticalPosition gets a reference to the given PaywallImageVerticalPositionKind and assigns it to the ImageVerticalPosition field.
func (o *ScreenBasicPaywallBlock) SetImageVerticalPosition(v PaywallImageVerticalPositionKind) {
	o.ImageVerticalPosition = &v
}

// GetBodyBackgroundColor returns the BodyBackgroundColor field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetBodyBackgroundColor() string {
	if o == nil || isNil(o.BodyBackgroundColor) {
		var ret string
		return ret
	}
	return *o.BodyBackgroundColor
}

// GetBodyBackgroundColorOk returns a tuple with the BodyBackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBodyBackgroundColorOk() (*string, bool) {
	if o == nil || isNil(o.BodyBackgroundColor) {
    return nil, false
	}
	return o.BodyBackgroundColor, true
}

// HasBodyBackgroundColor returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasBodyBackgroundColor() bool {
	if o != nil && !isNil(o.BodyBackgroundColor) {
		return true
	}

	return false
}

// SetBodyBackgroundColor gets a reference to the given string and assigns it to the BodyBackgroundColor field.
func (o *ScreenBasicPaywallBlock) SetBodyBackgroundColor(v string) {
	o.BodyBackgroundColor = &v
}

// GetBodyBackgroundOpacity returns the BodyBackgroundOpacity field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetBodyBackgroundOpacity() float32 {
	if o == nil || isNil(o.BodyBackgroundOpacity) {
		var ret float32
		return ret
	}
	return *o.BodyBackgroundOpacity
}

// GetBodyBackgroundOpacityOk returns a tuple with the BodyBackgroundOpacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBodyBackgroundOpacityOk() (*float32, bool) {
	if o == nil || isNil(o.BodyBackgroundOpacity) {
    return nil, false
	}
	return o.BodyBackgroundOpacity, true
}

// HasBodyBackgroundOpacity returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasBodyBackgroundOpacity() bool {
	if o != nil && !isNil(o.BodyBackgroundOpacity) {
		return true
	}

	return false
}

// SetBodyBackgroundOpacity gets a reference to the given float32 and assigns it to the BodyBackgroundOpacity field.
func (o *ScreenBasicPaywallBlock) SetBodyBackgroundOpacity(v float32) {
	o.BodyBackgroundOpacity = &v
}

// GetBodyKind returns the BodyKind field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetBodyKind() BasicPaywallBodyKind {
	if o == nil || isNil(o.BodyKind) {
		var ret BasicPaywallBodyKind
		return ret
	}
	return *o.BodyKind
}

// GetBodyKindOk returns a tuple with the BodyKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBodyKindOk() (*BasicPaywallBodyKind, bool) {
	if o == nil || isNil(o.BodyKind) {
    return nil, false
	}
	return o.BodyKind, true
}

// HasBodyKind returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasBodyKind() bool {
	if o != nil && !isNil(o.BodyKind) {
		return true
	}

	return false
}

// SetBodyKind gets a reference to the given BasicPaywallBodyKind and assigns it to the BodyKind field.
func (o *ScreenBasicPaywallBlock) SetBodyKind(v BasicPaywallBodyKind) {
	o.BodyKind = &v
}

// GetBodyStyle returns the BodyStyle field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetBodyStyle() BasicPaywallBodyStyle {
	if o == nil || isNil(o.BodyStyle) {
		var ret BasicPaywallBodyStyle
		return ret
	}
	return *o.BodyStyle
}

// GetBodyStyleOk returns a tuple with the BodyStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBodyStyleOk() (*BasicPaywallBodyStyle, bool) {
	if o == nil || isNil(o.BodyStyle) {
    return nil, false
	}
	return o.BodyStyle, true
}

// HasBodyStyle returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasBodyStyle() bool {
	if o != nil && !isNil(o.BodyStyle) {
		return true
	}

	return false
}

// SetBodyStyle gets a reference to the given BasicPaywallBodyStyle and assigns it to the BodyStyle field.
func (o *ScreenBasicPaywallBlock) SetBodyStyle(v BasicPaywallBodyStyle) {
	o.BodyStyle = &v
}

// GetBlur returns the Blur field value if set, zero value otherwise.
func (o *ScreenBasicPaywallBlock) GetBlur() BlurKind {
	if o == nil || isNil(o.Blur) {
		var ret BlurKind
		return ret
	}
	return *o.Blur
}

// GetBlurOk returns a tuple with the Blur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenBasicPaywallBlock) GetBlurOk() (*BlurKind, bool) {
	if o == nil || isNil(o.Blur) {
    return nil, false
	}
	return o.Blur, true
}

// HasBlur returns a boolean if a field has been set.
func (o *ScreenBasicPaywallBlock) HasBlur() bool {
	if o != nil && !isNil(o.Blur) {
		return true
	}

	return false
}

// SetBlur gets a reference to the given BlurKind and assigns it to the Blur field.
func (o *ScreenBasicPaywallBlock) SetBlur(v BlurKind) {
	o.Blur = &v
}

func (o ScreenBasicPaywallBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["background"] = o.Background
	}
	if !isNil(o.PaddingLeft) {
		toSerialize["paddingLeft"] = o.PaddingLeft
	}
	if !isNil(o.PaddingRight) {
		toSerialize["paddingRight"] = o.PaddingRight
	}
	if !isNil(o.PaddingTop) {
		toSerialize["paddingTop"] = o.PaddingTop
	}
	if !isNil(o.PaddingBottom) {
		toSerialize["paddingBottom"] = o.PaddingBottom
	}
	if !isNil(o.BodyColor) {
		toSerialize["bodyColor"] = o.BodyColor
	}
	if !isNil(o.BodyOpacity) {
		toSerialize["bodyOpacity"] = o.BodyOpacity
	}
	if !isNil(o.ImageVerticalPosition) {
		toSerialize["imageVerticalPosition"] = o.ImageVerticalPosition
	}
	if !isNil(o.BodyBackgroundColor) {
		toSerialize["bodyBackgroundColor"] = o.BodyBackgroundColor
	}
	if !isNil(o.BodyBackgroundOpacity) {
		toSerialize["bodyBackgroundOpacity"] = o.BodyBackgroundOpacity
	}
	if !isNil(o.BodyKind) {
		toSerialize["bodyKind"] = o.BodyKind
	}
	if !isNil(o.BodyStyle) {
		toSerialize["bodyStyle"] = o.BodyStyle
	}
	if !isNil(o.Blur) {
		toSerialize["blur"] = o.Blur
	}
	return json.Marshal(toSerialize)
}

type NullableScreenBasicPaywallBlock struct {
	value *ScreenBasicPaywallBlock
	isSet bool
}

func (v NullableScreenBasicPaywallBlock) Get() *ScreenBasicPaywallBlock {
	return v.value
}

func (v *NullableScreenBasicPaywallBlock) Set(val *ScreenBasicPaywallBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenBasicPaywallBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenBasicPaywallBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenBasicPaywallBlock(val *ScreenBasicPaywallBlock) *NullableScreenBasicPaywallBlock {
	return &NullableScreenBasicPaywallBlock{value: val, isSet: true}
}

func (v NullableScreenBasicPaywallBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenBasicPaywallBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


