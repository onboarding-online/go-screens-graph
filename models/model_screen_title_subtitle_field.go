/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenTitleSubtitleField struct for ScreenTitleSubtitleField
type ScreenTitleSubtitleField struct {
	NavigationBar NavigationBar `json:"navigationBar"`
	Footer Footer `json:"footer"`
	Styles BasicScreenBlock `json:"styles"`
	Permission NullableRequestPermission `json:"permission"`
	Timer NullableScreenTimer `json:"timer"`
	AnimationEnabled bool `json:"animationEnabled"`
	UseLocalAssetsIfAvailable bool `json:"useLocalAssetsIfAvailable"`
	TitleSubtitleFieldDescription string `json:"titleSubtitleFieldDescription"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	Field Field `json:"field"`
}

// NewScreenTitleSubtitleField instantiates a new ScreenTitleSubtitleField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenTitleSubtitleField(navigationBar NavigationBar, footer Footer, styles BasicScreenBlock, permission NullableRequestPermission, timer NullableScreenTimer, animationEnabled bool, useLocalAssetsIfAvailable bool, titleSubtitleFieldDescription string, title Text, subtitle Text, field Field) *ScreenTitleSubtitleField {
	this := ScreenTitleSubtitleField{}
	this.NavigationBar = navigationBar
	this.Footer = footer
	this.Styles = styles
	this.Permission = permission
	this.Timer = timer
	this.AnimationEnabled = animationEnabled
	this.UseLocalAssetsIfAvailable = useLocalAssetsIfAvailable
	this.TitleSubtitleFieldDescription = titleSubtitleFieldDescription
	this.Title = title
	this.Subtitle = subtitle
	this.Field = field
	return &this
}

// NewScreenTitleSubtitleFieldWithDefaults instantiates a new ScreenTitleSubtitleField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenTitleSubtitleFieldWithDefaults() *ScreenTitleSubtitleField {
	this := ScreenTitleSubtitleField{}
	return &this
}

// GetNavigationBar returns the NavigationBar field value
func (o *ScreenTitleSubtitleField) GetNavigationBar() NavigationBar {
	if o == nil {
		var ret NavigationBar
		return ret
	}

	return o.NavigationBar
}

// GetNavigationBarOk returns a tuple with the NavigationBar field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetNavigationBarOk() (*NavigationBar, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NavigationBar, true
}

// SetNavigationBar sets field value
func (o *ScreenTitleSubtitleField) SetNavigationBar(v NavigationBar) {
	o.NavigationBar = v
}

// GetFooter returns the Footer field value
func (o *ScreenTitleSubtitleField) GetFooter() Footer {
	if o == nil {
		var ret Footer
		return ret
	}

	return o.Footer
}

// GetFooterOk returns a tuple with the Footer field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetFooterOk() (*Footer, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Footer, true
}

// SetFooter sets field value
func (o *ScreenTitleSubtitleField) SetFooter(v Footer) {
	o.Footer = v
}

// GetStyles returns the Styles field value
func (o *ScreenTitleSubtitleField) GetStyles() BasicScreenBlock {
	if o == nil {
		var ret BasicScreenBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetStylesOk() (*BasicScreenBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *ScreenTitleSubtitleField) SetStyles(v BasicScreenBlock) {
	o.Styles = v
}

// GetPermission returns the Permission field value
// If the value is explicit nil, the zero value for RequestPermission will be returned
func (o *ScreenTitleSubtitleField) GetPermission() RequestPermission {
	if o == nil || o.Permission.Get() == nil {
		var ret RequestPermission
		return ret
	}

	return *o.Permission.Get()
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenTitleSubtitleField) GetPermissionOk() (*RequestPermission, bool) {
	if o == nil {
    return nil, false
	}
	return o.Permission.Get(), o.Permission.IsSet()
}

// SetPermission sets field value
func (o *ScreenTitleSubtitleField) SetPermission(v RequestPermission) {
	o.Permission.Set(&v)
}

// GetTimer returns the Timer field value
// If the value is explicit nil, the zero value for ScreenTimer will be returned
func (o *ScreenTitleSubtitleField) GetTimer() ScreenTimer {
	if o == nil || o.Timer.Get() == nil {
		var ret ScreenTimer
		return ret
	}

	return *o.Timer.Get()
}

// GetTimerOk returns a tuple with the Timer field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenTitleSubtitleField) GetTimerOk() (*ScreenTimer, bool) {
	if o == nil {
    return nil, false
	}
	return o.Timer.Get(), o.Timer.IsSet()
}

// SetTimer sets field value
func (o *ScreenTitleSubtitleField) SetTimer(v ScreenTimer) {
	o.Timer.Set(&v)
}

// GetAnimationEnabled returns the AnimationEnabled field value
func (o *ScreenTitleSubtitleField) GetAnimationEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AnimationEnabled
}

// GetAnimationEnabledOk returns a tuple with the AnimationEnabled field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetAnimationEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AnimationEnabled, true
}

// SetAnimationEnabled sets field value
func (o *ScreenTitleSubtitleField) SetAnimationEnabled(v bool) {
	o.AnimationEnabled = v
}

// GetUseLocalAssetsIfAvailable returns the UseLocalAssetsIfAvailable field value
func (o *ScreenTitleSubtitleField) GetUseLocalAssetsIfAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseLocalAssetsIfAvailable
}

// GetUseLocalAssetsIfAvailableOk returns a tuple with the UseLocalAssetsIfAvailable field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetUseLocalAssetsIfAvailableOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UseLocalAssetsIfAvailable, true
}

// SetUseLocalAssetsIfAvailable sets field value
func (o *ScreenTitleSubtitleField) SetUseLocalAssetsIfAvailable(v bool) {
	o.UseLocalAssetsIfAvailable = v
}

// GetTitleSubtitleFieldDescription returns the TitleSubtitleFieldDescription field value
func (o *ScreenTitleSubtitleField) GetTitleSubtitleFieldDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TitleSubtitleFieldDescription
}

// GetTitleSubtitleFieldDescriptionOk returns a tuple with the TitleSubtitleFieldDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetTitleSubtitleFieldDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TitleSubtitleFieldDescription, true
}

// SetTitleSubtitleFieldDescription sets field value
func (o *ScreenTitleSubtitleField) SetTitleSubtitleFieldDescription(v string) {
	o.TitleSubtitleFieldDescription = v
}

// GetTitle returns the Title field value
func (o *ScreenTitleSubtitleField) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenTitleSubtitleField) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenTitleSubtitleField) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenTitleSubtitleField) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetField returns the Field field value
func (o *ScreenTitleSubtitleField) GetField() Field {
	if o == nil {
		var ret Field
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *ScreenTitleSubtitleField) GetFieldOk() (*Field, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *ScreenTitleSubtitleField) SetField(v Field) {
	o.Field = v
}

func (o ScreenTitleSubtitleField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["navigationBar"] = o.NavigationBar
	}
	if true {
		toSerialize["footer"] = o.Footer
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	if true {
		toSerialize["permission"] = o.Permission.Get()
	}
	if true {
		toSerialize["timer"] = o.Timer.Get()
	}
	if true {
		toSerialize["animationEnabled"] = o.AnimationEnabled
	}
	if true {
		toSerialize["useLocalAssetsIfAvailable"] = o.UseLocalAssetsIfAvailable
	}
	if true {
		toSerialize["titleSubtitleFieldDescription"] = o.TitleSubtitleFieldDescription
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["field"] = o.Field
	}
	return json.Marshal(toSerialize)
}

type NullableScreenTitleSubtitleField struct {
	value *ScreenTitleSubtitleField
	isSet bool
}

func (v NullableScreenTitleSubtitleField) Get() *ScreenTitleSubtitleField {
	return v.value
}

func (v *NullableScreenTitleSubtitleField) Set(val *ScreenTitleSubtitleField) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenTitleSubtitleField) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenTitleSubtitleField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenTitleSubtitleField(val *ScreenTitleSubtitleField) *NullableScreenTitleSubtitleField {
	return &NullableScreenTitleSubtitleField{value: val, isSet: true}
}

func (v NullableScreenTitleSubtitleField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenTitleSubtitleField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


