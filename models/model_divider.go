/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// Divider Divider element
type Divider struct {
	Box Box `json:"box"`
	Kind BaseDividerKind `json:"kind"`
	Styles BaseDividerBlock `json:"styles"`
}

// NewDivider instantiates a new Divider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDivider(box Box, kind BaseDividerKind, styles BaseDividerBlock) *Divider {
	this := Divider{}
	this.Kind = kind
	this.Styles = styles
	return &this
}

// NewDividerWithDefaults instantiates a new Divider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDividerWithDefaults() *Divider {
	this := Divider{}
	return &this
}

// GetBox returns the Box field value
func (o *Divider) GetBox() Box {
	if o == nil {
		var ret Box
		return ret
	}

	return o.Box
}

// GetBoxOk returns a tuple with the Box field value
// and a boolean to check if the value has been set.
func (o *Divider) GetBoxOk() (*Box, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Box, true
}

// SetBox sets field value
func (o *Divider) SetBox(v Box) {
	o.Box = v
}

// GetKind returns the Kind field value
func (o *Divider) GetKind() BaseDividerKind {
	if o == nil {
		var ret BaseDividerKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *Divider) GetKindOk() (*BaseDividerKind, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *Divider) SetKind(v BaseDividerKind) {
	o.Kind = v
}

// GetStyles returns the Styles field value
func (o *Divider) GetStyles() BaseDividerBlock {
	if o == nil {
		var ret BaseDividerBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *Divider) GetStylesOk() (*BaseDividerBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *Divider) SetStyles(v BaseDividerBlock) {
	o.Styles = v
}

func (o Divider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["box"] = o.Box
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	return json.Marshal(toSerialize)
}

type NullableDivider struct {
	value *Divider
	isSet bool
}

func (v NullableDivider) Get() *Divider {
	return v.value
}

func (v *NullableDivider) Set(val *Divider) {
	v.value = val
	v.isSet = true
}

func (v NullableDivider) IsSet() bool {
	return v.isSet
}

func (v *NullableDivider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDivider(val *Divider) *NullableDivider {
	return &NullableDivider{value: val, isSet: true}
}

func (v NullableDivider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDivider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


