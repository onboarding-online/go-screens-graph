/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// BasicPaywallBodyStyle - Base button content
type BasicPaywallBodyStyle struct {
	Gradient *Gradient
	PaywallBodyMask *PaywallBodyMask
}

// GradientAsBasicPaywallBodyStyle is a convenience function that returns Gradient wrapped in BasicPaywallBodyStyle
func GradientAsBasicPaywallBodyStyle(v *Gradient) BasicPaywallBodyStyle {
	return BasicPaywallBodyStyle{
		Gradient: v,
	}
}

// PaywallBodyMaskAsBasicPaywallBodyStyle is a convenience function that returns PaywallBodyMask wrapped in BasicPaywallBodyStyle
func PaywallBodyMaskAsBasicPaywallBodyStyle(v *PaywallBodyMask) BasicPaywallBodyStyle {
	return BasicPaywallBodyStyle{
		PaywallBodyMask: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *BasicPaywallBodyStyle) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Gradient
	err = newStrictDecoder(data).Decode(&dst.Gradient)
	if err == nil {
		jsonGradient, _ := json.Marshal(dst.Gradient)
		if string(jsonGradient) == "{}" { // empty struct
			dst.Gradient = nil
		} else {
			match++
		}
	} else {
		dst.Gradient = nil
	}

	// try to unmarshal data into PaywallBodyMask
	err = newStrictDecoder(data).Decode(&dst.PaywallBodyMask)
	if err == nil {
		jsonPaywallBodyMask, _ := json.Marshal(dst.PaywallBodyMask)
		if string(jsonPaywallBodyMask) == "{}" { // empty struct
			dst.PaywallBodyMask = nil
		} else {
			match++
		}
	} else {
		dst.PaywallBodyMask = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Gradient = nil
		dst.PaywallBodyMask = nil

		return fmt.Errorf("data matches more than one schema in oneOf(BasicPaywallBodyStyle)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(BasicPaywallBodyStyle)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BasicPaywallBodyStyle) MarshalJSON() ([]byte, error) {
	if src.Gradient != nil {
		return json.Marshal(&src.Gradient)
	}

	if src.PaywallBodyMask != nil {
		return json.Marshal(&src.PaywallBodyMask)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *BasicPaywallBodyStyle) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.Gradient != nil {
		return obj.Gradient
	}

	if obj.PaywallBodyMask != nil {
		return obj.PaywallBodyMask
	}

	// all schemas are nil
	return nil
}

type NullableBasicPaywallBodyStyle struct {
	value *BasicPaywallBodyStyle
	isSet bool
}

func (v NullableBasicPaywallBodyStyle) Get() *BasicPaywallBodyStyle {
	return v.value
}

func (v *NullableBasicPaywallBodyStyle) Set(val *BasicPaywallBodyStyle) {
	v.value = val
	v.isSet = true
}

func (v NullableBasicPaywallBodyStyle) IsSet() bool {
	return v.isSet
}

func (v *NullableBasicPaywallBodyStyle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasicPaywallBodyStyle(val *BasicPaywallBodyStyle) *NullableBasicPaywallBodyStyle {
	return &NullableBasicPaywallBodyStyle{value: val, isSet: true}
}

func (v NullableBasicPaywallBodyStyle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasicPaywallBodyStyle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


