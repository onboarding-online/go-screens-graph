/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// BaseNavLink Base navigation link parameters
type BaseNavLink struct {
	Kind NavLinkKind `json:"kind"`
	Content BaseNavLinkContent `json:"content"`
	Styles NavLinkBlock `json:"styles"`
	// The uri Link
	Uri string `json:"uri"`
}

// NewBaseNavLink instantiates a new BaseNavLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseNavLink(kind NavLinkKind, content BaseNavLinkContent, styles NavLinkBlock, uri string) *BaseNavLink {
	this := BaseNavLink{}
	this.Kind = kind
	this.Content = content
	this.Styles = styles
	this.Uri = uri
	return &this
}

// NewBaseNavLinkWithDefaults instantiates a new BaseNavLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseNavLinkWithDefaults() *BaseNavLink {
	this := BaseNavLink{}
	return &this
}

// GetKind returns the Kind field value
func (o *BaseNavLink) GetKind() NavLinkKind {
	if o == nil {
		var ret NavLinkKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *BaseNavLink) GetKindOk() (*NavLinkKind, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *BaseNavLink) SetKind(v NavLinkKind) {
	o.Kind = v
}

// GetContent returns the Content field value
func (o *BaseNavLink) GetContent() BaseNavLinkContent {
	if o == nil {
		var ret BaseNavLinkContent
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *BaseNavLink) GetContentOk() (*BaseNavLinkContent, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *BaseNavLink) SetContent(v BaseNavLinkContent) {
	o.Content = v
}

// GetStyles returns the Styles field value
func (o *BaseNavLink) GetStyles() NavLinkBlock {
	if o == nil {
		var ret NavLinkBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *BaseNavLink) GetStylesOk() (*NavLinkBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *BaseNavLink) SetStyles(v NavLinkBlock) {
	o.Styles = v
}

// GetUri returns the Uri field value
func (o *BaseNavLink) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *BaseNavLink) GetUriOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *BaseNavLink) SetUri(v string) {
	o.Uri = v
}

func (o BaseNavLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	if true {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableBaseNavLink struct {
	value *BaseNavLink
	isSet bool
}

func (v NullableBaseNavLink) Get() *BaseNavLink {
	return v.value
}

func (v *NullableBaseNavLink) Set(val *BaseNavLink) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseNavLink) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseNavLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseNavLink(val *BaseNavLink) *NullableBaseNavLink {
	return &NullableBaseNavLink{value: val, isSet: true}
}

func (v NullableBaseNavLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseNavLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


