/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// NavLinkKind Navigation link kind
type NavLinkKind string

// List of NavLinkKind
const (
	NAVLINKKIND_TEXT NavLinkKind = "text"
	NAVLINKKIND_IMAGE NavLinkKind = "image"
)

// All allowed values of NavLinkKind enum
var AllowedNavLinkKindEnumValues = []NavLinkKind{
	"text",
	"image",
}

func (v *NavLinkKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NavLinkKind(value)
	for _, existing := range AllowedNavLinkKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NavLinkKind", value)
}

// NewNavLinkKindFromValue returns a pointer to a valid NavLinkKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNavLinkKindFromValue(v string) (*NavLinkKind, error) {
	ev := NavLinkKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NavLinkKind: valid values are %v", v, AllowedNavLinkKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NavLinkKind) IsValid() bool {
	for _, existing := range AllowedNavLinkKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NavLinkKind value
func (v NavLinkKind) Ptr() *NavLinkKind {
	return &v
}

type NullableNavLinkKind struct {
	value *NavLinkKind
	isSet bool
}

func (v NullableNavLinkKind) Get() *NavLinkKind {
	return v.value
}

func (v *NullableNavLinkKind) Set(val *NavLinkKind) {
	v.value = val
	v.isSet = true
}

func (v NullableNavLinkKind) IsSet() bool {
	return v.isSet
}

func (v *NullableNavLinkKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNavLinkKind(val *NavLinkKind) *NullableNavLinkKind {
	return &NullableNavLinkKind{value: val, isSet: true}
}

func (v NullableNavLinkKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNavLinkKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

