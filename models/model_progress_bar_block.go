/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ProgressBarBlock Styles for progress bar
type ProgressBarBlock struct {
	// width of progress bar
	Width *float32 `json:"width,omitempty"`
	// height of progress bar
	Height *float32 `json:"height,omitempty"`
	// Height in percentage
	HeightPercentage *float32 `json:"heightPercentage,omitempty"`
	// Color for progress bar
	Color *string `json:"color,omitempty"`
	// Track color
	TrackColor *string `json:"trackColor,omitempty"`
	// Fill color
	FillColor *string `json:"fillColor,omitempty"`
	// Thickness for progress bar
	Thickness *float32 `json:"thickness,omitempty"`
	// Track thickness
	TrackThickness *float32 `json:"trackThickness,omitempty"`
	VerticalAlignment *VerticalAlignment `json:"verticalAlignment,omitempty"`
}

// NewProgressBarBlock instantiates a new ProgressBarBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgressBarBlock() *ProgressBarBlock {
	this := ProgressBarBlock{}
	return &this
}

// NewProgressBarBlockWithDefaults instantiates a new ProgressBarBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgressBarBlockWithDefaults() *ProgressBarBlock {
	this := ProgressBarBlock{}
	return &this
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetWidth() float32 {
	if o == nil || isNil(o.Width) {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetWidthOk() (*float32, bool) {
	if o == nil || isNil(o.Width) {
    return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasWidth() bool {
	if o != nil && !isNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *ProgressBarBlock) SetWidth(v float32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetHeight() float32 {
	if o == nil || isNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetHeightOk() (*float32, bool) {
	if o == nil || isNil(o.Height) {
    return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasHeight() bool {
	if o != nil && !isNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *ProgressBarBlock) SetHeight(v float32) {
	o.Height = &v
}

// GetHeightPercentage returns the HeightPercentage field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetHeightPercentage() float32 {
	if o == nil || isNil(o.HeightPercentage) {
		var ret float32
		return ret
	}
	return *o.HeightPercentage
}

// GetHeightPercentageOk returns a tuple with the HeightPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetHeightPercentageOk() (*float32, bool) {
	if o == nil || isNil(o.HeightPercentage) {
    return nil, false
	}
	return o.HeightPercentage, true
}

// HasHeightPercentage returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasHeightPercentage() bool {
	if o != nil && !isNil(o.HeightPercentage) {
		return true
	}

	return false
}

// SetHeightPercentage gets a reference to the given float32 and assigns it to the HeightPercentage field.
func (o *ProgressBarBlock) SetHeightPercentage(v float32) {
	o.HeightPercentage = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetColor() string {
	if o == nil || isNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetColorOk() (*string, bool) {
	if o == nil || isNil(o.Color) {
    return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasColor() bool {
	if o != nil && !isNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ProgressBarBlock) SetColor(v string) {
	o.Color = &v
}

// GetTrackColor returns the TrackColor field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetTrackColor() string {
	if o == nil || isNil(o.TrackColor) {
		var ret string
		return ret
	}
	return *o.TrackColor
}

// GetTrackColorOk returns a tuple with the TrackColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetTrackColorOk() (*string, bool) {
	if o == nil || isNil(o.TrackColor) {
    return nil, false
	}
	return o.TrackColor, true
}

// HasTrackColor returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasTrackColor() bool {
	if o != nil && !isNil(o.TrackColor) {
		return true
	}

	return false
}

// SetTrackColor gets a reference to the given string and assigns it to the TrackColor field.
func (o *ProgressBarBlock) SetTrackColor(v string) {
	o.TrackColor = &v
}

// GetFillColor returns the FillColor field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetFillColor() string {
	if o == nil || isNil(o.FillColor) {
		var ret string
		return ret
	}
	return *o.FillColor
}

// GetFillColorOk returns a tuple with the FillColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetFillColorOk() (*string, bool) {
	if o == nil || isNil(o.FillColor) {
    return nil, false
	}
	return o.FillColor, true
}

// HasFillColor returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasFillColor() bool {
	if o != nil && !isNil(o.FillColor) {
		return true
	}

	return false
}

// SetFillColor gets a reference to the given string and assigns it to the FillColor field.
func (o *ProgressBarBlock) SetFillColor(v string) {
	o.FillColor = &v
}

// GetThickness returns the Thickness field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetThickness() float32 {
	if o == nil || isNil(o.Thickness) {
		var ret float32
		return ret
	}
	return *o.Thickness
}

// GetThicknessOk returns a tuple with the Thickness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetThicknessOk() (*float32, bool) {
	if o == nil || isNil(o.Thickness) {
    return nil, false
	}
	return o.Thickness, true
}

// HasThickness returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasThickness() bool {
	if o != nil && !isNil(o.Thickness) {
		return true
	}

	return false
}

// SetThickness gets a reference to the given float32 and assigns it to the Thickness field.
func (o *ProgressBarBlock) SetThickness(v float32) {
	o.Thickness = &v
}

// GetTrackThickness returns the TrackThickness field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetTrackThickness() float32 {
	if o == nil || isNil(o.TrackThickness) {
		var ret float32
		return ret
	}
	return *o.TrackThickness
}

// GetTrackThicknessOk returns a tuple with the TrackThickness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetTrackThicknessOk() (*float32, bool) {
	if o == nil || isNil(o.TrackThickness) {
    return nil, false
	}
	return o.TrackThickness, true
}

// HasTrackThickness returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasTrackThickness() bool {
	if o != nil && !isNil(o.TrackThickness) {
		return true
	}

	return false
}

// SetTrackThickness gets a reference to the given float32 and assigns it to the TrackThickness field.
func (o *ProgressBarBlock) SetTrackThickness(v float32) {
	o.TrackThickness = &v
}

// GetVerticalAlignment returns the VerticalAlignment field value if set, zero value otherwise.
func (o *ProgressBarBlock) GetVerticalAlignment() VerticalAlignment {
	if o == nil || isNil(o.VerticalAlignment) {
		var ret VerticalAlignment
		return ret
	}
	return *o.VerticalAlignment
}

// GetVerticalAlignmentOk returns a tuple with the VerticalAlignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarBlock) GetVerticalAlignmentOk() (*VerticalAlignment, bool) {
	if o == nil || isNil(o.VerticalAlignment) {
    return nil, false
	}
	return o.VerticalAlignment, true
}

// HasVerticalAlignment returns a boolean if a field has been set.
func (o *ProgressBarBlock) HasVerticalAlignment() bool {
	if o != nil && !isNil(o.VerticalAlignment) {
		return true
	}

	return false
}

// SetVerticalAlignment gets a reference to the given VerticalAlignment and assigns it to the VerticalAlignment field.
func (o *ProgressBarBlock) SetVerticalAlignment(v VerticalAlignment) {
	o.VerticalAlignment = &v
}

func (o ProgressBarBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !isNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !isNil(o.HeightPercentage) {
		toSerialize["heightPercentage"] = o.HeightPercentage
	}
	if !isNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !isNil(o.TrackColor) {
		toSerialize["trackColor"] = o.TrackColor
	}
	if !isNil(o.FillColor) {
		toSerialize["fillColor"] = o.FillColor
	}
	if !isNil(o.Thickness) {
		toSerialize["thickness"] = o.Thickness
	}
	if !isNil(o.TrackThickness) {
		toSerialize["trackThickness"] = o.TrackThickness
	}
	if !isNil(o.VerticalAlignment) {
		toSerialize["verticalAlignment"] = o.VerticalAlignment
	}
	return json.Marshal(toSerialize)
}

type NullableProgressBarBlock struct {
	value *ProgressBarBlock
	isSet bool
}

func (v NullableProgressBarBlock) Get() *ProgressBarBlock {
	return v.value
}

func (v *NullableProgressBarBlock) Set(val *ProgressBarBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableProgressBarBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableProgressBarBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgressBarBlock(val *ProgressBarBlock) *NullableProgressBarBlock {
	return &NullableProgressBarBlock{value: val, isSet: true}
}

func (v NullableProgressBarBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgressBarBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


