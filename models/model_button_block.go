/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ButtonBlock Styles for button
type ButtonBlock struct {
	Visibility *ButtonVisibility `json:"visibility,omitempty"`
	MovingAnimation *ButtonMovingAnimation `json:"movingAnimation,omitempty"`
	// If true, the input will take up the full width of its container
	FullWidth *bool `json:"fullWidth,omitempty"`
	// Background of button
	BackgroundColor *string `json:"backgroundColor,omitempty"`
	// Padding left for container
	PaddingLeft *float32 `json:"paddingLeft,omitempty"`
	// Padding right for container
	PaddingRight *float32 `json:"paddingRight,omitempty"`
	// Padding top for container
	PaddingTop *float32 `json:"paddingTop,omitempty"`
	// Padding bottom for container
	PaddingBottom *float32 `json:"paddingBottom,omitempty"`
	// Radius of border
	BorderRadius *float32 `json:"borderRadius,omitempty"`
	// Color of border
	BorderColor *string `json:"borderColor,omitempty"`
	// Width of border
	BorderWidth *float32 `json:"borderWidth,omitempty"`
	// Width of button
	Width *float32 `json:"width,omitempty"`
	// Height of button
	Height *float32 `json:"height,omitempty"`
}

// NewButtonBlock instantiates a new ButtonBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewButtonBlock() *ButtonBlock {
	this := ButtonBlock{}
	return &this
}

// NewButtonBlockWithDefaults instantiates a new ButtonBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewButtonBlockWithDefaults() *ButtonBlock {
	this := ButtonBlock{}
	return &this
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ButtonBlock) GetVisibility() ButtonVisibility {
	if o == nil || isNil(o.Visibility) {
		var ret ButtonVisibility
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetVisibilityOk() (*ButtonVisibility, bool) {
	if o == nil || isNil(o.Visibility) {
    return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ButtonBlock) HasVisibility() bool {
	if o != nil && !isNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given ButtonVisibility and assigns it to the Visibility field.
func (o *ButtonBlock) SetVisibility(v ButtonVisibility) {
	o.Visibility = &v
}

// GetMovingAnimation returns the MovingAnimation field value if set, zero value otherwise.
func (o *ButtonBlock) GetMovingAnimation() ButtonMovingAnimation {
	if o == nil || isNil(o.MovingAnimation) {
		var ret ButtonMovingAnimation
		return ret
	}
	return *o.MovingAnimation
}

// GetMovingAnimationOk returns a tuple with the MovingAnimation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetMovingAnimationOk() (*ButtonMovingAnimation, bool) {
	if o == nil || isNil(o.MovingAnimation) {
    return nil, false
	}
	return o.MovingAnimation, true
}

// HasMovingAnimation returns a boolean if a field has been set.
func (o *ButtonBlock) HasMovingAnimation() bool {
	if o != nil && !isNil(o.MovingAnimation) {
		return true
	}

	return false
}

// SetMovingAnimation gets a reference to the given ButtonMovingAnimation and assigns it to the MovingAnimation field.
func (o *ButtonBlock) SetMovingAnimation(v ButtonMovingAnimation) {
	o.MovingAnimation = &v
}

// GetFullWidth returns the FullWidth field value if set, zero value otherwise.
func (o *ButtonBlock) GetFullWidth() bool {
	if o == nil || isNil(o.FullWidth) {
		var ret bool
		return ret
	}
	return *o.FullWidth
}

// GetFullWidthOk returns a tuple with the FullWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetFullWidthOk() (*bool, bool) {
	if o == nil || isNil(o.FullWidth) {
    return nil, false
	}
	return o.FullWidth, true
}

// HasFullWidth returns a boolean if a field has been set.
func (o *ButtonBlock) HasFullWidth() bool {
	if o != nil && !isNil(o.FullWidth) {
		return true
	}

	return false
}

// SetFullWidth gets a reference to the given bool and assigns it to the FullWidth field.
func (o *ButtonBlock) SetFullWidth(v bool) {
	o.FullWidth = &v
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *ButtonBlock) GetBackgroundColor() string {
	if o == nil || isNil(o.BackgroundColor) {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetBackgroundColorOk() (*string, bool) {
	if o == nil || isNil(o.BackgroundColor) {
    return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *ButtonBlock) HasBackgroundColor() bool {
	if o != nil && !isNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *ButtonBlock) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// GetPaddingLeft returns the PaddingLeft field value if set, zero value otherwise.
func (o *ButtonBlock) GetPaddingLeft() float32 {
	if o == nil || isNil(o.PaddingLeft) {
		var ret float32
		return ret
	}
	return *o.PaddingLeft
}

// GetPaddingLeftOk returns a tuple with the PaddingLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetPaddingLeftOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingLeft) {
    return nil, false
	}
	return o.PaddingLeft, true
}

// HasPaddingLeft returns a boolean if a field has been set.
func (o *ButtonBlock) HasPaddingLeft() bool {
	if o != nil && !isNil(o.PaddingLeft) {
		return true
	}

	return false
}

// SetPaddingLeft gets a reference to the given float32 and assigns it to the PaddingLeft field.
func (o *ButtonBlock) SetPaddingLeft(v float32) {
	o.PaddingLeft = &v
}

// GetPaddingRight returns the PaddingRight field value if set, zero value otherwise.
func (o *ButtonBlock) GetPaddingRight() float32 {
	if o == nil || isNil(o.PaddingRight) {
		var ret float32
		return ret
	}
	return *o.PaddingRight
}

// GetPaddingRightOk returns a tuple with the PaddingRight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetPaddingRightOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingRight) {
    return nil, false
	}
	return o.PaddingRight, true
}

// HasPaddingRight returns a boolean if a field has been set.
func (o *ButtonBlock) HasPaddingRight() bool {
	if o != nil && !isNil(o.PaddingRight) {
		return true
	}

	return false
}

// SetPaddingRight gets a reference to the given float32 and assigns it to the PaddingRight field.
func (o *ButtonBlock) SetPaddingRight(v float32) {
	o.PaddingRight = &v
}

// GetPaddingTop returns the PaddingTop field value if set, zero value otherwise.
func (o *ButtonBlock) GetPaddingTop() float32 {
	if o == nil || isNil(o.PaddingTop) {
		var ret float32
		return ret
	}
	return *o.PaddingTop
}

// GetPaddingTopOk returns a tuple with the PaddingTop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetPaddingTopOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingTop) {
    return nil, false
	}
	return o.PaddingTop, true
}

// HasPaddingTop returns a boolean if a field has been set.
func (o *ButtonBlock) HasPaddingTop() bool {
	if o != nil && !isNil(o.PaddingTop) {
		return true
	}

	return false
}

// SetPaddingTop gets a reference to the given float32 and assigns it to the PaddingTop field.
func (o *ButtonBlock) SetPaddingTop(v float32) {
	o.PaddingTop = &v
}

// GetPaddingBottom returns the PaddingBottom field value if set, zero value otherwise.
func (o *ButtonBlock) GetPaddingBottom() float32 {
	if o == nil || isNil(o.PaddingBottom) {
		var ret float32
		return ret
	}
	return *o.PaddingBottom
}

// GetPaddingBottomOk returns a tuple with the PaddingBottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetPaddingBottomOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingBottom) {
    return nil, false
	}
	return o.PaddingBottom, true
}

// HasPaddingBottom returns a boolean if a field has been set.
func (o *ButtonBlock) HasPaddingBottom() bool {
	if o != nil && !isNil(o.PaddingBottom) {
		return true
	}

	return false
}

// SetPaddingBottom gets a reference to the given float32 and assigns it to the PaddingBottom field.
func (o *ButtonBlock) SetPaddingBottom(v float32) {
	o.PaddingBottom = &v
}

// GetBorderRadius returns the BorderRadius field value if set, zero value otherwise.
func (o *ButtonBlock) GetBorderRadius() float32 {
	if o == nil || isNil(o.BorderRadius) {
		var ret float32
		return ret
	}
	return *o.BorderRadius
}

// GetBorderRadiusOk returns a tuple with the BorderRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetBorderRadiusOk() (*float32, bool) {
	if o == nil || isNil(o.BorderRadius) {
    return nil, false
	}
	return o.BorderRadius, true
}

// HasBorderRadius returns a boolean if a field has been set.
func (o *ButtonBlock) HasBorderRadius() bool {
	if o != nil && !isNil(o.BorderRadius) {
		return true
	}

	return false
}

// SetBorderRadius gets a reference to the given float32 and assigns it to the BorderRadius field.
func (o *ButtonBlock) SetBorderRadius(v float32) {
	o.BorderRadius = &v
}

// GetBorderColor returns the BorderColor field value if set, zero value otherwise.
func (o *ButtonBlock) GetBorderColor() string {
	if o == nil || isNil(o.BorderColor) {
		var ret string
		return ret
	}
	return *o.BorderColor
}

// GetBorderColorOk returns a tuple with the BorderColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetBorderColorOk() (*string, bool) {
	if o == nil || isNil(o.BorderColor) {
    return nil, false
	}
	return o.BorderColor, true
}

// HasBorderColor returns a boolean if a field has been set.
func (o *ButtonBlock) HasBorderColor() bool {
	if o != nil && !isNil(o.BorderColor) {
		return true
	}

	return false
}

// SetBorderColor gets a reference to the given string and assigns it to the BorderColor field.
func (o *ButtonBlock) SetBorderColor(v string) {
	o.BorderColor = &v
}

// GetBorderWidth returns the BorderWidth field value if set, zero value otherwise.
func (o *ButtonBlock) GetBorderWidth() float32 {
	if o == nil || isNil(o.BorderWidth) {
		var ret float32
		return ret
	}
	return *o.BorderWidth
}

// GetBorderWidthOk returns a tuple with the BorderWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetBorderWidthOk() (*float32, bool) {
	if o == nil || isNil(o.BorderWidth) {
    return nil, false
	}
	return o.BorderWidth, true
}

// HasBorderWidth returns a boolean if a field has been set.
func (o *ButtonBlock) HasBorderWidth() bool {
	if o != nil && !isNil(o.BorderWidth) {
		return true
	}

	return false
}

// SetBorderWidth gets a reference to the given float32 and assigns it to the BorderWidth field.
func (o *ButtonBlock) SetBorderWidth(v float32) {
	o.BorderWidth = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ButtonBlock) GetWidth() float32 {
	if o == nil || isNil(o.Width) {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetWidthOk() (*float32, bool) {
	if o == nil || isNil(o.Width) {
    return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ButtonBlock) HasWidth() bool {
	if o != nil && !isNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *ButtonBlock) SetWidth(v float32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ButtonBlock) GetHeight() float32 {
	if o == nil || isNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ButtonBlock) GetHeightOk() (*float32, bool) {
	if o == nil || isNil(o.Height) {
    return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ButtonBlock) HasHeight() bool {
	if o != nil && !isNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *ButtonBlock) SetHeight(v float32) {
	o.Height = &v
}

func (o ButtonBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !isNil(o.MovingAnimation) {
		toSerialize["movingAnimation"] = o.MovingAnimation
	}
	if !isNil(o.FullWidth) {
		toSerialize["fullWidth"] = o.FullWidth
	}
	if !isNil(o.BackgroundColor) {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if !isNil(o.PaddingLeft) {
		toSerialize["paddingLeft"] = o.PaddingLeft
	}
	if !isNil(o.PaddingRight) {
		toSerialize["paddingRight"] = o.PaddingRight
	}
	if !isNil(o.PaddingTop) {
		toSerialize["paddingTop"] = o.PaddingTop
	}
	if !isNil(o.PaddingBottom) {
		toSerialize["paddingBottom"] = o.PaddingBottom
	}
	if !isNil(o.BorderRadius) {
		toSerialize["borderRadius"] = o.BorderRadius
	}
	if !isNil(o.BorderColor) {
		toSerialize["borderColor"] = o.BorderColor
	}
	if !isNil(o.BorderWidth) {
		toSerialize["borderWidth"] = o.BorderWidth
	}
	if !isNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !isNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	return json.Marshal(toSerialize)
}

type NullableButtonBlock struct {
	value *ButtonBlock
	isSet bool
}

func (v NullableButtonBlock) Get() *ButtonBlock {
	return v.value
}

func (v *NullableButtonBlock) Set(val *ButtonBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableButtonBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableButtonBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableButtonBlock(val *ButtonBlock) *NullableButtonBlock {
	return &NullableButtonBlock{value: val, isSet: true}
}

func (v NullableButtonBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableButtonBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


