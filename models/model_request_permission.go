/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// RequestPermission Request permissions object
type RequestPermission struct {
	Type ScreenPermissionType `json:"type"`
	Value bool `json:"value"`
	Action Action `json:"action"`
}

// NewRequestPermission instantiates a new RequestPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestPermission(type_ ScreenPermissionType, value bool, action Action) *RequestPermission {
	this := RequestPermission{}
	this.Type = type_
	this.Value = value
	this.Action = action
	return &this
}

// NewRequestPermissionWithDefaults instantiates a new RequestPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestPermissionWithDefaults() *RequestPermission {
	this := RequestPermission{}
	return &this
}

// GetType returns the Type field value
func (o *RequestPermission) GetType() ScreenPermissionType {
	if o == nil {
		var ret ScreenPermissionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RequestPermission) GetTypeOk() (*ScreenPermissionType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RequestPermission) SetType(v ScreenPermissionType) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *RequestPermission) GetValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *RequestPermission) GetValueOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *RequestPermission) SetValue(v bool) {
	o.Value = v
}

// GetAction returns the Action field value
func (o *RequestPermission) GetAction() Action {
	if o == nil {
		var ret Action
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *RequestPermission) GetActionOk() (*Action, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *RequestPermission) SetAction(v Action) {
	o.Action = v
}

func (o RequestPermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableRequestPermission struct {
	value *RequestPermission
	isSet bool
}

func (v NullableRequestPermission) Get() *RequestPermission {
	return v.value
}

func (v *NullableRequestPermission) Set(val *RequestPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestPermission(val *RequestPermission) *NullableRequestPermission {
	return &NullableRequestPermission{value: val, isSet: true}
}

func (v NullableRequestPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


