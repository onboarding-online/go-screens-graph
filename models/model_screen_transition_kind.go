/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ScreenTransitionKind Screen transition kind
type ScreenTransitionKind string

// List of ScreenTransitionKind
const (
	SCREENTRANSITIONKIND_DEFAULT ScreenTransitionKind = "Default"
	SCREENTRANSITIONKIND_MODAL ScreenTransitionKind = "Modal"
)

// All allowed values of ScreenTransitionKind enum
var AllowedScreenTransitionKindEnumValues = []ScreenTransitionKind{
	"Default",
	"Modal",
}

func (v *ScreenTransitionKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ScreenTransitionKind(value)
	for _, existing := range AllowedScreenTransitionKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ScreenTransitionKind", value)
}

// NewScreenTransitionKindFromValue returns a pointer to a valid ScreenTransitionKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewScreenTransitionKindFromValue(v string) (*ScreenTransitionKind, error) {
	ev := ScreenTransitionKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ScreenTransitionKind: valid values are %v", v, AllowedScreenTransitionKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ScreenTransitionKind) IsValid() bool {
	for _, existing := range AllowedScreenTransitionKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ScreenTransitionKind value
func (v ScreenTransitionKind) Ptr() *ScreenTransitionKind {
	return &v
}

type NullableScreenTransitionKind struct {
	value *ScreenTransitionKind
	isSet bool
}

func (v NullableScreenTransitionKind) Get() *ScreenTransitionKind {
	return v.value
}

func (v *NullableScreenTransitionKind) Set(val *ScreenTransitionKind) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenTransitionKind) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenTransitionKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenTransitionKind(val *ScreenTransitionKind) *NullableScreenTransitionKind {
	return &NullableScreenTransitionKind{value: val, isSet: true}
}

func (v NullableScreenTransitionKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenTransitionKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

