/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// CalendarBlock Styles for calendar
type CalendarBlock struct {
	// Background of calendar
	BackgroundColor *string `json:"backgroundColor,omitempty"`
	// Background of calendar header
	HeaderBackgroundColor *string `json:"headerBackgroundColor,omitempty"`
	HeaderLabel LabelBlock `json:"headerLabel"`
	HeaderWeekendLabel LabelBlock `json:"headerWeekendLabel"`
	TodayLabel LabelBlock `json:"todayLabel"`
	MonthLabel LabelBlock `json:"monthLabel"`
	CurrentMonthLabel LabelBlock `json:"currentMonthLabel"`
}

// NewCalendarBlock instantiates a new CalendarBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCalendarBlock(headerLabel LabelBlock, headerWeekendLabel LabelBlock, todayLabel LabelBlock, monthLabel LabelBlock, currentMonthLabel LabelBlock) *CalendarBlock {
	this := CalendarBlock{}
	this.HeaderLabel = headerLabel
	this.HeaderWeekendLabel = headerWeekendLabel
	this.TodayLabel = todayLabel
	this.MonthLabel = monthLabel
	this.CurrentMonthLabel = currentMonthLabel
	return &this
}

// NewCalendarBlockWithDefaults instantiates a new CalendarBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCalendarBlockWithDefaults() *CalendarBlock {
	this := CalendarBlock{}
	return &this
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *CalendarBlock) GetBackgroundColor() string {
	if o == nil || isNil(o.BackgroundColor) {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarBlock) GetBackgroundColorOk() (*string, bool) {
	if o == nil || isNil(o.BackgroundColor) {
    return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *CalendarBlock) HasBackgroundColor() bool {
	if o != nil && !isNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *CalendarBlock) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// GetHeaderBackgroundColor returns the HeaderBackgroundColor field value if set, zero value otherwise.
func (o *CalendarBlock) GetHeaderBackgroundColor() string {
	if o == nil || isNil(o.HeaderBackgroundColor) {
		var ret string
		return ret
	}
	return *o.HeaderBackgroundColor
}

// GetHeaderBackgroundColorOk returns a tuple with the HeaderBackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalendarBlock) GetHeaderBackgroundColorOk() (*string, bool) {
	if o == nil || isNil(o.HeaderBackgroundColor) {
    return nil, false
	}
	return o.HeaderBackgroundColor, true
}

// HasHeaderBackgroundColor returns a boolean if a field has been set.
func (o *CalendarBlock) HasHeaderBackgroundColor() bool {
	if o != nil && !isNil(o.HeaderBackgroundColor) {
		return true
	}

	return false
}

// SetHeaderBackgroundColor gets a reference to the given string and assigns it to the HeaderBackgroundColor field.
func (o *CalendarBlock) SetHeaderBackgroundColor(v string) {
	o.HeaderBackgroundColor = &v
}

// GetHeaderLabel returns the HeaderLabel field value
func (o *CalendarBlock) GetHeaderLabel() LabelBlock {
	if o == nil {
		var ret LabelBlock
		return ret
	}

	return o.HeaderLabel
}

// GetHeaderLabelOk returns a tuple with the HeaderLabel field value
// and a boolean to check if the value has been set.
func (o *CalendarBlock) GetHeaderLabelOk() (*LabelBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HeaderLabel, true
}

// SetHeaderLabel sets field value
func (o *CalendarBlock) SetHeaderLabel(v LabelBlock) {
	o.HeaderLabel = v
}

// GetHeaderWeekendLabel returns the HeaderWeekendLabel field value
func (o *CalendarBlock) GetHeaderWeekendLabel() LabelBlock {
	if o == nil {
		var ret LabelBlock
		return ret
	}

	return o.HeaderWeekendLabel
}

// GetHeaderWeekendLabelOk returns a tuple with the HeaderWeekendLabel field value
// and a boolean to check if the value has been set.
func (o *CalendarBlock) GetHeaderWeekendLabelOk() (*LabelBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HeaderWeekendLabel, true
}

// SetHeaderWeekendLabel sets field value
func (o *CalendarBlock) SetHeaderWeekendLabel(v LabelBlock) {
	o.HeaderWeekendLabel = v
}

// GetTodayLabel returns the TodayLabel field value
func (o *CalendarBlock) GetTodayLabel() LabelBlock {
	if o == nil {
		var ret LabelBlock
		return ret
	}

	return o.TodayLabel
}

// GetTodayLabelOk returns a tuple with the TodayLabel field value
// and a boolean to check if the value has been set.
func (o *CalendarBlock) GetTodayLabelOk() (*LabelBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TodayLabel, true
}

// SetTodayLabel sets field value
func (o *CalendarBlock) SetTodayLabel(v LabelBlock) {
	o.TodayLabel = v
}

// GetMonthLabel returns the MonthLabel field value
func (o *CalendarBlock) GetMonthLabel() LabelBlock {
	if o == nil {
		var ret LabelBlock
		return ret
	}

	return o.MonthLabel
}

// GetMonthLabelOk returns a tuple with the MonthLabel field value
// and a boolean to check if the value has been set.
func (o *CalendarBlock) GetMonthLabelOk() (*LabelBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MonthLabel, true
}

// SetMonthLabel sets field value
func (o *CalendarBlock) SetMonthLabel(v LabelBlock) {
	o.MonthLabel = v
}

// GetCurrentMonthLabel returns the CurrentMonthLabel field value
func (o *CalendarBlock) GetCurrentMonthLabel() LabelBlock {
	if o == nil {
		var ret LabelBlock
		return ret
	}

	return o.CurrentMonthLabel
}

// GetCurrentMonthLabelOk returns a tuple with the CurrentMonthLabel field value
// and a boolean to check if the value has been set.
func (o *CalendarBlock) GetCurrentMonthLabelOk() (*LabelBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CurrentMonthLabel, true
}

// SetCurrentMonthLabel sets field value
func (o *CalendarBlock) SetCurrentMonthLabel(v LabelBlock) {
	o.CurrentMonthLabel = v
}

func (o CalendarBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BackgroundColor) {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if !isNil(o.HeaderBackgroundColor) {
		toSerialize["headerBackgroundColor"] = o.HeaderBackgroundColor
	}
	if true {
		toSerialize["headerLabel"] = o.HeaderLabel
	}
	if true {
		toSerialize["headerWeekendLabel"] = o.HeaderWeekendLabel
	}
	if true {
		toSerialize["todayLabel"] = o.TodayLabel
	}
	if true {
		toSerialize["monthLabel"] = o.MonthLabel
	}
	if true {
		toSerialize["currentMonthLabel"] = o.CurrentMonthLabel
	}
	return json.Marshal(toSerialize)
}

type NullableCalendarBlock struct {
	value *CalendarBlock
	isSet bool
}

func (v NullableCalendarBlock) Get() *CalendarBlock {
	return v.value
}

func (v *NullableCalendarBlock) Set(val *CalendarBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableCalendarBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableCalendarBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCalendarBlock(val *CalendarBlock) *NullableCalendarBlock {
	return &NullableCalendarBlock{value: val, isSet: true}
}

func (v NullableCalendarBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCalendarBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


