/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// FieldBlock Styles for field
type FieldBlock struct {
	// Background color for field
	BackgroundColor *string `json:"backgroundColor,omitempty"`
	// Border color for field
	BorderColor *string `json:"borderColor,omitempty"`
	// Entered text color for field
	EnteredTextColor *string `json:"enteredTextColor,omitempty"`
}

// NewFieldBlock instantiates a new FieldBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFieldBlock() *FieldBlock {
	this := FieldBlock{}
	return &this
}

// NewFieldBlockWithDefaults instantiates a new FieldBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFieldBlockWithDefaults() *FieldBlock {
	this := FieldBlock{}
	return &this
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *FieldBlock) GetBackgroundColor() string {
	if o == nil || isNil(o.BackgroundColor) {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldBlock) GetBackgroundColorOk() (*string, bool) {
	if o == nil || isNil(o.BackgroundColor) {
    return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *FieldBlock) HasBackgroundColor() bool {
	if o != nil && !isNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *FieldBlock) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// GetBorderColor returns the BorderColor field value if set, zero value otherwise.
func (o *FieldBlock) GetBorderColor() string {
	if o == nil || isNil(o.BorderColor) {
		var ret string
		return ret
	}
	return *o.BorderColor
}

// GetBorderColorOk returns a tuple with the BorderColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldBlock) GetBorderColorOk() (*string, bool) {
	if o == nil || isNil(o.BorderColor) {
    return nil, false
	}
	return o.BorderColor, true
}

// HasBorderColor returns a boolean if a field has been set.
func (o *FieldBlock) HasBorderColor() bool {
	if o != nil && !isNil(o.BorderColor) {
		return true
	}

	return false
}

// SetBorderColor gets a reference to the given string and assigns it to the BorderColor field.
func (o *FieldBlock) SetBorderColor(v string) {
	o.BorderColor = &v
}

// GetEnteredTextColor returns the EnteredTextColor field value if set, zero value otherwise.
func (o *FieldBlock) GetEnteredTextColor() string {
	if o == nil || isNil(o.EnteredTextColor) {
		var ret string
		return ret
	}
	return *o.EnteredTextColor
}

// GetEnteredTextColorOk returns a tuple with the EnteredTextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldBlock) GetEnteredTextColorOk() (*string, bool) {
	if o == nil || isNil(o.EnteredTextColor) {
    return nil, false
	}
	return o.EnteredTextColor, true
}

// HasEnteredTextColor returns a boolean if a field has been set.
func (o *FieldBlock) HasEnteredTextColor() bool {
	if o != nil && !isNil(o.EnteredTextColor) {
		return true
	}

	return false
}

// SetEnteredTextColor gets a reference to the given string and assigns it to the EnteredTextColor field.
func (o *FieldBlock) SetEnteredTextColor(v string) {
	o.EnteredTextColor = &v
}

func (o FieldBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BackgroundColor) {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if !isNil(o.BorderColor) {
		toSerialize["borderColor"] = o.BorderColor
	}
	if !isNil(o.EnteredTextColor) {
		toSerialize["enteredTextColor"] = o.EnteredTextColor
	}
	return json.Marshal(toSerialize)
}

type NullableFieldBlock struct {
	value *FieldBlock
	isSet bool
}

func (v NullableFieldBlock) Get() *FieldBlock {
	return v.value
}

func (v *NullableFieldBlock) Set(val *FieldBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldBlock(val *FieldBlock) *NullableFieldBlock {
	return &NullableFieldBlock{value: val, isSet: true}
}

func (v NullableFieldBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


