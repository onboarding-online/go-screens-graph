/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ProgressBarItemBlock Styles for progress bar item
type ProgressBarItemBlock struct {
	// Color for progress bar
	Color *string `json:"color,omitempty"`
	// Track color
	TrackColor *string `json:"trackColor,omitempty"`
	// Fill color
	FillColor *string `json:"fillColor,omitempty"`
}

// NewProgressBarItemBlock instantiates a new ProgressBarItemBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgressBarItemBlock() *ProgressBarItemBlock {
	this := ProgressBarItemBlock{}
	return &this
}

// NewProgressBarItemBlockWithDefaults instantiates a new ProgressBarItemBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgressBarItemBlockWithDefaults() *ProgressBarItemBlock {
	this := ProgressBarItemBlock{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ProgressBarItemBlock) GetColor() string {
	if o == nil || isNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarItemBlock) GetColorOk() (*string, bool) {
	if o == nil || isNil(o.Color) {
    return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ProgressBarItemBlock) HasColor() bool {
	if o != nil && !isNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ProgressBarItemBlock) SetColor(v string) {
	o.Color = &v
}

// GetTrackColor returns the TrackColor field value if set, zero value otherwise.
func (o *ProgressBarItemBlock) GetTrackColor() string {
	if o == nil || isNil(o.TrackColor) {
		var ret string
		return ret
	}
	return *o.TrackColor
}

// GetTrackColorOk returns a tuple with the TrackColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarItemBlock) GetTrackColorOk() (*string, bool) {
	if o == nil || isNil(o.TrackColor) {
    return nil, false
	}
	return o.TrackColor, true
}

// HasTrackColor returns a boolean if a field has been set.
func (o *ProgressBarItemBlock) HasTrackColor() bool {
	if o != nil && !isNil(o.TrackColor) {
		return true
	}

	return false
}

// SetTrackColor gets a reference to the given string and assigns it to the TrackColor field.
func (o *ProgressBarItemBlock) SetTrackColor(v string) {
	o.TrackColor = &v
}

// GetFillColor returns the FillColor field value if set, zero value otherwise.
func (o *ProgressBarItemBlock) GetFillColor() string {
	if o == nil || isNil(o.FillColor) {
		var ret string
		return ret
	}
	return *o.FillColor
}

// GetFillColorOk returns a tuple with the FillColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressBarItemBlock) GetFillColorOk() (*string, bool) {
	if o == nil || isNil(o.FillColor) {
    return nil, false
	}
	return o.FillColor, true
}

// HasFillColor returns a boolean if a field has been set.
func (o *ProgressBarItemBlock) HasFillColor() bool {
	if o != nil && !isNil(o.FillColor) {
		return true
	}

	return false
}

// SetFillColor gets a reference to the given string and assigns it to the FillColor field.
func (o *ProgressBarItemBlock) SetFillColor(v string) {
	o.FillColor = &v
}

func (o ProgressBarItemBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !isNil(o.TrackColor) {
		toSerialize["trackColor"] = o.TrackColor
	}
	if !isNil(o.FillColor) {
		toSerialize["fillColor"] = o.FillColor
	}
	return json.Marshal(toSerialize)
}

type NullableProgressBarItemBlock struct {
	value *ProgressBarItemBlock
	isSet bool
}

func (v NullableProgressBarItemBlock) Get() *ProgressBarItemBlock {
	return v.value
}

func (v *NullableProgressBarItemBlock) Set(val *ProgressBarItemBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableProgressBarItemBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableProgressBarItemBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgressBarItemBlock(val *ProgressBarItemBlock) *NullableProgressBarItemBlock {
	return &NullableProgressBarItemBlock{value: val, isSet: true}
}

func (v NullableProgressBarItemBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgressBarItemBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


