/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// Calendar Calendar
type Calendar struct {
	Box Box `json:"box"`
	Days CalendarDays `json:"days"`
	Styles CalendarBlock `json:"styles"`
	Values []string `json:"values"`
}

// NewCalendar instantiates a new Calendar object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCalendar(box Box, days CalendarDays, styles CalendarBlock, values []string) *Calendar {
	this := Calendar{}
	this.Box = box
	this.Days = days
	this.Styles = styles
	this.Values = values
	return &this
}

// NewCalendarWithDefaults instantiates a new Calendar object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCalendarWithDefaults() *Calendar {
	this := Calendar{}
	return &this
}

// GetBox returns the Box field value
func (o *Calendar) GetBox() Box {
	if o == nil {
		var ret Box
		return ret
	}

	return o.Box
}

// GetBoxOk returns a tuple with the Box field value
// and a boolean to check if the value has been set.
func (o *Calendar) GetBoxOk() (*Box, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Box, true
}

// SetBox sets field value
func (o *Calendar) SetBox(v Box) {
	o.Box = v
}

// GetDays returns the Days field value
func (o *Calendar) GetDays() CalendarDays {
	if o == nil {
		var ret CalendarDays
		return ret
	}

	return o.Days
}

// GetDaysOk returns a tuple with the Days field value
// and a boolean to check if the value has been set.
func (o *Calendar) GetDaysOk() (*CalendarDays, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Days, true
}

// SetDays sets field value
func (o *Calendar) SetDays(v CalendarDays) {
	o.Days = v
}

// GetStyles returns the Styles field value
func (o *Calendar) GetStyles() CalendarBlock {
	if o == nil {
		var ret CalendarBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *Calendar) GetStylesOk() (*CalendarBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *Calendar) SetStyles(v CalendarBlock) {
	o.Styles = v
}

// GetValues returns the Values field value
func (o *Calendar) GetValues() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *Calendar) GetValuesOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *Calendar) SetValues(v []string) {
	o.Values = v
}

func (o Calendar) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["box"] = o.Box
	}
	if true {
		toSerialize["days"] = o.Days
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableCalendar struct {
	value *Calendar
	isSet bool
}

func (v NullableCalendar) Get() *Calendar {
	return v.value
}

func (v *NullableCalendar) Set(val *Calendar) {
	v.value = val
	v.isSet = true
}

func (v NullableCalendar) IsSet() bool {
	return v.isSet
}

func (v *NullableCalendar) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCalendar(val *Calendar) *NullableCalendar {
	return &NullableCalendar{value: val, isSet: true}
}

func (v NullableCalendar) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCalendar) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


