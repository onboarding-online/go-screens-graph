/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PaywallNavigationBar Paywall navigation bar
type PaywallNavigationBar struct {
	PaywallNavigationBar string `json:"paywallNavigationBar"`
	Close *Button `json:"close,omitempty"`
	Restore *Text `json:"restore,omitempty"`
	Styles PaywallNavigationBarBlock `json:"styles"`
	Back *Button `json:"back,omitempty"`
	Skip *Button `json:"skip,omitempty"`
	PageIndicator *PageIndicator `json:"pageIndicator,omitempty"`
	PageIndicatorKind *PageIndicatorKind `json:"pageIndicatorKind,omitempty"`
	DashesPageIndicator *DashesPageIndicator `json:"dashesPageIndicator,omitempty"`
}

// NewPaywallNavigationBar instantiates a new PaywallNavigationBar object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaywallNavigationBar(paywallNavigationBar string, styles PaywallNavigationBarBlock) *PaywallNavigationBar {
	this := PaywallNavigationBar{}
	return &this
}

// NewPaywallNavigationBarWithDefaults instantiates a new PaywallNavigationBar object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaywallNavigationBarWithDefaults() *PaywallNavigationBar {
	this := PaywallNavigationBar{}
	return &this
}

// GetPaywallNavigationBar returns the PaywallNavigationBar field value
func (o *PaywallNavigationBar) GetPaywallNavigationBar() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaywallNavigationBar
}

// GetPaywallNavigationBarOk returns a tuple with the PaywallNavigationBar field value
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetPaywallNavigationBarOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PaywallNavigationBar, true
}

// SetPaywallNavigationBar sets field value
func (o *PaywallNavigationBar) SetPaywallNavigationBar(v string) {
	o.PaywallNavigationBar = v
}

// GetClose returns the Close field value if set, zero value otherwise.
func (o *PaywallNavigationBar) GetClose() Button {
	if o == nil || isNil(o.Close) {
		var ret Button
		return ret
	}
	return *o.Close
}

// GetCloseOk returns a tuple with the Close field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetCloseOk() (*Button, bool) {
	if o == nil || isNil(o.Close) {
    return nil, false
	}
	return o.Close, true
}

// HasClose returns a boolean if a field has been set.
func (o *PaywallNavigationBar) HasClose() bool {
	if o != nil && !isNil(o.Close) {
		return true
	}

	return false
}

// SetClose gets a reference to the given Button and assigns it to the Close field.
func (o *PaywallNavigationBar) SetClose(v Button) {
	o.Close = &v
}

// GetRestore returns the Restore field value if set, zero value otherwise.
func (o *PaywallNavigationBar) GetRestore() Text {
	if o == nil || isNil(o.Restore) {
		var ret Text
		return ret
	}
	return *o.Restore
}

// GetRestoreOk returns a tuple with the Restore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetRestoreOk() (*Text, bool) {
	if o == nil || isNil(o.Restore) {
    return nil, false
	}
	return o.Restore, true
}

// HasRestore returns a boolean if a field has been set.
func (o *PaywallNavigationBar) HasRestore() bool {
	if o != nil && !isNil(o.Restore) {
		return true
	}

	return false
}

// SetRestore gets a reference to the given Text and assigns it to the Restore field.
func (o *PaywallNavigationBar) SetRestore(v Text) {
	o.Restore = &v
}

// GetStyles returns the Styles field value
func (o *PaywallNavigationBar) GetStyles() PaywallNavigationBarBlock {
	if o == nil {
		var ret PaywallNavigationBarBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetStylesOk() (*PaywallNavigationBarBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *PaywallNavigationBar) SetStyles(v PaywallNavigationBarBlock) {
	o.Styles = v
}

// GetBack returns the Back field value if set, zero value otherwise.
func (o *PaywallNavigationBar) GetBack() Button {
	if o == nil || isNil(o.Back) {
		var ret Button
		return ret
	}
	return *o.Back
}

// GetBackOk returns a tuple with the Back field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetBackOk() (*Button, bool) {
	if o == nil || isNil(o.Back) {
    return nil, false
	}
	return o.Back, true
}

// HasBack returns a boolean if a field has been set.
func (o *PaywallNavigationBar) HasBack() bool {
	if o != nil && !isNil(o.Back) {
		return true
	}

	return false
}

// SetBack gets a reference to the given Button and assigns it to the Back field.
func (o *PaywallNavigationBar) SetBack(v Button) {
	o.Back = &v
}

// GetSkip returns the Skip field value if set, zero value otherwise.
func (o *PaywallNavigationBar) GetSkip() Button {
	if o == nil || isNil(o.Skip) {
		var ret Button
		return ret
	}
	return *o.Skip
}

// GetSkipOk returns a tuple with the Skip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetSkipOk() (*Button, bool) {
	if o == nil || isNil(o.Skip) {
    return nil, false
	}
	return o.Skip, true
}

// HasSkip returns a boolean if a field has been set.
func (o *PaywallNavigationBar) HasSkip() bool {
	if o != nil && !isNil(o.Skip) {
		return true
	}

	return false
}

// SetSkip gets a reference to the given Button and assigns it to the Skip field.
func (o *PaywallNavigationBar) SetSkip(v Button) {
	o.Skip = &v
}

// GetPageIndicator returns the PageIndicator field value if set, zero value otherwise.
func (o *PaywallNavigationBar) GetPageIndicator() PageIndicator {
	if o == nil || isNil(o.PageIndicator) {
		var ret PageIndicator
		return ret
	}
	return *o.PageIndicator
}

// GetPageIndicatorOk returns a tuple with the PageIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetPageIndicatorOk() (*PageIndicator, bool) {
	if o == nil || isNil(o.PageIndicator) {
    return nil, false
	}
	return o.PageIndicator, true
}

// HasPageIndicator returns a boolean if a field has been set.
func (o *PaywallNavigationBar) HasPageIndicator() bool {
	if o != nil && !isNil(o.PageIndicator) {
		return true
	}

	return false
}

// SetPageIndicator gets a reference to the given PageIndicator and assigns it to the PageIndicator field.
func (o *PaywallNavigationBar) SetPageIndicator(v PageIndicator) {
	o.PageIndicator = &v
}

// GetPageIndicatorKind returns the PageIndicatorKind field value if set, zero value otherwise.
func (o *PaywallNavigationBar) GetPageIndicatorKind() PageIndicatorKind {
	if o == nil || isNil(o.PageIndicatorKind) {
		var ret PageIndicatorKind
		return ret
	}
	return *o.PageIndicatorKind
}

// GetPageIndicatorKindOk returns a tuple with the PageIndicatorKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetPageIndicatorKindOk() (*PageIndicatorKind, bool) {
	if o == nil || isNil(o.PageIndicatorKind) {
    return nil, false
	}
	return o.PageIndicatorKind, true
}

// HasPageIndicatorKind returns a boolean if a field has been set.
func (o *PaywallNavigationBar) HasPageIndicatorKind() bool {
	if o != nil && !isNil(o.PageIndicatorKind) {
		return true
	}

	return false
}

// SetPageIndicatorKind gets a reference to the given PageIndicatorKind and assigns it to the PageIndicatorKind field.
func (o *PaywallNavigationBar) SetPageIndicatorKind(v PageIndicatorKind) {
	o.PageIndicatorKind = &v
}

// GetDashesPageIndicator returns the DashesPageIndicator field value if set, zero value otherwise.
func (o *PaywallNavigationBar) GetDashesPageIndicator() DashesPageIndicator {
	if o == nil || isNil(o.DashesPageIndicator) {
		var ret DashesPageIndicator
		return ret
	}
	return *o.DashesPageIndicator
}

// GetDashesPageIndicatorOk returns a tuple with the DashesPageIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaywallNavigationBar) GetDashesPageIndicatorOk() (*DashesPageIndicator, bool) {
	if o == nil || isNil(o.DashesPageIndicator) {
    return nil, false
	}
	return o.DashesPageIndicator, true
}

// HasDashesPageIndicator returns a boolean if a field has been set.
func (o *PaywallNavigationBar) HasDashesPageIndicator() bool {
	if o != nil && !isNil(o.DashesPageIndicator) {
		return true
	}

	return false
}

// SetDashesPageIndicator gets a reference to the given DashesPageIndicator and assigns it to the DashesPageIndicator field.
func (o *PaywallNavigationBar) SetDashesPageIndicator(v DashesPageIndicator) {
	o.DashesPageIndicator = &v
}

func (o PaywallNavigationBar) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["paywallNavigationBar"] = o.PaywallNavigationBar
	}
	if !isNil(o.Close) {
		toSerialize["close"] = o.Close
	}
	if !isNil(o.Restore) {
		toSerialize["restore"] = o.Restore
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	if !isNil(o.Back) {
		toSerialize["back"] = o.Back
	}
	if !isNil(o.Skip) {
		toSerialize["skip"] = o.Skip
	}
	if !isNil(o.PageIndicator) {
		toSerialize["pageIndicator"] = o.PageIndicator
	}
	if !isNil(o.PageIndicatorKind) {
		toSerialize["pageIndicatorKind"] = o.PageIndicatorKind
	}
	if !isNil(o.DashesPageIndicator) {
		toSerialize["dashesPageIndicator"] = o.DashesPageIndicator
	}
	return json.Marshal(toSerialize)
}

type NullablePaywallNavigationBar struct {
	value *PaywallNavigationBar
	isSet bool
}

func (v NullablePaywallNavigationBar) Get() *PaywallNavigationBar {
	return v.value
}

func (v *NullablePaywallNavigationBar) Set(val *PaywallNavigationBar) {
	v.value = val
	v.isSet = true
}

func (v NullablePaywallNavigationBar) IsSet() bool {
	return v.isSet
}

func (v *NullablePaywallNavigationBar) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaywallNavigationBar(val *PaywallNavigationBar) *NullablePaywallNavigationBar {
	return &NullablePaywallNavigationBar{value: val, isSet: true}
}

func (v NullablePaywallNavigationBar) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaywallNavigationBar) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


