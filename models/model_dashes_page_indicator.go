/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// DashesPageIndicator Dashes page indicator
type DashesPageIndicator struct {
	NumberOfDashes float32 `json:"numberOfDashes"`
	Image *Image `json:"image,omitempty"`
	Title *Text `json:"title,omitempty"`
	NumOption1 *float32 `json:"numOption1,omitempty"`
	NumOption2 *float32 `json:"numOption2,omitempty"`
	StrOption1 *string `json:"strOption1,omitempty"`
	StrOption2 *string `json:"strOption2,omitempty"`
	Styles DashesPageIndicatorBlock `json:"styles"`
}

// NewDashesPageIndicator instantiates a new DashesPageIndicator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashesPageIndicator(numberOfDashes float32, styles DashesPageIndicatorBlock) *DashesPageIndicator {
	this := DashesPageIndicator{}
	this.NumberOfDashes = numberOfDashes
	this.Styles = styles
	return &this
}

// NewDashesPageIndicatorWithDefaults instantiates a new DashesPageIndicator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashesPageIndicatorWithDefaults() *DashesPageIndicator {
	this := DashesPageIndicator{}
	return &this
}

// GetNumberOfDashes returns the NumberOfDashes field value
func (o *DashesPageIndicator) GetNumberOfDashes() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NumberOfDashes
}

// GetNumberOfDashesOk returns a tuple with the NumberOfDashes field value
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetNumberOfDashesOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumberOfDashes, true
}

// SetNumberOfDashes sets field value
func (o *DashesPageIndicator) SetNumberOfDashes(v float32) {
	o.NumberOfDashes = v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *DashesPageIndicator) GetImage() Image {
	if o == nil || isNil(o.Image) {
		var ret Image
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetImageOk() (*Image, bool) {
	if o == nil || isNil(o.Image) {
    return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *DashesPageIndicator) HasImage() bool {
	if o != nil && !isNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given Image and assigns it to the Image field.
func (o *DashesPageIndicator) SetImage(v Image) {
	o.Image = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DashesPageIndicator) GetTitle() Text {
	if o == nil || isNil(o.Title) {
		var ret Text
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetTitleOk() (*Text, bool) {
	if o == nil || isNil(o.Title) {
    return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DashesPageIndicator) HasTitle() bool {
	if o != nil && !isNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given Text and assigns it to the Title field.
func (o *DashesPageIndicator) SetTitle(v Text) {
	o.Title = &v
}

// GetNumOption1 returns the NumOption1 field value if set, zero value otherwise.
func (o *DashesPageIndicator) GetNumOption1() float32 {
	if o == nil || isNil(o.NumOption1) {
		var ret float32
		return ret
	}
	return *o.NumOption1
}

// GetNumOption1Ok returns a tuple with the NumOption1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetNumOption1Ok() (*float32, bool) {
	if o == nil || isNil(o.NumOption1) {
    return nil, false
	}
	return o.NumOption1, true
}

// HasNumOption1 returns a boolean if a field has been set.
func (o *DashesPageIndicator) HasNumOption1() bool {
	if o != nil && !isNil(o.NumOption1) {
		return true
	}

	return false
}

// SetNumOption1 gets a reference to the given float32 and assigns it to the NumOption1 field.
func (o *DashesPageIndicator) SetNumOption1(v float32) {
	o.NumOption1 = &v
}

// GetNumOption2 returns the NumOption2 field value if set, zero value otherwise.
func (o *DashesPageIndicator) GetNumOption2() float32 {
	if o == nil || isNil(o.NumOption2) {
		var ret float32
		return ret
	}
	return *o.NumOption2
}

// GetNumOption2Ok returns a tuple with the NumOption2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetNumOption2Ok() (*float32, bool) {
	if o == nil || isNil(o.NumOption2) {
    return nil, false
	}
	return o.NumOption2, true
}

// HasNumOption2 returns a boolean if a field has been set.
func (o *DashesPageIndicator) HasNumOption2() bool {
	if o != nil && !isNil(o.NumOption2) {
		return true
	}

	return false
}

// SetNumOption2 gets a reference to the given float32 and assigns it to the NumOption2 field.
func (o *DashesPageIndicator) SetNumOption2(v float32) {
	o.NumOption2 = &v
}

// GetStrOption1 returns the StrOption1 field value if set, zero value otherwise.
func (o *DashesPageIndicator) GetStrOption1() string {
	if o == nil || isNil(o.StrOption1) {
		var ret string
		return ret
	}
	return *o.StrOption1
}

// GetStrOption1Ok returns a tuple with the StrOption1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetStrOption1Ok() (*string, bool) {
	if o == nil || isNil(o.StrOption1) {
    return nil, false
	}
	return o.StrOption1, true
}

// HasStrOption1 returns a boolean if a field has been set.
func (o *DashesPageIndicator) HasStrOption1() bool {
	if o != nil && !isNil(o.StrOption1) {
		return true
	}

	return false
}

// SetStrOption1 gets a reference to the given string and assigns it to the StrOption1 field.
func (o *DashesPageIndicator) SetStrOption1(v string) {
	o.StrOption1 = &v
}

// GetStrOption2 returns the StrOption2 field value if set, zero value otherwise.
func (o *DashesPageIndicator) GetStrOption2() string {
	if o == nil || isNil(o.StrOption2) {
		var ret string
		return ret
	}
	return *o.StrOption2
}

// GetStrOption2Ok returns a tuple with the StrOption2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetStrOption2Ok() (*string, bool) {
	if o == nil || isNil(o.StrOption2) {
    return nil, false
	}
	return o.StrOption2, true
}

// HasStrOption2 returns a boolean if a field has been set.
func (o *DashesPageIndicator) HasStrOption2() bool {
	if o != nil && !isNil(o.StrOption2) {
		return true
	}

	return false
}

// SetStrOption2 gets a reference to the given string and assigns it to the StrOption2 field.
func (o *DashesPageIndicator) SetStrOption2(v string) {
	o.StrOption2 = &v
}

// GetStyles returns the Styles field value
func (o *DashesPageIndicator) GetStyles() DashesPageIndicatorBlock {
	if o == nil {
		var ret DashesPageIndicatorBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *DashesPageIndicator) GetStylesOk() (*DashesPageIndicatorBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *DashesPageIndicator) SetStyles(v DashesPageIndicatorBlock) {
	o.Styles = v
}

func (o DashesPageIndicator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["numberOfDashes"] = o.NumberOfDashes
	}
	if !isNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.NumOption1) {
		toSerialize["numOption1"] = o.NumOption1
	}
	if !isNil(o.NumOption2) {
		toSerialize["numOption2"] = o.NumOption2
	}
	if !isNil(o.StrOption1) {
		toSerialize["strOption1"] = o.StrOption1
	}
	if !isNil(o.StrOption2) {
		toSerialize["strOption2"] = o.StrOption2
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	return json.Marshal(toSerialize)
}

type NullableDashesPageIndicator struct {
	value *DashesPageIndicator
	isSet bool
}

func (v NullableDashesPageIndicator) Get() *DashesPageIndicator {
	return v.value
}

func (v *NullableDashesPageIndicator) Set(val *DashesPageIndicator) {
	v.value = val
	v.isSet = true
}

func (v NullableDashesPageIndicator) IsSet() bool {
	return v.isSet
}

func (v *NullableDashesPageIndicator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashesPageIndicator(val *DashesPageIndicator) *NullableDashesPageIndicator {
	return &NullableDashesPageIndicator{value: val, isSet: true}
}

func (v NullableDashesPageIndicator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashesPageIndicator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


