/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// MediaImage Media image content
type MediaImage struct {
	Image BaseMediaImage `json:"image"`
}

// NewMediaImage instantiates a new MediaImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaImage(image BaseMediaImage) *MediaImage {
	this := MediaImage{}
	this.Image = image
	return &this
}

// NewMediaImageWithDefaults instantiates a new MediaImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaImageWithDefaults() *MediaImage {
	this := MediaImage{}
	return &this
}

// GetImage returns the Image field value
func (o *MediaImage) GetImage() BaseMediaImage {
	if o == nil {
		var ret BaseMediaImage
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *MediaImage) GetImageOk() (*BaseMediaImage, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *MediaImage) SetImage(v BaseMediaImage) {
	o.Image = v
}

func (o MediaImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["image"] = o.Image
	}
	return json.Marshal(toSerialize)
}

type NullableMediaImage struct {
	value *MediaImage
	isSet bool
}

func (v NullableMediaImage) Get() *MediaImage {
	return v.value
}

func (v *NullableMediaImage) Set(val *MediaImage) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaImage) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaImage(val *MediaImage) *NullableMediaImage {
	return &NullableMediaImage{value: val, isSet: true}
}

func (v NullableMediaImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


