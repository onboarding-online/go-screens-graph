/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenTooltipPermissions struct for ScreenTooltipPermissions
type ScreenTooltipPermissions struct {
	NavigationBar NavigationBar `json:"navigationBar"`
	Footer Footer `json:"footer"`
	Styles BasicScreenBlock `json:"styles"`
	Permission NullableRequestPermission `json:"permission"`
	Timer NullableScreenTimer `json:"timer"`
	AnimationEnabled bool `json:"animationEnabled"`
	UseLocalAssetsIfAvailable bool `json:"useLocalAssetsIfAvailable"`
	TooltipPermissionsDescription string `json:"tooltipPermissionsDescription"`
	Tooltip Tooltip `json:"tooltip"`
}

// NewScreenTooltipPermissions instantiates a new ScreenTooltipPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenTooltipPermissions(navigationBar NavigationBar, footer Footer, styles BasicScreenBlock, permission NullableRequestPermission, timer NullableScreenTimer, animationEnabled bool, useLocalAssetsIfAvailable bool, tooltipPermissionsDescription string, tooltip Tooltip) *ScreenTooltipPermissions {
	this := ScreenTooltipPermissions{}
	this.NavigationBar = navigationBar
	this.Footer = footer
	this.Styles = styles
	this.Permission = permission
	this.Timer = timer
	this.AnimationEnabled = animationEnabled
	this.UseLocalAssetsIfAvailable = useLocalAssetsIfAvailable
	this.TooltipPermissionsDescription = tooltipPermissionsDescription
	this.Tooltip = tooltip
	return &this
}

// NewScreenTooltipPermissionsWithDefaults instantiates a new ScreenTooltipPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenTooltipPermissionsWithDefaults() *ScreenTooltipPermissions {
	this := ScreenTooltipPermissions{}
	return &this
}

// GetNavigationBar returns the NavigationBar field value
func (o *ScreenTooltipPermissions) GetNavigationBar() NavigationBar {
	if o == nil {
		var ret NavigationBar
		return ret
	}

	return o.NavigationBar
}

// GetNavigationBarOk returns a tuple with the NavigationBar field value
// and a boolean to check if the value has been set.
func (o *ScreenTooltipPermissions) GetNavigationBarOk() (*NavigationBar, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NavigationBar, true
}

// SetNavigationBar sets field value
func (o *ScreenTooltipPermissions) SetNavigationBar(v NavigationBar) {
	o.NavigationBar = v
}

// GetFooter returns the Footer field value
func (o *ScreenTooltipPermissions) GetFooter() Footer {
	if o == nil {
		var ret Footer
		return ret
	}

	return o.Footer
}

// GetFooterOk returns a tuple with the Footer field value
// and a boolean to check if the value has been set.
func (o *ScreenTooltipPermissions) GetFooterOk() (*Footer, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Footer, true
}

// SetFooter sets field value
func (o *ScreenTooltipPermissions) SetFooter(v Footer) {
	o.Footer = v
}

// GetStyles returns the Styles field value
func (o *ScreenTooltipPermissions) GetStyles() BasicScreenBlock {
	if o == nil {
		var ret BasicScreenBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *ScreenTooltipPermissions) GetStylesOk() (*BasicScreenBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *ScreenTooltipPermissions) SetStyles(v BasicScreenBlock) {
	o.Styles = v
}

// GetPermission returns the Permission field value
// If the value is explicit nil, the zero value for RequestPermission will be returned
func (o *ScreenTooltipPermissions) GetPermission() RequestPermission {
	if o == nil || o.Permission.Get() == nil {
		var ret RequestPermission
		return ret
	}

	return *o.Permission.Get()
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenTooltipPermissions) GetPermissionOk() (*RequestPermission, bool) {
	if o == nil {
    return nil, false
	}
	return o.Permission.Get(), o.Permission.IsSet()
}

// SetPermission sets field value
func (o *ScreenTooltipPermissions) SetPermission(v RequestPermission) {
	o.Permission.Set(&v)
}

// GetTimer returns the Timer field value
// If the value is explicit nil, the zero value for ScreenTimer will be returned
func (o *ScreenTooltipPermissions) GetTimer() ScreenTimer {
	if o == nil || o.Timer.Get() == nil {
		var ret ScreenTimer
		return ret
	}

	return *o.Timer.Get()
}

// GetTimerOk returns a tuple with the Timer field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenTooltipPermissions) GetTimerOk() (*ScreenTimer, bool) {
	if o == nil {
    return nil, false
	}
	return o.Timer.Get(), o.Timer.IsSet()
}

// SetTimer sets field value
func (o *ScreenTooltipPermissions) SetTimer(v ScreenTimer) {
	o.Timer.Set(&v)
}

// GetAnimationEnabled returns the AnimationEnabled field value
func (o *ScreenTooltipPermissions) GetAnimationEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AnimationEnabled
}

// GetAnimationEnabledOk returns a tuple with the AnimationEnabled field value
// and a boolean to check if the value has been set.
func (o *ScreenTooltipPermissions) GetAnimationEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AnimationEnabled, true
}

// SetAnimationEnabled sets field value
func (o *ScreenTooltipPermissions) SetAnimationEnabled(v bool) {
	o.AnimationEnabled = v
}

// GetUseLocalAssetsIfAvailable returns the UseLocalAssetsIfAvailable field value
func (o *ScreenTooltipPermissions) GetUseLocalAssetsIfAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseLocalAssetsIfAvailable
}

// GetUseLocalAssetsIfAvailableOk returns a tuple with the UseLocalAssetsIfAvailable field value
// and a boolean to check if the value has been set.
func (o *ScreenTooltipPermissions) GetUseLocalAssetsIfAvailableOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UseLocalAssetsIfAvailable, true
}

// SetUseLocalAssetsIfAvailable sets field value
func (o *ScreenTooltipPermissions) SetUseLocalAssetsIfAvailable(v bool) {
	o.UseLocalAssetsIfAvailable = v
}

// GetTooltipPermissionsDescription returns the TooltipPermissionsDescription field value
func (o *ScreenTooltipPermissions) GetTooltipPermissionsDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TooltipPermissionsDescription
}

// GetTooltipPermissionsDescriptionOk returns a tuple with the TooltipPermissionsDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenTooltipPermissions) GetTooltipPermissionsDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TooltipPermissionsDescription, true
}

// SetTooltipPermissionsDescription sets field value
func (o *ScreenTooltipPermissions) SetTooltipPermissionsDescription(v string) {
	o.TooltipPermissionsDescription = v
}

// GetTooltip returns the Tooltip field value
func (o *ScreenTooltipPermissions) GetTooltip() Tooltip {
	if o == nil {
		var ret Tooltip
		return ret
	}

	return o.Tooltip
}

// GetTooltipOk returns a tuple with the Tooltip field value
// and a boolean to check if the value has been set.
func (o *ScreenTooltipPermissions) GetTooltipOk() (*Tooltip, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Tooltip, true
}

// SetTooltip sets field value
func (o *ScreenTooltipPermissions) SetTooltip(v Tooltip) {
	o.Tooltip = v
}

func (o ScreenTooltipPermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["navigationBar"] = o.NavigationBar
	}
	if true {
		toSerialize["footer"] = o.Footer
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	if true {
		toSerialize["permission"] = o.Permission.Get()
	}
	if true {
		toSerialize["timer"] = o.Timer.Get()
	}
	if true {
		toSerialize["animationEnabled"] = o.AnimationEnabled
	}
	if true {
		toSerialize["useLocalAssetsIfAvailable"] = o.UseLocalAssetsIfAvailable
	}
	if true {
		toSerialize["tooltipPermissionsDescription"] = o.TooltipPermissionsDescription
	}
	if true {
		toSerialize["tooltip"] = o.Tooltip
	}
	return json.Marshal(toSerialize)
}

type NullableScreenTooltipPermissions struct {
	value *ScreenTooltipPermissions
	isSet bool
}

func (v NullableScreenTooltipPermissions) Get() *ScreenTooltipPermissions {
	return v.value
}

func (v *NullableScreenTooltipPermissions) Set(val *ScreenTooltipPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenTooltipPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenTooltipPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenTooltipPermissions(val *ScreenTooltipPermissions) *NullableScreenTooltipPermissions {
	return &NullableScreenTooltipPermissions{value: val, isSet: true}
}

func (v NullableScreenTooltipPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenTooltipPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


