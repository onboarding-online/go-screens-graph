/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PaywallFooterElementsOrder Paywall footer elements order
type PaywallFooterElementsOrder string

// List of PaywallFooterElementsOrder
const (
	PAYWALLFOOTERELEMENTSORDER_PURCHASE_FIRST PaywallFooterElementsOrder = "PurchaseFirst"
	PAYWALLFOOTERELEMENTSORDER_AUTO_RENEW_LABEL_FIRST PaywallFooterElementsOrder = "AutoRenewLabelFirst"
	PAYWALLFOOTERELEMENTSORDER_PAYWALL_FOOTER_ORDER1 PaywallFooterElementsOrder = "PaywallFooterOrder1"
	PAYWALLFOOTERELEMENTSORDER_PAYWALL_FOOTER_ORDER2 PaywallFooterElementsOrder = "PaywallFooterOrder2"
	PAYWALLFOOTERELEMENTSORDER_PAYWALL_FOOTER_ORDER3 PaywallFooterElementsOrder = "PaywallFooterOrder3"
	PAYWALLFOOTERELEMENTSORDER_PAYWALL_FOOTER_ORDER4 PaywallFooterElementsOrder = "PaywallFooterOrder4"
	PAYWALLFOOTERELEMENTSORDER_PAYWALL_FOOTER_ORDER5 PaywallFooterElementsOrder = "PaywallFooterOrder5"
)

// All allowed values of PaywallFooterElementsOrder enum
var AllowedPaywallFooterElementsOrderEnumValues = []PaywallFooterElementsOrder{
	"PurchaseFirst",
	"AutoRenewLabelFirst",
	"PaywallFooterOrder1",
	"PaywallFooterOrder2",
	"PaywallFooterOrder3",
	"PaywallFooterOrder4",
	"PaywallFooterOrder5",
}

func (v *PaywallFooterElementsOrder) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PaywallFooterElementsOrder(value)
	for _, existing := range AllowedPaywallFooterElementsOrderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PaywallFooterElementsOrder", value)
}

// NewPaywallFooterElementsOrderFromValue returns a pointer to a valid PaywallFooterElementsOrder
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPaywallFooterElementsOrderFromValue(v string) (*PaywallFooterElementsOrder, error) {
	ev := PaywallFooterElementsOrder(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PaywallFooterElementsOrder: valid values are %v", v, AllowedPaywallFooterElementsOrderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PaywallFooterElementsOrder) IsValid() bool {
	for _, existing := range AllowedPaywallFooterElementsOrderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PaywallFooterElementsOrder value
func (v PaywallFooterElementsOrder) Ptr() *PaywallFooterElementsOrder {
	return &v
}

type NullablePaywallFooterElementsOrder struct {
	value *PaywallFooterElementsOrder
	isSet bool
}

func (v NullablePaywallFooterElementsOrder) Get() *PaywallFooterElementsOrder {
	return v.value
}

func (v *NullablePaywallFooterElementsOrder) Set(val *PaywallFooterElementsOrder) {
	v.value = val
	v.isSet = true
}

func (v NullablePaywallFooterElementsOrder) IsSet() bool {
	return v.isSet
}

func (v *NullablePaywallFooterElementsOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaywallFooterElementsOrder(val *PaywallFooterElementsOrder) *NullablePaywallFooterElementsOrder {
	return &NullablePaywallFooterElementsOrder{value: val, isSet: true}
}

func (v NullablePaywallFooterElementsOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaywallFooterElementsOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

