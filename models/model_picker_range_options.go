/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PickerRangeOptions Range picker select options
type PickerRangeOptions struct {
	From float32 `json:"from"`
	To float32 `json:"to"`
}

// NewPickerRangeOptions instantiates a new PickerRangeOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPickerRangeOptions(from float32, to float32) *PickerRangeOptions {
	this := PickerRangeOptions{}
	this.From = from
	this.To = to
	return &this
}

// NewPickerRangeOptionsWithDefaults instantiates a new PickerRangeOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPickerRangeOptionsWithDefaults() *PickerRangeOptions {
	this := PickerRangeOptions{}
	return &this
}

// GetFrom returns the From field value
func (o *PickerRangeOptions) GetFrom() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *PickerRangeOptions) GetFromOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *PickerRangeOptions) SetFrom(v float32) {
	o.From = v
}

// GetTo returns the To field value
func (o *PickerRangeOptions) GetTo() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *PickerRangeOptions) GetToOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *PickerRangeOptions) SetTo(v float32) {
	o.To = v
}

func (o PickerRangeOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullablePickerRangeOptions struct {
	value *PickerRangeOptions
	isSet bool
}

func (v NullablePickerRangeOptions) Get() *PickerRangeOptions {
	return v.value
}

func (v *NullablePickerRangeOptions) Set(val *PickerRangeOptions) {
	v.value = val
	v.isSet = true
}

func (v NullablePickerRangeOptions) IsSet() bool {
	return v.isSet
}

func (v *NullablePickerRangeOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePickerRangeOptions(val *PickerRangeOptions) *NullablePickerRangeOptions {
	return &NullablePickerRangeOptions{value: val, isSet: true}
}

func (v NullablePickerRangeOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePickerRangeOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


