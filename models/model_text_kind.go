/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// TextKind Text kind
type TextKind string

// List of TextKind
const (
	TEXTKIND_DEFAULT TextKind = "default"
	TEXTKIND_TEMPLATE TextKind = "template"
)

// All allowed values of TextKind enum
var AllowedTextKindEnumValues = []TextKind{
	"default",
	"template",
}

func (v *TextKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TextKind(value)
	for _, existing := range AllowedTextKindEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TextKind", value)
}

// NewTextKindFromValue returns a pointer to a valid TextKind
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTextKindFromValue(v string) (*TextKind, error) {
	ev := TextKind(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TextKind: valid values are %v", v, AllowedTextKindEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TextKind) IsValid() bool {
	for _, existing := range AllowedTextKindEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TextKind value
func (v TextKind) Ptr() *TextKind {
	return &v
}

type NullableTextKind struct {
	value *TextKind
	isSet bool
}

func (v NullableTextKind) Get() *TextKind {
	return v.value
}

func (v *NullableTextKind) Set(val *TextKind) {
	v.value = val
	v.isSet = true
}

func (v NullableTextKind) IsSet() bool {
	return v.isSet
}

func (v *NullableTextKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextKind(val *TextKind) *NullableTextKind {
	return &NullableTextKind{value: val, isSet: true}
}

func (v NullableTextKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

