/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ScreenImageTitleSubtitleMultipleSelectionList struct for ScreenImageTitleSubtitleMultipleSelectionList
type ScreenImageTitleSubtitleMultipleSelectionList struct {
	NavigationBar NavigationBar `json:"navigationBar"`
	Footer Footer `json:"footer"`
	Styles BasicScreenBlock `json:"styles"`
	Permission NullableRequestPermission `json:"permission"`
	Timer NullableScreenTimer `json:"timer"`
	AnimationEnabled bool `json:"animationEnabled"`
	UseLocalAssetsIfAvailable bool `json:"useLocalAssetsIfAvailable"`
	ImageTitleSubtitleMultipleSelectionListDescription string `json:"imageTitleSubtitleMultipleSelectionListDescription"`
	Image Image `json:"image"`
	// Defines the scale of the image in percentage
	ImageScale *float32 `json:"imageScale,omitempty"`
	Title Text `json:"title"`
	Subtitle Text `json:"subtitle"`
	List MultipleSelectionList `json:"list"`
}

// NewScreenImageTitleSubtitleMultipleSelectionList instantiates a new ScreenImageTitleSubtitleMultipleSelectionList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenImageTitleSubtitleMultipleSelectionList(navigationBar NavigationBar, footer Footer, styles BasicScreenBlock, permission NullableRequestPermission, timer NullableScreenTimer, animationEnabled bool, useLocalAssetsIfAvailable bool, imageTitleSubtitleMultipleSelectionListDescription string, image Image, title Text, subtitle Text, list MultipleSelectionList) *ScreenImageTitleSubtitleMultipleSelectionList {
	this := ScreenImageTitleSubtitleMultipleSelectionList{}
	this.NavigationBar = navigationBar
	this.Footer = footer
	this.Styles = styles
	this.Permission = permission
	this.Timer = timer
	this.AnimationEnabled = animationEnabled
	this.UseLocalAssetsIfAvailable = useLocalAssetsIfAvailable
	this.ImageTitleSubtitleMultipleSelectionListDescription = imageTitleSubtitleMultipleSelectionListDescription
	this.Image = image
	this.Title = title
	this.Subtitle = subtitle
	this.List = list
	return &this
}

// NewScreenImageTitleSubtitleMultipleSelectionListWithDefaults instantiates a new ScreenImageTitleSubtitleMultipleSelectionList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenImageTitleSubtitleMultipleSelectionListWithDefaults() *ScreenImageTitleSubtitleMultipleSelectionList {
	this := ScreenImageTitleSubtitleMultipleSelectionList{}
	return &this
}

// GetNavigationBar returns the NavigationBar field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetNavigationBar() NavigationBar {
	if o == nil {
		var ret NavigationBar
		return ret
	}

	return o.NavigationBar
}

// GetNavigationBarOk returns a tuple with the NavigationBar field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetNavigationBarOk() (*NavigationBar, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NavigationBar, true
}

// SetNavigationBar sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetNavigationBar(v NavigationBar) {
	o.NavigationBar = v
}

// GetFooter returns the Footer field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetFooter() Footer {
	if o == nil {
		var ret Footer
		return ret
	}

	return o.Footer
}

// GetFooterOk returns a tuple with the Footer field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetFooterOk() (*Footer, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Footer, true
}

// SetFooter sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetFooter(v Footer) {
	o.Footer = v
}

// GetStyles returns the Styles field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetStyles() BasicScreenBlock {
	if o == nil {
		var ret BasicScreenBlock
		return ret
	}

	return o.Styles
}

// GetStylesOk returns a tuple with the Styles field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetStylesOk() (*BasicScreenBlock, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Styles, true
}

// SetStyles sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetStyles(v BasicScreenBlock) {
	o.Styles = v
}

// GetPermission returns the Permission field value
// If the value is explicit nil, the zero value for RequestPermission will be returned
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetPermission() RequestPermission {
	if o == nil || o.Permission.Get() == nil {
		var ret RequestPermission
		return ret
	}

	return *o.Permission.Get()
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetPermissionOk() (*RequestPermission, bool) {
	if o == nil {
    return nil, false
	}
	return o.Permission.Get(), o.Permission.IsSet()
}

// SetPermission sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetPermission(v RequestPermission) {
	o.Permission.Set(&v)
}

// GetTimer returns the Timer field value
// If the value is explicit nil, the zero value for ScreenTimer will be returned
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetTimer() ScreenTimer {
	if o == nil || o.Timer.Get() == nil {
		var ret ScreenTimer
		return ret
	}

	return *o.Timer.Get()
}

// GetTimerOk returns a tuple with the Timer field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetTimerOk() (*ScreenTimer, bool) {
	if o == nil {
    return nil, false
	}
	return o.Timer.Get(), o.Timer.IsSet()
}

// SetTimer sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetTimer(v ScreenTimer) {
	o.Timer.Set(&v)
}

// GetAnimationEnabled returns the AnimationEnabled field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetAnimationEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AnimationEnabled
}

// GetAnimationEnabledOk returns a tuple with the AnimationEnabled field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetAnimationEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AnimationEnabled, true
}

// SetAnimationEnabled sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetAnimationEnabled(v bool) {
	o.AnimationEnabled = v
}

// GetUseLocalAssetsIfAvailable returns the UseLocalAssetsIfAvailable field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetUseLocalAssetsIfAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseLocalAssetsIfAvailable
}

// GetUseLocalAssetsIfAvailableOk returns a tuple with the UseLocalAssetsIfAvailable field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetUseLocalAssetsIfAvailableOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UseLocalAssetsIfAvailable, true
}

// SetUseLocalAssetsIfAvailable sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetUseLocalAssetsIfAvailable(v bool) {
	o.UseLocalAssetsIfAvailable = v
}

// GetImageTitleSubtitleMultipleSelectionListDescription returns the ImageTitleSubtitleMultipleSelectionListDescription field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetImageTitleSubtitleMultipleSelectionListDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageTitleSubtitleMultipleSelectionListDescription
}

// GetImageTitleSubtitleMultipleSelectionListDescriptionOk returns a tuple with the ImageTitleSubtitleMultipleSelectionListDescription field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetImageTitleSubtitleMultipleSelectionListDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ImageTitleSubtitleMultipleSelectionListDescription, true
}

// SetImageTitleSubtitleMultipleSelectionListDescription sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetImageTitleSubtitleMultipleSelectionListDescription(v string) {
	o.ImageTitleSubtitleMultipleSelectionListDescription = v
}

// GetImage returns the Image field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetImage() Image {
	if o == nil {
		var ret Image
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetImageOk() (*Image, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetImage(v Image) {
	o.Image = v
}

// GetImageScale returns the ImageScale field value if set, zero value otherwise.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetImageScale() float32 {
	if o == nil || isNil(o.ImageScale) {
		var ret float32
		return ret
	}
	return *o.ImageScale
}

// GetImageScaleOk returns a tuple with the ImageScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetImageScaleOk() (*float32, bool) {
	if o == nil || isNil(o.ImageScale) {
    return nil, false
	}
	return o.ImageScale, true
}

// HasImageScale returns a boolean if a field has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) HasImageScale() bool {
	if o != nil && !isNil(o.ImageScale) {
		return true
	}

	return false
}

// SetImageScale gets a reference to the given float32 and assigns it to the ImageScale field.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetImageScale(v float32) {
	o.ImageScale = &v
}

// GetTitle returns the Title field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetTitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetTitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetTitle(v Text) {
	o.Title = v
}

// GetSubtitle returns the Subtitle field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetSubtitle() Text {
	if o == nil {
		var ret Text
		return ret
	}

	return o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetSubtitleOk() (*Text, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Subtitle, true
}

// SetSubtitle sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetSubtitle(v Text) {
	o.Subtitle = v
}

// GetList returns the List field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetList() MultipleSelectionList {
	if o == nil {
		var ret MultipleSelectionList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *ScreenImageTitleSubtitleMultipleSelectionList) GetListOk() (*MultipleSelectionList, bool) {
	if o == nil {
    return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *ScreenImageTitleSubtitleMultipleSelectionList) SetList(v MultipleSelectionList) {
	o.List = v
}

func (o ScreenImageTitleSubtitleMultipleSelectionList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["navigationBar"] = o.NavigationBar
	}
	if true {
		toSerialize["footer"] = o.Footer
	}
	if true {
		toSerialize["styles"] = o.Styles
	}
	if true {
		toSerialize["permission"] = o.Permission.Get()
	}
	if true {
		toSerialize["timer"] = o.Timer.Get()
	}
	if true {
		toSerialize["animationEnabled"] = o.AnimationEnabled
	}
	if true {
		toSerialize["useLocalAssetsIfAvailable"] = o.UseLocalAssetsIfAvailable
	}
	if true {
		toSerialize["imageTitleSubtitleMultipleSelectionListDescription"] = o.ImageTitleSubtitleMultipleSelectionListDescription
	}
	if true {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.ImageScale) {
		toSerialize["imageScale"] = o.ImageScale
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["subtitle"] = o.Subtitle
	}
	if true {
		toSerialize["list"] = o.List
	}
	return json.Marshal(toSerialize)
}

type NullableScreenImageTitleSubtitleMultipleSelectionList struct {
	value *ScreenImageTitleSubtitleMultipleSelectionList
	isSet bool
}

func (v NullableScreenImageTitleSubtitleMultipleSelectionList) Get() *ScreenImageTitleSubtitleMultipleSelectionList {
	return v.value
}

func (v *NullableScreenImageTitleSubtitleMultipleSelectionList) Set(val *ScreenImageTitleSubtitleMultipleSelectionList) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenImageTitleSubtitleMultipleSelectionList) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenImageTitleSubtitleMultipleSelectionList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenImageTitleSubtitleMultipleSelectionList(val *ScreenImageTitleSubtitleMultipleSelectionList) *NullableScreenImageTitleSubtitleMultipleSelectionList {
	return &NullableScreenImageTitleSubtitleMultipleSelectionList{value: val, isSet: true}
}

func (v NullableScreenImageTitleSubtitleMultipleSelectionList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenImageTitleSubtitleMultipleSelectionList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


