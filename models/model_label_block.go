/*
Onboarding online screens graph models

Onboarding online screens graph models and interfaces

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// LabelBlock Styles for label block
type LabelBlock struct {
	TextAlign *LabelPosition `json:"textAlign,omitempty"`
	FontFamily *FontFamily `json:"fontFamily,omitempty"`
	// Height of line
	LineHeight *float32 `json:"lineHeight,omitempty"`
	// Font size
	FontSize *float32 `json:"fontSize,omitempty"`
	// Font weight
	FontWeight *float32 `json:"fontWeight,omitempty"`
	// Color for text
	Color *string `json:"color,omitempty"`
	// Alternative color for text
	AlternativeColor *string `json:"alternativeColor,omitempty"`
	// Background color for text block
	BackgroundColor *string `json:"backgroundColor,omitempty"`
	// Padding left for container
	PaddingLeft *float32 `json:"paddingLeft,omitempty"`
	// Padding right for container
	PaddingRight *float32 `json:"paddingRight,omitempty"`
	// Padding top for container
	PaddingTop *float32 `json:"paddingTop,omitempty"`
	// Padding bottom for container
	PaddingBottom *float32 `json:"paddingBottom,omitempty"`
}

// NewLabelBlock instantiates a new LabelBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLabelBlock() *LabelBlock {
	this := LabelBlock{}
	return &this
}

// NewLabelBlockWithDefaults instantiates a new LabelBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLabelBlockWithDefaults() *LabelBlock {
	this := LabelBlock{}
	return &this
}

// GetTextAlign returns the TextAlign field value if set, zero value otherwise.
func (o *LabelBlock) GetTextAlign() LabelPosition {
	if o == nil || isNil(o.TextAlign) {
		var ret LabelPosition
		return ret
	}
	return *o.TextAlign
}

// GetTextAlignOk returns a tuple with the TextAlign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetTextAlignOk() (*LabelPosition, bool) {
	if o == nil || isNil(o.TextAlign) {
    return nil, false
	}
	return o.TextAlign, true
}

// HasTextAlign returns a boolean if a field has been set.
func (o *LabelBlock) HasTextAlign() bool {
	if o != nil && !isNil(o.TextAlign) {
		return true
	}

	return false
}

// SetTextAlign gets a reference to the given LabelPosition and assigns it to the TextAlign field.
func (o *LabelBlock) SetTextAlign(v LabelPosition) {
	o.TextAlign = &v
}

// GetFontFamily returns the FontFamily field value if set, zero value otherwise.
func (o *LabelBlock) GetFontFamily() FontFamily {
	if o == nil || isNil(o.FontFamily) {
		var ret FontFamily
		return ret
	}
	return *o.FontFamily
}

// GetFontFamilyOk returns a tuple with the FontFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetFontFamilyOk() (*FontFamily, bool) {
	if o == nil || isNil(o.FontFamily) {
    return nil, false
	}
	return o.FontFamily, true
}

// HasFontFamily returns a boolean if a field has been set.
func (o *LabelBlock) HasFontFamily() bool {
	if o != nil && !isNil(o.FontFamily) {
		return true
	}

	return false
}

// SetFontFamily gets a reference to the given FontFamily and assigns it to the FontFamily field.
func (o *LabelBlock) SetFontFamily(v FontFamily) {
	o.FontFamily = &v
}

// GetLineHeight returns the LineHeight field value if set, zero value otherwise.
func (o *LabelBlock) GetLineHeight() float32 {
	if o == nil || isNil(o.LineHeight) {
		var ret float32
		return ret
	}
	return *o.LineHeight
}

// GetLineHeightOk returns a tuple with the LineHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetLineHeightOk() (*float32, bool) {
	if o == nil || isNil(o.LineHeight) {
    return nil, false
	}
	return o.LineHeight, true
}

// HasLineHeight returns a boolean if a field has been set.
func (o *LabelBlock) HasLineHeight() bool {
	if o != nil && !isNil(o.LineHeight) {
		return true
	}

	return false
}

// SetLineHeight gets a reference to the given float32 and assigns it to the LineHeight field.
func (o *LabelBlock) SetLineHeight(v float32) {
	o.LineHeight = &v
}

// GetFontSize returns the FontSize field value if set, zero value otherwise.
func (o *LabelBlock) GetFontSize() float32 {
	if o == nil || isNil(o.FontSize) {
		var ret float32
		return ret
	}
	return *o.FontSize
}

// GetFontSizeOk returns a tuple with the FontSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetFontSizeOk() (*float32, bool) {
	if o == nil || isNil(o.FontSize) {
    return nil, false
	}
	return o.FontSize, true
}

// HasFontSize returns a boolean if a field has been set.
func (o *LabelBlock) HasFontSize() bool {
	if o != nil && !isNil(o.FontSize) {
		return true
	}

	return false
}

// SetFontSize gets a reference to the given float32 and assigns it to the FontSize field.
func (o *LabelBlock) SetFontSize(v float32) {
	o.FontSize = &v
}

// GetFontWeight returns the FontWeight field value if set, zero value otherwise.
func (o *LabelBlock) GetFontWeight() float32 {
	if o == nil || isNil(o.FontWeight) {
		var ret float32
		return ret
	}
	return *o.FontWeight
}

// GetFontWeightOk returns a tuple with the FontWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetFontWeightOk() (*float32, bool) {
	if o == nil || isNil(o.FontWeight) {
    return nil, false
	}
	return o.FontWeight, true
}

// HasFontWeight returns a boolean if a field has been set.
func (o *LabelBlock) HasFontWeight() bool {
	if o != nil && !isNil(o.FontWeight) {
		return true
	}

	return false
}

// SetFontWeight gets a reference to the given float32 and assigns it to the FontWeight field.
func (o *LabelBlock) SetFontWeight(v float32) {
	o.FontWeight = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *LabelBlock) GetColor() string {
	if o == nil || isNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetColorOk() (*string, bool) {
	if o == nil || isNil(o.Color) {
    return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *LabelBlock) HasColor() bool {
	if o != nil && !isNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *LabelBlock) SetColor(v string) {
	o.Color = &v
}

// GetAlternativeColor returns the AlternativeColor field value if set, zero value otherwise.
func (o *LabelBlock) GetAlternativeColor() string {
	if o == nil || isNil(o.AlternativeColor) {
		var ret string
		return ret
	}
	return *o.AlternativeColor
}

// GetAlternativeColorOk returns a tuple with the AlternativeColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetAlternativeColorOk() (*string, bool) {
	if o == nil || isNil(o.AlternativeColor) {
    return nil, false
	}
	return o.AlternativeColor, true
}

// HasAlternativeColor returns a boolean if a field has been set.
func (o *LabelBlock) HasAlternativeColor() bool {
	if o != nil && !isNil(o.AlternativeColor) {
		return true
	}

	return false
}

// SetAlternativeColor gets a reference to the given string and assigns it to the AlternativeColor field.
func (o *LabelBlock) SetAlternativeColor(v string) {
	o.AlternativeColor = &v
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *LabelBlock) GetBackgroundColor() string {
	if o == nil || isNil(o.BackgroundColor) {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetBackgroundColorOk() (*string, bool) {
	if o == nil || isNil(o.BackgroundColor) {
    return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *LabelBlock) HasBackgroundColor() bool {
	if o != nil && !isNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *LabelBlock) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// GetPaddingLeft returns the PaddingLeft field value if set, zero value otherwise.
func (o *LabelBlock) GetPaddingLeft() float32 {
	if o == nil || isNil(o.PaddingLeft) {
		var ret float32
		return ret
	}
	return *o.PaddingLeft
}

// GetPaddingLeftOk returns a tuple with the PaddingLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetPaddingLeftOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingLeft) {
    return nil, false
	}
	return o.PaddingLeft, true
}

// HasPaddingLeft returns a boolean if a field has been set.
func (o *LabelBlock) HasPaddingLeft() bool {
	if o != nil && !isNil(o.PaddingLeft) {
		return true
	}

	return false
}

// SetPaddingLeft gets a reference to the given float32 and assigns it to the PaddingLeft field.
func (o *LabelBlock) SetPaddingLeft(v float32) {
	o.PaddingLeft = &v
}

// GetPaddingRight returns the PaddingRight field value if set, zero value otherwise.
func (o *LabelBlock) GetPaddingRight() float32 {
	if o == nil || isNil(o.PaddingRight) {
		var ret float32
		return ret
	}
	return *o.PaddingRight
}

// GetPaddingRightOk returns a tuple with the PaddingRight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetPaddingRightOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingRight) {
    return nil, false
	}
	return o.PaddingRight, true
}

// HasPaddingRight returns a boolean if a field has been set.
func (o *LabelBlock) HasPaddingRight() bool {
	if o != nil && !isNil(o.PaddingRight) {
		return true
	}

	return false
}

// SetPaddingRight gets a reference to the given float32 and assigns it to the PaddingRight field.
func (o *LabelBlock) SetPaddingRight(v float32) {
	o.PaddingRight = &v
}

// GetPaddingTop returns the PaddingTop field value if set, zero value otherwise.
func (o *LabelBlock) GetPaddingTop() float32 {
	if o == nil || isNil(o.PaddingTop) {
		var ret float32
		return ret
	}
	return *o.PaddingTop
}

// GetPaddingTopOk returns a tuple with the PaddingTop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetPaddingTopOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingTop) {
    return nil, false
	}
	return o.PaddingTop, true
}

// HasPaddingTop returns a boolean if a field has been set.
func (o *LabelBlock) HasPaddingTop() bool {
	if o != nil && !isNil(o.PaddingTop) {
		return true
	}

	return false
}

// SetPaddingTop gets a reference to the given float32 and assigns it to the PaddingTop field.
func (o *LabelBlock) SetPaddingTop(v float32) {
	o.PaddingTop = &v
}

// GetPaddingBottom returns the PaddingBottom field value if set, zero value otherwise.
func (o *LabelBlock) GetPaddingBottom() float32 {
	if o == nil || isNil(o.PaddingBottom) {
		var ret float32
		return ret
	}
	return *o.PaddingBottom
}

// GetPaddingBottomOk returns a tuple with the PaddingBottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelBlock) GetPaddingBottomOk() (*float32, bool) {
	if o == nil || isNil(o.PaddingBottom) {
    return nil, false
	}
	return o.PaddingBottom, true
}

// HasPaddingBottom returns a boolean if a field has been set.
func (o *LabelBlock) HasPaddingBottom() bool {
	if o != nil && !isNil(o.PaddingBottom) {
		return true
	}

	return false
}

// SetPaddingBottom gets a reference to the given float32 and assigns it to the PaddingBottom field.
func (o *LabelBlock) SetPaddingBottom(v float32) {
	o.PaddingBottom = &v
}

func (o LabelBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TextAlign) {
		toSerialize["textAlign"] = o.TextAlign
	}
	if !isNil(o.FontFamily) {
		toSerialize["fontFamily"] = o.FontFamily
	}
	if !isNil(o.LineHeight) {
		toSerialize["lineHeight"] = o.LineHeight
	}
	if !isNil(o.FontSize) {
		toSerialize["fontSize"] = o.FontSize
	}
	if !isNil(o.FontWeight) {
		toSerialize["fontWeight"] = o.FontWeight
	}
	if !isNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !isNil(o.AlternativeColor) {
		toSerialize["alternativeColor"] = o.AlternativeColor
	}
	if !isNil(o.BackgroundColor) {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if !isNil(o.PaddingLeft) {
		toSerialize["paddingLeft"] = o.PaddingLeft
	}
	if !isNil(o.PaddingRight) {
		toSerialize["paddingRight"] = o.PaddingRight
	}
	if !isNil(o.PaddingTop) {
		toSerialize["paddingTop"] = o.PaddingTop
	}
	if !isNil(o.PaddingBottom) {
		toSerialize["paddingBottom"] = o.PaddingBottom
	}
	return json.Marshal(toSerialize)
}

type NullableLabelBlock struct {
	value *LabelBlock
	isSet bool
}

func (v NullableLabelBlock) Get() *LabelBlock {
	return v.value
}

func (v *NullableLabelBlock) Set(val *LabelBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableLabelBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableLabelBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLabelBlock(val *LabelBlock) *NullableLabelBlock {
	return &NullableLabelBlock{value: val, isSet: true}
}

func (v NullableLabelBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLabelBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


